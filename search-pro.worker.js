const V=Object.entries,et=Object.fromEntries,st="ENTRIES",L="KEYS",T="VALUES",_="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===_)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==_).join("")}value(){return E(this._path).node.get(_)}result(){switch(this._type){case T:return this.value();case L:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],nt=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return R(e,t,s,n,i,1,o,""),n},R=(e,t,s,n,o,u,i,r)=>{const d=u*i;t:for(const c of e.keys())if(c===_){const a=o[d-1];a<=s&&n.set(r,[e.get(c),a])}else{let a=u;for(let h=0;h<c.length;++h,++a){const g=c[h],m=i*a,p=m-i;let l=o[m];const f=Math.max(0,a-s-1),y=Math.min(i-1,a+s);for(let F=f;F<y;++F){const v=g!==t[F],z=o[p+F]+ +v,A=o[p+F+1]+1,w=o[m+F]+1,j=o[m+F+1]=Math.min(z,A,w);j<l&&(l=j)}if(l>s)continue t}R(e.get(c),t,s,n,o,a,i,r+c)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==_&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ot(this._tree,t)}entries(){return new D(this,st)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return nt(this._tree,t,s)}get(t){const s=k(this._tree,t);return s!==void 0?s.get(_):void 0}has(t){const s=k(this._tree,t);return s!==void 0&&s.has(_)}keys(){return new D(this,L)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,I(this._tree,t).set(_,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);return n.set(_,s(n.get(_))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);let o=n.get(_);return o===void 0&&n.set(_,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==_&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},k=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==_&&t.startsWith(s))return k(e.get(s),t.slice(s.length))},I=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==_&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const d=e.get(u);if(r===u.length)e=d;else{const c=new Map;c.set(u.slice(r),d),e.set(t.slice(n,n+r),c),e.delete(u),e=c}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ot=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(_),s.size===0)W(n);else if(s.size===1){const[o,u]=s.entries().next().value;q(n,o,u)}}},W=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)W(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==_&&q(e.slice(0,-1),n,o)}},q=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],ut=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},it=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,M="or",$="and",rt="and_not",ct=(e,t)=>{e.includes(t)||e.push(t)},N=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},P=({score:e},{score:t})=>t-e,lt=()=>new Map,b=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,ht={[M]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),N(n.terms,u)}}return e},[$]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);N(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[rt]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},dt=(e,t,s,n,o,u)=>{const{k:i,b:r,d}=u;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/o)))},at=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},ft=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,lt),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},gt={k:1.2,b:.7,d:.5},mt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(it),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof console?.[e]=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:M,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:gt},pt={combineWith:$,prefix:(e,t,s)=>t===s.length-1},Ft={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},_t={...Ft,...U},K=Symbol("*"),yt=(e,t)=>{const s=new Map,n={...e._options.searchOptions,...t};for(const[o,u]of e._documentIds){const i=n.boostDocument?n.boostDocument(u,"",e._storedFields.get(o)):1;s.set(o,{score:i,terms:[],match:{}})}return s},X=(e,t=M)=>{if(e.length===0)return new Map;const s=t.toLowerCase(),n=ht[s];if(!n)throw new Error(`Invalid combination operator: ${t}`);return e.reduce(n)||new Map},S=(e,t,s,n,o,u,i,r,d=new Map)=>{if(o==null)return d;for(const c of Object.keys(u)){const a=u[c],h=e._fieldIds[c],g=o.get(h);if(g==null)continue;let m=g.size;const p=e._avgFieldLength[h];for(const l of g.keys()){if(!e._documentIds.has(l)){ft(e,h,l,s),m-=1;continue}const f=i?i(e._documentIds.get(l),s,e._storedFields.get(l)):1;if(!f)continue;const y=g.get(l),F=e._fieldLength.get(l)[h],v=dt(y,m,e._documentCount,F,p,r),z=n*a*f*v,A=d.get(l);if(A){A.score+=z,ct(A.terms,t);const w=G(A.match,s);w?w.push(c):A.match[s]=[c]}else d.set(l,{score:z,terms:[t],match:{[s]:[c]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((l,f)=>({...l,[f]:G(n.boost,f)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:c,prefix:a}={...J.weights,...i},h=e._index.get(t.term),g=S(e,t.term,t.term,1,h,o,u,d);let m,p;if(t.prefix&&(m=e._index.atPrefix(t.term)),t.fuzzy){const l=t.fuzzy===!0?.2:t.fuzzy,f=l<1?Math.min(r,Math.round(t.term.length*l)):l;f&&(p=e._index.fuzzyGet(t.term,f))}if(m)for(const[l,f]of m){const y=l.length-t.term.length;if(!y)continue;p?.delete(l);const F=a*l.length/(l.length+.3*y);S(e,t.term,l,F,f,o,u,d,g)}if(p)for(const l of p.keys()){const[f,y]=p.get(l);if(!y)continue;const F=c*l.length/(l.length+y);S(e,t.term,l,F,f,o,u,d,g)}return g},Y=(e,t,s={})=>{if(t===K)return yt(e,s);if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(g=>Y(e,g,a));return X(h,a.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:d}=i,c=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(at(i)).map(a=>At(e,a,i));return X(c,i.combineWith)},Q=(e,t,s={})=>{const n=Y(e,t,s),o=[];for(const[u,{score:i,terms:r,match:d}]of n){const c=r.length||1,a={id:e._documentIds.get(u),score:i*c,terms:Object.keys(d),queryTerms:r,match:d};Object.assign(a,e._storedFields.get(u)),(s.filter==null||s.filter(a))&&o.push(a)}return t===K&&s.boostDocument==null&&e._options.searchOptions.boostDocument==null||o.sort(P),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of Q(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=u,d.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:d}]of n)o.push({suggestion:u,terms:r,score:i/d});return o.sort(P),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(t?.fields==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?_t:t.autoVacuum;this._options={...mt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...pt,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:c},a)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=b(n),h._idToShortId=new Map,h._fieldIds=o,h._fieldLength=b(u),h._avgFieldLength=i,h._storedFields=b(r),h._dirtCount=d||0,h._index=new C;for(const[g,m]of h._documentIds)h._idToShortId.set(m,g);for(const[g,m]of e){const p=new Map;for(const l of Object.keys(m)){let f=m[l];c===1&&(f=f.ds),p.set(parseInt(l,10),b(f))}h._index.set(g,p)}return h},B=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(c,a=!1)=>{let h="";i===0?h=c.length>20?`… ${c.slice(-20)}`:c:a?h=c.length+i>100?`${c.slice(0,100-i)}… `:c:h=c.length>20?`${c.slice(0,20)} … ${c.slice(-20)}`:c,h&&o.push(h),i+=h.length,a||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let d=s.indexOf(n,u);if(d===-1)return null;for(;d>=0;){const c=d+n.length;if(r(e.slice(u,d)),u=c,i>100)break;d=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},wt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),xt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),Z=(e,t,s={})=>{const n={};return Q(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...s}).forEach(o=>{const{id:u,terms:i,score:r}=o,d=u.includes("@"),c=u.includes("#"),[a,h]=u.split(/[#@]/),g=Number(a),m=i.sort((l,f)=>l.length-f.length).filter((l,f)=>i.slice(f+1).every(y=>!y.includes(l))),{contents:p}=n[g]??={title:"",contents:[]};if(d)p.push([{type:"customField",id:g,index:h,display:m.map(l=>o.c.map(f=>B(f,l))).flat().filter(l=>l!==null)},r]);else{const l=m.map(f=>B(o.h,f)).filter(f=>f!==null);if(l.length&&p.push([{type:c?"heading":"title",id:g,...c&&{anchor:h},display:l},r]),"t"in o)for(const f of o.t){const y=m.map(F=>B(f,F)).filter(F=>F!==null);y.length&&p.push([{type:"text",id:g,...c&&{anchor:h},display:y},r])}}}),V(n).sort(([,o],[,u])=>"max"==="total"?wt(o,u):xt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=ut(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},tt=(e,t,s={})=>{const n=Ct(t,e,{fuzzy:.2,maxFuzzy:3,...s}).map(({suggestion:o})=>o);return e.includes(" ")?n:n.filter(o=>!o.includes(" "))},bt=et(V(JSON.parse("{\"/\":{\"documentCount\":10,\"nextId\":10,\"documentIds\":{\"0\":\"26\",\"1\":\"27\",\"2\":\"28\",\"3\":\"29\",\"4\":\"30\",\"5\":\"31\",\"6\":\"32\",\"7\":\"33\",\"8\":\"34\",\"9\":\"35\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1,3],\"1\":[1],\"2\":[1],\"3\":[1],\"4\":[1],\"5\":[2],\"6\":[1],\"7\":[1],\"8\":[1],\"9\":[1]},\"averageFieldLength\":[1.1,3],\"storedFields\":{\"0\":{\"h\":\"\",\"t\":[\"404 Not Found\"]},\"1\":{\"h\":\"Posts\"},\"2\":{\"h\":\"Tools\"},\"3\":{\"h\":\"Apple\"},\"4\":{\"h\":\"Banana\"},\"5\":{\"h\":\"User Space\"},\"6\":{\"h\":\"Debug\"},\"7\":{\"h\":\"Posts\"},\"8\":{\"h\":\"Software\"},\"9\":{\"h\":\"Philosophy\"}},\"dirtCount\":0,\"index\":[[\"philosophy\",{\"0\":{\"9\":1}}],[\"posts\",{\"0\":{\"1\":1,\"7\":1}}],[\"software\",{\"0\":{\"8\":1}}],[\"space\",{\"0\":{\"5\":1}}],[\"debug\",{\"0\":{\"6\":1}}],[\"user\",{\"0\":{\"5\":1}}],[\"banana\",{\"0\":{\"4\":1}}],[\"apple\",{\"0\":{\"3\":1}}],[\"tools\",{\"0\":{\"2\":1}}],[\"found\",{\"1\":{\"0\":1}}],[\"not\",{\"1\":{\"0\":1}}],[\"404\",{\"1\":{\"0\":1}}]],\"serializationVersion\":2},\"/zh/\":{\"documentCount\":47,\"nextId\":47,\"documentIds\":{\"0\":\"2\",\"1\":\"3\",\"2\":\"14\",\"3\":\"14#gluc-ahp-front\",\"4\":\"14@0\",\"5\":\"14@1\",\"6\":\"23\",\"7\":\"23#_1-开篇问题\",\"8\":\"23#_2-关于jemalloc\",\"9\":\"23#_3-内存泄漏\",\"10\":\"23#_4-profiling的内在逻辑\",\"11\":\"23#_5-jemalloc的使用方式\",\"12\":\"23#_6-jemalloc的安装\",\"13\":\"23#_7-jemalloc关键文件说明\",\"14\":\"23#_8-编译带prof功能的jemalloc库\",\"15\":\"23#_9-内存泄漏和内存增长测试例子\",\"16\":\"23#_10-编译测试程序\",\"17\":\"23#_11-jemalloc运行时控制\",\"18\":\"23#_11-2-通过接口\",\"19\":\"23#_11-3-启用和激活prof\",\"20\":\"23#_11-4-profiling的输出\",\"21\":\"23#_11-5-profiling的基本流程\",\"22\":\"23#_11-6-触发profiling的2类方法\",\"23\":\"23#_12-测试-直接使用内存泄漏检查功能\",\"24\":\"23#_13-测试-通过heap对比来分析泄漏和增长\",\"25\":\"23#_14-jeprof工具的用法举例\",\"26\":\"23#_15-jemalloc内存切片的缺陷\",\"27\":\"23#_16-最后\",\"28\":\"23#参考资料\",\"29\":\"23@0\",\"30\":\"23@1\",\"31\":\"24\",\"32\":\"24#开篇问题\",\"33\":\"24#问题跟踪思路\",\"34\":\"24#使用gdb暂停指定的几个线程\",\"35\":\"24#使用fthread暂停指定线程\",\"36\":\"24#fthread简介\",\"37\":\"24#获取fthread\",\"38\":\"24#使用fthread\",\"39\":\"24#暂停线程的原理\",\"40\":\"24#参考资料\",\"41\":\"24@0\",\"42\":\"24@1\",\"43\":\"25\",\"44\":\"25#世界究竟是概念\",\"45\":\"25@0\",\"46\":\"25@1\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1,7],\"1\":[1,3],\"2\":[1],\"3\":[3,5],\"4\":[null,null,1],\"5\":[null,null,1],\"6\":[2,9],\"7\":[1,64],\"8\":[1,39],\"9\":[1,104],\"10\":[1,133],\"11\":[1,22],\"12\":[1,55],\"13\":[1,91],\"14\":[1,29],\"15\":[1,157],\"16\":[1,62],\"17\":[1,20],\"18\":[3,12],\"19\":[3,21],\"20\":[3,13],\"21\":[4,26],\"22\":[3,24],\"23\":[1,314],\"24\":[1,104],\"25\":[1,41],\"26\":[1,33],\"27\":[1,8],\"28\":[1,65],\"29\":[null,null,2],\"30\":[null,null,5],\"31\":[1],\"32\":[1,22],\"33\":[1,64],\"34\":[1,143],\"35\":[1],\"36\":[1,3],\"37\":[1,15],\"38\":[1,80],\"39\":[1,92],\"40\":[1,28],\"41\":[null,null,1],\"42\":[null,null,5],\"43\":[1],\"44\":[1,234],\"45\":[null,null,2],\"46\":[null,null,3]},\"averageFieldLength\":[1.373703392206336,55.967331224051165,0.7307944007278416],\"storedFields\":{\"0\":{\"h\":\"博客主页\",\"t\":[\"我们 或许 可以 一起 结伴 去探索 这个世界的奥秘\"]},\"1\":{\"h\":\"介绍页\",\"t\":[\"物理世界的一个码农\",\"概念世界的一个旅行者\",\"软件世界的一个信使\"]},\"2\":{\"h\":\"工具列表\"},\"3\":{\"h\":\"gluc-ahp-front\",\"t\":[\"导出gluc的ahp使用的yaml配置文件后，可以使用部署在ipub上的app在线查看和计算结果。\",\"gluc-ahp-front\"]},\"4\":{\"c\":[\"工具\"]},\"5\":{\"c\":[\"工具\"]},\"6\":{\"h\":\"Jemalloc切片-跟踪内存泄漏和内存增长\",\"t\":[\"使用Jemalloc Profiling跟踪内存泄漏和内存增长问题\",\"今天给大家介绍一种依靠内存分配器自带能力来跟踪内存泄漏问题的方法。保证这是一个好的方法，是经过多年检验的方法。\",\"但是，这不是最好的，因为没有银弹。\"]},\"7\":{\"h\":\"\",\"t\":[\"在一个内存密集型的代码量超过40W行的C++编写的系统中：\",\"定位一个慢内存泄漏问题(比如跑了1天，泄漏了10GB内存)，该怎么办？\",\"启动运行10分钟后，服务器内存消耗了20GB，然后内存就稳定了，存在内存消耗过高的问题，为了优化内存消耗，现在需要找出这些内存消耗的热点，该怎么办？\",\"如果你维护的项目代码总量不过数千行。\",\"或者你对业务和代码细节足够熟悉，以至于你知道每一个malloc/new申请了多少内存，哪个流程最耗内存(我想你应该没有这么有信心)。\",\"那么今天介绍的方法或许对你的意义不大。\",\"如果你遇到了开篇提出的类似问题。\",\"并且：\",\"你刚接手这个规模较大的系统，\",\"或者你正在维护由非常多的模块构成的一个大系统，\",\"或者现在的情况比较棘手，你需要把锅甩出去，急于撇清跟自己所维护的模块的关系。\",\"并且：\",\"你曾经尝试过内存问题跟踪神器valgrind，但是你实在受不了它乌龟一样的速度，\",\"或者很不幸，你的工程在使用valgrind时遇到了各种报错，根本跑步起来。\",\"并且：\",\"你的程序不是一个对实时性有变态要求的程序。\",\"并且：\",\"你遭遇的这个问题最好是能够重现的，或者很容易重现的。\",\"如果不能重现，不好意思这不是什么问题，不用看这篇文章，直接交给运营去填坑，让他们在24点时重启下程序吧。\",\"并且：\",\"你有权力重启你的程序。\",\"并且：\",\"最好不是生产环境。\",\"并且：\",\"你打开了中文搜索引擎，搜索了“怎么跟踪内存泄漏”，没有找到适合的方法。\",\"并且：\",\"你至少得有1天的时间，不然你踩到了坑，时间不就没有了吗，所以给自己预留些时间。\",\"并且：\",\"你的程序在Linux上运行，如果是Windows，我想你应该有更好的方法。\",\"Windows上应该也可以，不过我还没研究过。\",\"没有并且了。\",\"那么，你可以了解下本文提供的方法。\",\"我想你应该是C/C++程序员，不然你怎么会遇到这些问题？\",\"或者你遇到了这些问题怎么会来这里找方法？\",\"其实今天讲的方法对java/python等其他语言也适用，不过你可能还得借助些其他的工具。\"]},\"8\":{\"h\":\"\",\"t\":[\"C/C++程序员都使用过内存分配器，不管你知不知道什么是内存分配器，只要你调用过malloc函数，你就使用了它。\",\"在linux上，ptmalloc是glibc的默认内存分配器，它提供了malloc和free这样的动态分配内存和归还的能力。\",\"本文讲的jemalloc是另外一个，除此之外还有好多内存分配器，比较出名的还有：tcmalloc，mimalloc。\",\"如果你之前不知道它们的存在，你可能需要花几分钟去了解一下了。\",\"之所以有这么多种内存分配器，主要还是为了追求内存使用的性能表现，包括减少CPU开销，减少内存使用量。\",\"内存分配器的性能问题是另外一个非常大的话题，本文不展开讨论。\",\"jemalloc出自facebook，tcmalloc出自google，mimalloc出自microsoft。\",\"并且，都开源：\",\"jemalloc：\",\"https://github.com/jemalloc/jemalloc\",\"tcmalloc：\",\"https://github.com/google/tcmalloc \",\"mimalloc：\",\"https://github.com/microsoft/mimalloc\",\"巨头对基础技术的研究还是很舍得投入。\",\"这几个内存分配器我都尝试过，它们都很优秀。\",\"今天的主题还是内存切片问题，所以得以jemalloc为例，其实tcmalloc也具备类似的能力。\"]},\"9\":{\"h\":\"\",\"t\":[\"关于内存泄漏问题，大家可以去读读 维基百科 和 百度百科 的描述，很有参考价值。\",\"内存泄漏问题，表现为随着时间的前进，物理内存消耗越来越多。\",\"严重时，以至于发展到系统无物理内存可分配，导致系统主动进行OOM，最终造成程序被操作系统异常终止。\",\"不同的原因造成的内存泄漏表现也各不相同。\",\"泄漏的内在含义表现在：资源和 可控性，这两者上。\",\"资源：\",\"资源当然是内存资源，在linux操作系统上内存资源包含2个大的部分：虚拟内存资源 和 物理内存资源。\",\"如果泄漏仅仅发生在虚拟内存资源上，那么你可能不会那么快感受到问题，现代的CPU和操作系统往往都是64位的，他们拥有非常大的地址空间，不是一下就能消耗完。\",\"物理内存资源往往相对比较紧缺，大量的泄漏必定造成资源匮乏。\",\"资源都有存放的位置，内存泄漏往往是发生在进程空间中的堆空间中，堆是动态内存申请的最主要的场地，也是我们工程实践过程中内存泄漏发生的主要位置。\",\"也有一部分内存泄漏发生在栈空间中，但是非常少见，举个例子，频繁的创建线程而不回收线程就会造成栈内存泄露，当然不回收线程带来的后果比栈内存泄漏更严重。\",\"可控性：\",\"只有内存资源的控制权丢失，程序内存消耗表现不符合业务需求，这种情况才是内存泄漏。\",\"内存资源的控制权本应该掌握在编码者的预期表现所框定的范围内，但是程序可能由于各种原因出现了偏差，所以是编程者丧失了对程序行为表现的控制权。\",\"比如是编码者忘记了释放申请的内存，或者是智能指针循环引用，或者内存句柄被破坏等等等具体的泄漏原因，这些都是由于内存资源的控制权丧失造成内存资源不可控而出现的内存泄漏问题。\",\"内存泄漏问题可以根据其特性按照多个维度进行分类，大致有：\",\"触发条件\",\"时间特性\",\"泄漏内存量\",\"泄漏位置数量\",\"触发条件\",\"指泄漏出现的条件，可以分为：偶发、必现。\",\"时间特性\",\"指程序的生命周期内，泄漏出现的时间情况，大体可分为：持续性泄漏 和 非持续性泄漏，细一点可以分为启动时泄漏，运行过程中泄漏，退出时泄漏，长时间，短时间等等。\",\"泄漏内存量\",\"指单次泄漏发生时所消耗的内存量，这个维度本身可被量化，但大体可分为：少量泄漏，大量泄漏。\",\"泄漏位置数量\",\"指程序中引发泄漏的问题出处，大体可分为：少处泄漏，多处泄漏。\",\"有了时间和泄漏量就能有泄露速度，可以延伸出泄漏的速度：快速泄漏和缓慢泄漏。\",\"从功用的角度来看，并非所有的内存泄露都需要花费时间去跟踪，比如只在系统退出时才会产生的泄漏，比如非常少量的非持续性泄漏。\",\"强迫症同事不允许有瑕疵，怎么能存在泄漏？必须消灭。\",\"哪种内存泄露最难跟踪？\",\"是这种：\",\"偶发性，持续，缓慢，多处内存泄露。\",\"如果你的项目遇到这种情况，不好意思，准备好掉头发。\",\"但是转念一想，维护糟糕的项目能够发展你的核心技能。\",\"跟踪内存泄漏问题往往使用动态跟踪技术，而非静态检查。\",\"jemalloc的Profiling就是动态跟踪技术，在程序运行时分析。\"]},\"10\":{\"h\":\"\",\"t\":[\"【切片】 一词，是自己瞎翻译的，反正国内对这个问题也没有业界统一的叫法，就让我用捉急的英文勉强翻译一下。\",\"在 jemalloc的官方文档上叫Profiling，简写成p rof。\",\"词典对Profiling的解释是：\",\"描…的轮廓\",\"切片要表达一个意思：\",\"截取大的物体上的一点东西下来分析，以获得物体的一个概要信息。\",\"准确的说，这里的Profiling是指Heap Profiling，堆内存切片。\",\"既然是堆内存分配器，当然就只能管理堆上的内存。\",\"jemalloc内部会有一个抽象意义上的allocate table(不是真的有)，用于存放内存指针与内存信息的关联关系。\",\"简化后这个表的逻辑大概是这个样子：\",\"allocate table: 内存指针 申请的内存量 ptr1(0x000000123) 56bytes ptr2(0x000000456) 26bytes ptr3(0x000000789) 1024bytes ......\",\"‍\",\"当开启prof时，\",\"在应用程序调用malloc的时候，jemalloc会存储调用堆栈和申请到的内存指针，以及申请的内存大小。\",\"free的时候将ptr指针所对应的内存申请size值从内存申请映射表中减掉。\",\"举个例子：\",\"ptr = malloc(size);\",\"多次调用malloc后形成：\",\"allocate table: 内存指针 申请的内存量 ptr1(0x000000123) 56bytes ptr2(0x000000456) 26bytes ptr3(0x000000789) 1024bytes\",\"‍\",\"allocate table 的表达能力有限，不能以此分析输出代码问题发生的位置，需要另外使用函数调用栈来表达内存分配信息。\",\"所以需要构造调用栈映射表(抽象意义上的，并非真有)：\",\"call stack map: 内存指针 调用栈 申请内存量（可查allocate table得到） ptr1(0x000000123) callstack1 56bytes ptr2(0x000000456) callstack2 26bytes ptr3(0x000000789) callstack1 1024bytes\",\"调用free(ptr3)后：\",\"call stack map: 内存指针 调用栈 申请内存量（可查allocate table得到） ptr1(0x000000123) callstack1 56bytes ptr2(0x000000456) callstack2 26bytes\",\"allocate table: 内存指针 申请的内存量 ptr1(0x000000001) 56bytes ptr2(0x000000456) 26bytes\",\"其他的类 jemalloc的工具都有类似的处理逻辑，但各个工具的内部实现细节各不相同。\",\"概括起来，其核心就是维护了一个以 [调用栈] 为键，键值为 [复合统计值] 的 [映射表]。\",\"当然 jemalloc中的调用栈映射表比我们这里描述的要复杂，除了总字节数之外其中还包含：\",\"线程编号、分配对象个数、累计分配对象个数、累计分配字节数。\",\"其中：\",\"线程编号： 如其名字。\",\"分配对象个数： 是 指某个调用栈尚未释放的内存申请的计数值，调用一次malloc函数该计数值增加1，调用一次fre e函数该计数值减1。\",\"累计分配对象个数： 是指某个调用栈总的内存申请的计数值，调用一次malloc函数该计数值增加1，调用free的时候并不会减1。这个统计值默认是关闭的，可通过prof_accum选项打开。\",\"累计分配字节数： 是指某个调用栈总的内存申请的字节计数值，调用一次malloc函数该计数值增加申请的字节数，调用free的时候并不会减去释放的内存的字节数。这个统计值默认是关闭的，可通过prof_accum选项打开。\",\"而且 jemalloc的heap文件中对调用栈进行了聚合，相同调用栈只有一条记录数据。\",\"理解了本文说的这种简要模型就足够使用 jemalloc的切片能力了。\",\"jemalloc里，在切片操作发生时，将导出内存申请映射表，生成heap文件。\",\"最终我们可以使用jeprof工具遍历该映射表，以调用栈为中心对内存申请量进行统计，最终生成树形的内存消耗调用关系。\",\"对于内存泄漏问题：\",\"jemalloc直接提供了分析能力。基本原理也是在程序启动时开始进行prof记录，在程序退出时将[调用栈映射表]导出成heap文件，该heap文件就直接表明了内存泄漏的函数调用栈。\",\"对于内存增长问题：\",\"jemalloc提供了足够的接口，在内存增长之前激活prof记录功能，等到增长完成后，我们通过调用接口dump出[调用栈映射表]到heap文件中，该heap文件直接表明了内存增长的函数调用栈。\",\"另外，我们也可以通过接口在内存增长之前生成一个heap1， 在内存增长后再生成一个heap2，通过jeprof工具对比heap1和heap2的差异，找出增长的函数调用栈。\",\"内存泄漏问题我们也可以使用这种方法来跟踪。\"]},\"11\":{\"h\":\"\",\"t\":[\"我们需要安装开发版本 jemalloc库和graphviz库\",\"jemalloc的使用方式主要有2种：\",\"通过静态链接，链接到可执行文件中。 这需要修改代码，运行时没有任何依赖。\",\"使用LD_PRELOAD指定 jemalloc的动态库路径，预装载到进程空间中，替换ptmalloc的接口。 这种方式使用最简单，灵活度最高，因为出jemalloc之外的其他内存分配器也使用这种方式，这就能够在客户环境中非常轻松地更换内存分配器。 不过也有缺陷，动态库的方式在函数调用时会多一次符号查找，因此性能会有非常轻微的降低。 一般的程序，这点下降几乎感知不到。\"]},\"12\":{\"h\":\"\",\"t\":[\"我们需要安装开发版本jemalloc库和graphviz库\",\"graphviz库用于绘图生成pdf文件\",\"kcachegrind软件可选安装，用于交互查看调用图。\",\"centos上安装\",\"yum install jemalloc-devel yum install graphviz [可选] yum install kdesdk-kcachegrind\",\"ubuntu上安装\",\"apt-get install libjemalloc-dev apt-get install graphviz [可选] apt-get install kcachegrind\",\"我们可以通过查看安装后的文件列表来获取jemalloc的库文件和头文件位置：\",\"在centos上执行\",\"rpm -ql jemalloc-devel\",\"在ubuntu上执行\",\"dpkg -L libjemalloc-dev\",\"结果如下：\",\"/. /usr /usr/bin /usr/bin/jeprof /usr/include /usr/include/jemalloc /usr/include/jemalloc/jemalloc.h /usr/lib /usr/lib/x86_64-linux-gnu /usr/lib/x86_64-linux-gnu/libjemalloc.a /usr/lib/x86_64-linux-gnu/libjemalloc_pic.a /usr/lib/x86_64-linux-gnu/pkgconfig /usr/lib/x86_64-linux-gnu/pkgconfig/jemalloc.pc /usr/share /usr/share/doc /usr/share/doc/libjemalloc-dev /usr/share/doc/libjemalloc-dev/copyright /usr/share/doc/libjemalloc-dev/jemalloc.html /usr/share/doc-base /usr/share/doc-base/libjemalloc-dev /usr/share/man /usr/share/man/man1 /usr/share/man/man1/jeprof.1.gz /usr/share/man/man3 /usr/share/man/man3/jemalloc.3.gz /usr/lib/x86_64-linux-gnu/libjemalloc.so /usr/share/doc/libjemalloc-dev/README /usr/share/doc/libjemalloc-dev/changelog.Debian.gz\"]},\"13\":{\"h\":\"\",\"t\":[\"一般，我们主要使用如下几个文件：\",\"使用LD_PRELOAD时，仅需使用动态库： /usr/lib/x86_64-linux-gnu/libjemalloc.so 使用编译时链接的方式，需要如下文件： /usr/lib/x86_64-linux-gnu/libjemalloc.a /usr/lib/x86_64-linux-gnu/libjemalloc_pic.a /usr/include/jemalloc/jemalloc.h jemalloc.h和libjemalloc.a 看名字就知道，编译时静态链接需要用的头文件和静态库。\",\"特别的：\",\"libjemalloc_pic.a用于链接那些编译时使用了位置无关编译策略的程序。\",\"要想使用内存切片功能，需要保证编译jemalloc的库时，开启了prof编译选项。\",\"对于我们安装的rpm或者deb包，可以通过执行如下命令来测试来确认jemalloc的prof功能是否被编译：\",\"MALLOC_CONF=stats_print:true LD_PRELOAD=/usr/lib/x86_64-linux-gnu/libjemalloc.so sed \\\"xxxxx\\\" ./*\",\"如果prof功能被编译，则输出结果中的config.prof一项值应该为true\",\"sed: -e expression #1, char 2: extra characters after command ___ Begin jemalloc statistics ___ Version: \\\"5.2.0-0-gb0b3e49a54ec29e32636f4577d9d5a896d67fd20\\\" Build-time option settings config.cache_oblivious: true config.debug: false config.fill: true config.lazy_lock: false config.malloc_conf: \\\"\\\" config.prof: true config.prof_libgcc: true config.prof_libunwind: false config.stats: true ......\",\"‍\",\"关注这项：\",\"config.prof: true\",\"还有我们的切片分析工具\",\"/usr/bin/jeprof\",\"jeprof是一个脚本工具，由perl语言所编写。\",\"主要提供的能力：\",\"反汇编指定函数；\",\"分析和可视化jemalloc生成的heap文件，可使用top命令查看消耗热点函数排序结果；\",\"多种格式的分析结果输出：pdf文件、文本、callgrind等多种格式；\",\"对比2个不同的heap文件的差异；\"]},\"14\":{\"h\":\"\",\"t\":[\"如果通过yum和apt安装的libjemalloc没有prof功能，就需要自己手动编译。\",\"步骤很简单：\",\"wget https://github.com/jemalloc/jemalloc/archive/refs/tags/5.2.1.tar.gz tar -zxvf 5.2.1.tar.gz cd jemalloc-5.2.1/ ./autogen.sh ./configure --prefix=/usr/local/jemalloc-5.2.1 --enable-prof make -j make install\"]},\"15\":{\"h\":\"\",\"t\":[\"我们编写一个测试代码，用于验证jemalloc的Profiling能力。\",\"该测试程序提供多个函数调用的路径去申请内存，并且随机调用free，模拟内存泄漏和内存增长。\",\"其中包含了调用jemalloc接口的例子。\",\"主要使用了2个接口：\",\"int mallctl( const char *name, void *oldp, size_t *oldlenp, void *newp, size_t newlen); void malloc_stats_print( void (*write_cb) (void *, const char *) , void *cbopaque, const char *opts);\",\"主要通过mallctl来实现对jemalloc的控制。\",\"通过向测试程序发送signal来控制程序的行为，如下：\",\"信号ID 动作 SIGUSR1 进行Profiling的heap文件dump操作 SIGUSR2 激活Profiling，新的malloc从此时才能被记录 SIGRTMIN+10 输出jemalloc的内部统计信息\",\"代码如下：\",\"#include <stdint.h> #include <stdio.h> #include <stdlib.h> #include <iostream> #include <random> #include <signal.h> #include <unistd.h> #include <jemalloc/jemalloc.h> //生成指定范围的随机数 template<typename T> T random(T range_from, T range_to) { std::random_device rand_dev; std::mt19937 generator(rand_dev()); std::uniform_int_distribution<T> distr(range_from, range_to); return distr(generator); } //为了触发缺页中断分配物理内存 __attribute__ ((noinline)) void access_ptr(void* ptr, size_t s){ if(nullptr == ptr) return; for(size_t i = 0; i < s; ++i){ ((uint8_t*)ptr)[i] = i; } } __attribute__ ((noinline)) void fun_leak_1(){ void* p = malloc(1*1024); access_ptr(p, 1*1024); if(random<uint32_t>(0, 1)){ free(p); } } __attribute__ ((noinline)) void fun_leak_2(){ void* p = malloc(2*1024); access_ptr(p, 2*1024); if(random<uint32_t>(0, 1)){ free(p); } } __attribute__ ((noinline)) void fun_leak_3(){ void* p = malloc(5*1024); access_ptr(p, 5*1024); if(random<uint32_t>(0, 1)){ free(p); } } __attribute__ ((noinline)) void fun_leak_4(){ void* p = malloc(10*1024); access_ptr(p, 10*1024); if(random<uint32_t>(0, 1)){ free(p); } } __attribute__ ((noinline)) void fun_leak_recu(uint32_t &level){ if(level > 6){ return ; } if(level <= 2 || random<uint32_t>(0, 1)){ fun_leak_recu(++level); } uint32_t w = random<uint32_t>(1, 4); switch (w) { case 1: fun_leak_1(); break; case 2: fun_leak_2(); break; case 3: fun_leak_3(); break; case 4: fun_leak_4(); break; default: break; } return; } __attribute__ ((noinline)) void fun_big_malloc(){ void * p = malloc(10*1024); } __attribute__ ((noinline)) void fun_root(){ fun_big_malloc(); uint32_t level = 0; fun_leak_recu(level); } static void sig_usr(int signo) { if (signo == SIGUSR1) { std::cout << \\\"received SIGUSR1, run prof.dump!\\\\n\\\" << std::endl; mallctl(\\\"prof.dump\\\", NULL, NULL, NULL, 0); } else if (signo == SIGUSR2) { std::cout << \\\"received SIGUSR2, run prof.active!\\\\n\\\" << std::endl; bool active = true; mallctl(\\\"prof.active\\\", NULL, NULL, &active, sizeof(active)); } else if (signo == (SIGRTMIN+10)){ std::cout << \\\"received SIGRTMIN+10, run malloc_stats_print!\\\\n\\\" << std::endl; malloc_stats_print(nullptr, nullptr, \\\"\\\"); } } void RegistrySignal(){ if (signal(SIGUSR1, sig_usr) == SIG_ERR) { std::cout << \\\"signal1 error!\\\" << std::endl; } if (signal(SIGUSR2, sig_usr) == SIG_ERR) { std::cout << \\\"signal2 error!\\\" << std::endl; } if (signal(SIGRTMIN+10, sig_usr) == SIG_ERR) { std::cout << \\\"signal3 error!\\\" << std::endl; } } int main(int argc, char **argv) { std::cout << \\\"--->Begin test\\\" << std::endl; RegistrySignal(); std::cout << \\\"--->wait op\\\" << std::endl; //等待3秒，以方便外部操作 usleep(3*1000*1000); std::cout << \\\"--->Begin allocate\\\" << std::endl; for (int32_t i = 0; i < 100; i++){ fun_root(); usleep(200000); } std::cout << \\\"--->wait op2\\\" << std::endl; //等待3秒，以方便外部操作 usleep(3*1000*1000); std::cout << \\\"--->End test\\\" << std::endl; return 0; }\",\"‍\"]},\"16\":{\"h\":\"\",\"t\":[\"目录结构如下：\",\"root@# ls -lh -rw-r--r-- 1 root root 4.7K 9月 2 09:08 jemalloc_heap_profiling.cpp drwxr-xr-x 2 root root 4.0K 9月 2 10:43 jeprof\",\"链接静态库编译：\",\"g++ -o jemalloc_profiling_test jemalloc_heap_profiling.cpp -std=c++11 -g -m64 -l:libjemalloc.a -lpthread -ldl\",\"链接动态库编译：\",\"g++ -o jemalloc_profiling_test jemalloc_heap_profiling.cpp -std=c++11 -g -m64 -ljemalloc\",\"其他编译说明：\",\"最好带上调试符号，否则有可能解析不出调用堆栈。\",\"如果程序在客户现场出现问题，并且程序已经过瘦身，情况紧急，需要先抓取数据，只要被裁剪的符号还在，也有办法解析出调用栈。\",\"基本思路：\",\"把裁剪后的符号通过eu-unstrip命令再拼接回去，然后再使用jeprof工具，分析heap文件和带符号信息的可执行文件。\",\"jeprof的--add_lib参数可以指定带符号的库路径，--lib_prefix参数可指定库路径前缀，--lines参数可以显示代码对应位置。\",\"如果不想使用这些参数，也可以将出现问题的可执行文件部署在与现场相同的路径上，然再使用jeprof分析。\"]},\"17\":{\"h\":\"\",\"t\":[\"在测试之前，先介绍一下jemalloc运行时的控制方法。\",\"11.1 通过环境变量\",\"通过设置环境变量MALLOC_CONF，我们可以控制jemalloc在运行时的行为，具体的配置项请参考jemalloc的官方手册。例如：\",\"MALLOC_CONF=stats_print:true test_program\",\"多个选项使用“,”分割，例如：\",\"MALLOC_CONF=prof:true,stats_print:true test_program\"]},\"18\":{\"h\":\"11.2 通过接口\",\"t\":[\"MALLOC_CONF中可配置的选项也可以通过接口调用的方式，例如：\",\"bool active = true; mallctl(\\\"prof.active\\\", NULL, NULL, &active, sizeof(active));\"]},\"19\":{\"h\":\"11.3 启用和激活prof\",\"t\":[\"jemalloc提供了profiling功能的两种开启方式：启用和激活。\",\"必须先启用才能激活，只有激活了才能进行profiling分析。\",\"选项prof可用于开启profiling功能，如：\",\"启用： MALLOC_CONF=prof:true 禁用： MALLOC_CONF=prof:false\",\"选项prof_active可用于激活profiling功能，如：\",\"暂停profiling： MALLOC_CONF=prof_active:false 激活profiling： MALLOC_CONF=prof_active:true\",\"对于运行一段时间后才激活prof功能的情况，有可能错过内存分配的时机，造成切片不准确。\"]},\"20\":{\"h\":\"11.4 profiling的输出\",\"t\":[\"prof会将内部的函数调用映射表导出生成后缀为\\\"heap\\\"的文件。\",\"配置heap文件的输出路径\",\"prof_prefix:./jeprof/test “./jeprof/test”指示的是生成的heap文件的前缀，准确来说是路径前缀，生成文件的路径如下： ./jepprof/test.xxx.heap\"]},\"21\":{\"h\":\"11.5 profiling的基本流程：\",\"t\":[\"概括说就是2个流程：\",\" 采样 -> 导出\",\"采样的目的是为了忽略一些细节，保留一个整体概要信息。\",\"导出是指将内存中的分配信息导出到文件中。\",\"其中采样流程可控制采集间隔参数：\",\"选项：lg_prof_sample:19 其中19指512KiB(2^19 B)。 该参数的含义： 内存分配采样之间的平均间隔，表示分配的字节数。 增加采样间隔降低了切片的保真度，但也降低了计算开销。默认的采样间隔为512KiB(2^19B)。 将lg_prof_sample设置为0时能够最大程度的保留内存分配的信息。\"]},\"22\":{\"h\":\"11.6 触发profiling的2类方法\",\"t\":[\"jemalloc内部自动切片；\",\"分为：\",\"a. 退出时dump 配置项：prof_final:true b. 超过上一次内存消耗最大值时dump 配置项：prof_gdump:true c. 增量达到门限时dump 配置项：lg_prof_interval:12 12表示4KB(2^12)\",\"应用程序通过接口完成；\",\"mallctl(\\\"prof.dump\\\", NULL, NULL, NULL, 0);\"]},\"23\":{\"h\":\"\",\"t\":[\"Jemalloc直接提供了内存泄漏检查的能力，它会再程序正常结束时检查内存泄漏，并输出heap文件。以如下方式运行编译好的测试程序：\",\"root@# MALLOC_CONF=prof_leak:true,lg_prof_sample:0,prof_final:true,prof_prefix:./jeprof/test ./jemalloc_profiling_test --->Begin test --->wait op --->End test <jemalloc>: Leak approximation summary: ~2182144 bytes, ~336 objects, >= 30 contexts <jemalloc>: Run jeprof on \\\"./jeprof/test.71646.0.f.heap\\\" for leak detail\",\"关键就是“ prof_leak:true”和“ prof_final:true”发挥了作用。\",\"“ lg_prof_sample:0”指示着不要错过任何分配，尽最大力量还原信息，当然，这是有开销的。\",\"我们看到jemalloc的内存泄漏报告和生成的heap文件：\",\"<jemalloc>: Leak approximation summary: ~2182144 bytes, ~336 objects, >= 30 contexts <jemalloc>: Run jeprof on \\\"./jeprof/test.71646.0.f.heap\\\" for leak detail\",\"查看下heap文件：\",\"root@# ls ./jeprof/ -lht total 12K -rw-r--r-- 1 root root 12K 9月 2 10:40 test.71646.0.f.heap\",\"我需要通过jeprof工具来对heap文件进行分析。\",\"以交互方式查看，如下：\",\"root@# jeprof --show_bytes ./jemalloc_profiling_test ./jeprof/test.71646.0.f.heap Using local file ./jemalloc_profiling_test. Using local file ./jeprof/test.71646.0.f.heap. Welcome to jeprof! For help, type 'help'. (jeprof) top Total: 2182144 B 2182144 100.0% 100.0% 2182144 100.0% je_prof_backtrace 0 0.0% 100.0% 81920 3.8% GLIBC_2.2.5 0 0.0% 100.0% 1024 0.0% _IO_doallocbuf 0 0.0% 100.0% 1024 0.0% _IO_file_doallocate 0 0.0% 100.0% 1024 0.0% _IO_file_overflow 0 0.0% 100.0% 1024 0.0% _IO_file_xsputn 0 0.0% 100.0% 2100224 96.2% __libc_start_main 0 0.0% 100.0% 81920 3.8% _dl_rtld_di_serinfo 0 0.0% 100.0% 2100224 96.2% _start 0 0.0% 100.0% 1024000 46.9% fun_big_malloc (jeprof) top33 Total: 2182144 B 2182144 100.0% 100.0% 2182144 100.0% je_prof_backtrace 0 0.0% 100.0% 81920 3.8% GLIBC_2.2.5 0 0.0% 100.0% 1024 0.0% _IO_doallocbuf 0 0.0% 100.0% 1024 0.0% _IO_file_doallocate 0 0.0% 100.0% 1024 0.0% _IO_file_overflow 0 0.0% 100.0% 1024 0.0% _IO_file_xsputn 0 0.0% 100.0% 2100224 96.2% __libc_start_main 0 0.0% 100.0% 81920 3.8% _dl_rtld_di_serinfo 0 0.0% 100.0% 2100224 96.2% _start 0 0.0% 100.0% 1024000 46.9% fun_big_malloc 0 0.0% 100.0% 58368 2.7% fun_leak_1 0 0.0% 100.0% 110592 5.1% fun_leak_2 0 0.0% 100.0% 353280 16.2% fun_leak_3 0 0.0% 100.0% 552960 25.3% fun_leak_4 0 0.0% 100.0% 1075200 49.3% fun_leak_recu 0 0.0% 100.0% 2099200 96.2% fun_root 0 0.0% 100.0% 1024 0.0% fwrite 0 0.0% 100.0% 2182144 100.0% je_malloc_default 0 0.0% 100.0% 2100224 96.2% main 0 0.0% 100.0% 1024 0.0% std::__ostream_insert 0 0.0% 100.0% 81920 3.8% std::__throw_ios_failure 0 0.0% 100.0% 1024 0.0% std::operator<< (jeprof) disasm fun_leak_recu Total: 2182144 B ROUTINE ====================== fun_leak_recu 0 1915904 B (flat, cumulative) 87.8% of total -------------------- ...sts/jemalloc_heap_profiling/jemalloc_heap_profiling.cpp . . 92: void fun_leak_recu(uint32_t &level){ . . 7d15: endbr64 . . 7d19: push %rbp . . 7d1a: mov %rsp,%rbp . . 7d1d: sub $0x20,%rsp . . 7d21: mov %rdi,-0x18(%rbp) . . 94: if(level > 6){ . . 7d25: mov -0x18(%rbp),%rax . . 7d29: mov (%rax),%eax . . 7d2b: cmp $0x6,%eax . . 7d2e: ja 7dd4 <fun_leak_recu+0xbf> . . 98: if(level <= 2 || random<uint32_t>(0, 1)){ . . 7d34: mov -0x18(%rbp),%rax . . 7d38: mov (%rax),%eax . . 7d3a: cmp $0x2,%eax . . 7d3d: jbe 7d52 <fun_leak_recu+0x3d> . . 7d3f: mov $0x1,%esi . . 7d44: mov $0x0,%edi . . 7d49: callq 8272 <unsigned int random> . . 7d4e: test %eax,%eax . . 7d50: je 7d59 <fun_leak_recu+0x44> . . 7d52: mov $0x1,%eax . . 7d57: jmp 7d5e <fun_leak_recu+0x49> . . 7d59: mov $0x0,%eax . . 7d5e: test %al,%al . . 7d60: je 7d7d <fun_leak_recu+0x68> . 840704 99: fun_leak_recu(++level); . . 7d62: mov -0x18(%rbp),%rax . . 7d66: mov (%rax),%eax . . 7d68: lea 0x1(%rax),%edx . . 7d6b: mov -0x18(%rbp),%rax . . 7d6f: mov %edx,(%rax) . . 7d71: mov -0x18(%rbp),%rax . . 7d75: mov %rax,%rdi . 840704 7d78: callq 7d15 <fun_leak_recu> . . 102: uint32_t w = random<uint32_t>(1, 4); . . 7d7d: mov $0x4,%esi . . 7d82: mov $0x1,%edi . . 7d87: callq 8272 <unsigned int random> . . 7d8c: mov %eax,-0x4(%rbp) . . 103: switch (w) . . 7d8f: cmpl $0x4,-0x4(%rbp) . . 7d93: je 7dca <fun_leak_recu+0xb5> . . 7d95: cmpl $0x4,-0x4(%rbp) . . 7d99: ja 7dd1 <fun_leak_recu+0xbc> . . 7d9b: cmpl $0x3,-0x4(%rbp) . . 7d9f: je 7dc3 <fun_leak_recu+0xae> . . 7da1: cmpl $0x3,-0x4(%rbp) . . 7da5: ja 7dd1 <fun_leak_recu+0xbc> . . 7da7: cmpl $0x1,-0x4(%rbp) . . 7dab: je 7db5 <fun_leak_recu+0xa0> . . 7dad: cmpl $0x2,-0x4(%rbp) . . 7db1: je 7dbc <fun_leak_recu+0xa7> . . 118: break; . . 7db3: jmp 7dd1 <fun_leak_recu+0xbc> . 58368 106: fun_leak_1(); . 58368 7db5: callq 7bcd <fun_leak_1> . . 107: break; . . 7dba: jmp 7dd2 <fun_leak_recu+0xbd> . 110592 109: fun_leak_2(); . 110592 7dbc: callq 7c1f <fun_leak_2> . . 110: break; . . 7dc1: jmp 7dd2 <fun_leak_recu+0xbd> . 353280 112: fun_leak_3(); . 353280 7dc3: callq 7c71 <fun_leak_3> . . 113: break; . . 7dc8: jmp 7dd2 <fun_leak_recu+0xbd> . 552960 115: fun_leak_4(); . 552960 7dca: callq 7cc3 <fun_leak_4> . . 116: break; . . 7dcf: jmp 7dd2 <fun_leak_recu+0xbd> . . 118: break; . . 7dd1: nop . . 121: return; . . 7dd2: jmp 7dd5 <fun_leak_recu+0xc0> . . 95: return ; . . 7dd4: nop . . 122: } . . 7dd5: leaveq . . 7dd6: retq (jeprof) quit root@#\",\"我们看到了泄漏最高的函数名字：\",\" 0 0.0% 100.0% 2100224 96.2% _start 0 0.0% 100.0% 1024000 46.9% fun_big_malloc 0 0.0% 100.0% 58368 2.7% fun_leak_1 0 0.0% 100.0% 110592 5.1% fun_leak_2 0 0.0% 100.0% 353280 16.2% fun_leak_3 0 0.0% 100.0% 552960 25.3% fun_leak_4 0 0.0% 100.0% 1075200 49.3% fun_leak_recu 0 0.0% 100.0% 2099200 96.2% fun_root\",\"由于没有分析累计统计，所以前几列的值都为0，这不影响我们的分析。\",\"我们可以同pdf的方式来查看，以获得更直观的结果，如下：\",\"root@# jeprof --show_bytes --pdf ./jemalloc_profiling_test ./jeprof/test.71646.0.f.heap > ./jeprof/je_check_leak.pdf Using local file ./jemalloc_profiling_test. Using local file ./jeprof/test.71646.0.f.heap. Dropping nodes with <= 10910 B; edges with <= 2182 abs(B)\",\"我们打开\",\"“ ./jeprof/je_check_leak.pdf”\",\"可以看到：\",\"内存泄漏的函数调用路径一目了然。\"]},\"24\":{\"h\":\"\",\"t\":[\"通过heap对比来分析泄漏和增长。\",\"在一个shell窗口中启动测试程序：\",\"root@# mkdir jeprof root@# MALLOC_CONF=prof:true,lg_prof_sample:0,prof_active:false,prof_prefix:./jeprof/test ./jemalloc_profiling_test --->Begin test --->wait op received SIGUSR2, run prof.active! --->Begin allocate received SIGUSR1, run prof.dump! received SIGUSR1, run prof.dump! received SIGUSR1, run prof.dump! received SIGUSR1, run prof.dump! --->wait op2 --->End test\",\"在另一个shell窗口中发送控制信号：\",\"root@# kill -SIGUSR2 $(pidof jemalloc_profiling_test) root@# kill -SIGUSR1 $(pidof jemalloc_profiling_test) root@# kill -SIGUSR1 $(pidof jemalloc_profiling_test) root@# kill -SIGUSR1 $(pidof jemalloc_profiling_test) root@# kill -SIGUSR1 $(pidof jemalloc_profiling_test)\",\"启动时，我们将prof_active设置为false，此时jemalloc不会进行prof采样。\",\"在操作等待时间内我们，发送了prof激活信号。\",\"然后进行了多次dump操作。\",\"最终生成的结果：\",\"root@# ls ./jeprof/ -lht total 68K -rw-r--r-- 1 root root 11K 9月 2 11:12 test.72297.3.m3.heap -rw-r--r-- 1 root root 11K 9月 2 11:12 test.72297.2.m2.heap -rw-r--r-- 1 root root 9.5K 9月 2 11:11 test.72297.1.m1.heap -rw-r--r-- 1 root root 5.6K 9月 2 11:11 test.72297.0.m0.heap\",\"分析结果：\",\"一共dump了4次，生成了4个heap文件\",\"test.72297.0.m0.heap是在激活prof后，第一次生成的heap，此时并未执行任何的内存申请操作，因此其中不包含映射表。\",\"我们挑选test.72297.2.m2.heap和test.72297.1.m1.heap两次dump来做比较，可以分析内存泄漏发生的位置。\",\"root@# jeprof --pdf --show_bytes ./jemalloc_profiling_test ./jeprof/test.72297.2.m2.heap --base=./jeprof/test.72297.1.m1.heap > ./jeprof/je_leak_grow_api_1.pdf Using local file ./jemalloc_profiling_test. Using local file ./jeprof/test.72297.2.m2.heap. Dropping nodes with <= 1853 B; edges with <= 370 abs(B)\",\"‍\",\"结果如下：\",\"可以再对比最早的和最晚的2次heap：\",\"root@# jeprof --pdf --show_bytes ./jemalloc_profiling_test ./jeprof/test.72297.3.m3.heap --base=./jeprof/test.72297.0.m0.heap > ./jeprof/je_leak_grow_api_2.pdf Using local file ./jemalloc_profiling_test. Using local file ./jeprof/test.72297.3.m3.heap. Dropping nodes with <= 7808 B; edges with <= 1561 abs(B)\",\"结果如下：\",\"通过pdf图我们看到了所有内存增长的位置。\",\"检查代码会发现泄漏的调用路径和内存增长的位置与图中吻合。\"]},\"25\":{\"h\":\"\",\"t\":[\"jeprof还有非常多的其它用法，本文再列举些例子。\",\"以文本形式输出：\",\"jeprof --show_bytes --text ./jemalloc_profiling_test ./jeprof/test.55046.0.m0.heap\",\"当调用栈很多时，jeprof会省略许多信息，此时想查看细微的信息，可以这样：\",\"jeprof --pdf --inuse_space --show_bytes --nodecount=1000 --nodefraction=0.000001 --edgefraction=0.000001 --maxdegree=100 ./jemalloc_profiling_test ./jeprof/test.55046.0.m0.heap > test.pdf\",\"显示代码行数：\",\"jeprof --lines --show_bytes ./jemalloc_profiling_test ./jeprof/test.72297.3.m3.heap --base=./jeprof/test.72297.0.m0.heap\",\"以callgrind格式输出：\",\"jeprof --callgrind --show_bytes ./jemalloc_profiling_test ./jeprof/test.72297.3.m3.heap > cachegrind.out\",\"‍将生成的“ cachegrind.out”用kcachegrind打开：\",\"其他用法请参考jeprof的help信息。\",\"jeprof -h\"]},\"26\":{\"h\":\"\",\"t\":[\"如开篇所说，Jemalloc切片方法并非万能，它有自己的缺陷：\",\"1. 系统会变慢\",\"每个malloc和每个free的函数调用都需要做更多额外操作，而且这些操作jemalloc的优化不是很充分。\",\"一旦开启并激活了prof后，程序的性能会有大幅度下降，一倍到数倍不等等，与应用程序的特性相关，内存申请释放越频繁性能下降越明显。\",\"有些场景下，缓慢的系统无法复现问题，甚至会产生新的阻塞造成新的内存增长问题，此时jemalloc的prof功能就无法胜任了。\",\"面对这个问题，我们可以通过其他手段来解决，后边有机会再说。\",\"2. 无法分析消耗大量虚拟内存，但表现未物理内存泄露泄漏的问题\",\"频繁使用虚拟内存预分配的编程风格，调用了malloc，实际运行的过程中业务流程却未充分使用这些内存，虚拟内存增长很快，但是物理内存却未消耗。\",\"内存泄漏问题往往更关注物理内存的泄漏，此种场景下，jemalloc的分析结果就变得不可信了，以此为分析的依据甚至会得到错误的结论。\",\"面对这个问题，我们同样可以通过其他手段来解决，后边有机会再说。\"]},\"27\":{\"h\":\"\",\"t\":[\"如果你的程序经常要分析内存泄漏或内存消耗问题，而且发现jemalloc很合适你的场景，建议你将其工程化，在业务上提供：导出heap文件、下载heap文件、解析heap文件的能力。\"]},\"28\":{\"h\":\"\",\"t\":[\"[1] jemalloc的泄漏检查 https://github.com/jemalloc/jemalloc/wiki/Use-Case%3A-Leak-Checking\",\"[2] jemalloc的heap profiling https://www.yuanguohuo.com/2019/01/02/jemalloc-heap-profiling/\",\"[3] A-Heap-Profiling https://github.com/jemalloc/jemalloc/wiki/Use-Case%3A-Heap-Profiling\",\"[4] Memory Profiling with Mesos and Jemalloc https://mesos.apache.org/documentation/latest/memory-profiling/\",\"[5] jemalloc man http://jemalloc.net/jemalloc.3.html\",\"[6] 内存泄漏 百度百科 https://baike.baidu.com/item/%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F/6181425?fr=aladdin\",\"[7] 内存泄漏 维基百科 https://zh.wikipedia.org/wiki/%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F\"]},\"29\":{\"c\":[\"调试\",\"Profiling\"]},\"30\":{\"c\":[\"调试技巧\",\"Jemalloc\",\"内存泄漏\",\"内存增长\",\"Profiling\"]},\"31\":{\"h\":\"Linux上暂停指定的多个运行线程\"},\"32\":{\"h\":\"开篇问题\",\"t\":[\"有一个Linux的多线程程序，在某一台服务器上运行10天后，该程序进程产生了120个线程，此时业务的性能变得很差(可以容易获取业务性能表现的指标)。 我们检查了同时启动服务的其他10台服务器，这10台服务器的业务表现都正常。 我们使用了各种手段分析排查产生性能下降的原因，但没有找到。 不过经过对比，我们对其中一个业务产生了比较大的怀疑，这个业务本身很独立，别的流程对它没有依赖。 我们怀疑这个业务的线程运行过程中执行了某些特殊代码，对系统整体性能产生了影响。 这个业务一共启动了12个线程，而且这个业务也没有运行时开关。 但是我们不能重启程序，因为担心无法复现问题。 现在，怎么来确认这个怀疑是对的还是错的？\"]},\"33\":{\"h\":\"问题跟踪思路\",\"t\":[\"验证这个猜想大概有这几种途径：\",\"方法1：看看这个业务的12个线程在干什么？看看有什么异常的系统调用或者影响系统硬件的操作；\",\"方法2：改变程序的输入，让输入的数据被过滤掉，使这个被怀疑的业务没有数据需要处理；\",\"方法3：修改运行时的指令码，让这几个线程都退出掉，然后再来分析系统性能表现；\",\"方法4：我们想办法去复现这个问题，修改业务代码或者调整配置后关闭该业务流程，重启复现；\",\"方法5：如果能够从外部直接将这业务的所有线程都暂停了，那么再来观测一下系统的性能表现有没有恢复，就能确认怀疑对不对了。\",\"方法1可以比较容易实施，例如我们可以用gdb/pstack/strace等相应的工具去分析线程的调用栈，但问题是我们对系统的理解大都是不全面的，看到函数调用后也只能是猜想，无法直接证实。 方法2比较间接，如果这个业务本身的代码实现上存在漏洞，例如在没有数据需要处理时也执行各种操作，那么使其无数据输入的方法就无法排除它的嫌疑，而且有时构造特定的输入数据也很困难。 方法3属于Linux的特定产物，我们没有通用的使线程退出的手段，所以想要去修改执行的机器码让线程退出，但这个操作难度较大，而且容易造成程序崩溃，属于风险较高的操作，需要谨慎使用。 方法4有不确定性，有可能需要很长的时间，甚至找不到复现问题的有效手段。 方法5在实施成本就比较低，影响面小，可快速验证猜想，是非常有效的初步手段。\",\"如果使用方法5快速验证了是这个业务的问题，那么就可以开展下一步，使用方法1在更小的范围内去寻找线索。 如果使用方法5验证的结果是系统的性能没有受到影响，那么我们的怀疑就不成立了，需要继续努力寻找其他线索了，即便如此，我们也只是支付了很小的代价而已，只是暂停了一小会儿线程，出问题的现场环境大概率还存在，还可以接着分析。\",\"既然方法5是有效的手段，那么我们如何实施？即，我们如何在Linux上仅仅暂停一个进程中的一部分线程的运行？\",\"说实话，这个问题能难倒一大片经验丰富的工程师。\"]},\"34\":{\"h\":\"使用gdb暂停指定的几个线程\",\"t\":[\"我们猜想gdb应该具有这个能力。 但是，你在浏览器中去寻找“如何使用gdb暂停几个线程时”，你就会发现，这个问题好像大家不怎么会遇到。 连广受好评的《100个gdb小技巧》中也没有记录如何达成这个目的。 经过几番探索后，找到了方法，这里分享给大家。 方法出奇的简单，就是使用gdb的attach命令。\",\"attach process-id This command attaches to a running process—one that was started outside GDB. (info files shows your active targets.) The command takes as argument a process ID. The usual way to find out the process-id of a Unix process is with the ps utility, or with the ‘jobs -l’ shell command.\",\"我们容易被这个“process-id”误导了，以为只能传入进程ID，实则不然。\",\"以暂停mysqld为例，如下是mysqld的线程情况： \",\"现在，我们暂停线程3697，像这样：\",\"[root@localhost tmp]# gdb -q --pid=3697 Attaching to process 3697 Reading symbols from /usr/sbin/mysqld... Reading symbols from /lib64/libpthread.so.0... (No debugging symbols found in /lib64/libpthread.so.0) [Thread debugging using libthread_db enabled] Using host libthread_db library \\\"/lib64/libthread_db.so.1\\\". Reading symbols from /lib64/libaio.so.1... Reading symbols from .gnu_debugdata for /lib64/libaio.so.1... (No debugging symbols found in .gnu_debugdata for /lib64/libaio.so.1) Reading symbols from /lib64/libnuma.so.1... Reading symbols from .gnu_debugdata for /lib64/libnuma.so.1... (No debugging symbols found in .gnu_debugdata for /lib64/libnuma.so.1) Reading symbols from /lib64/libcrypt.so.1... (No debugging symbols found in /lib64/libcrypt.so.1) Reading symbols from /lib64/libdl.so.2... (No debugging symbols found in /lib64/libdl.so.2) Reading symbols from /lib64/libstdc++.so.6... (No debugging symbols found in /lib64/libstdc++.so.6) Reading symbols from /lib64/libm.so.6... (No debugging symbols found in /lib64/libm.so.6) Reading symbols from /lib64/libgcc_s.so.1... (No debugging symbols found in /lib64/libgcc_s.so.1) Reading symbols from /lib64/libc.so.6... (No debugging symbols found in /lib64/libc.so.6) Reading symbols from /lib64/ld-linux-x86-64.so.2... (No debugging symbols found in /lib64/ld-linux-x86-64.so.2) Reading symbols from /lib64/libfreebl3.so... Reading symbols from .gnu_debugdata for /lib64/libfreebl3.so... (No debugging symbols found in .gnu_debugdata for /lib64/libfreebl3.so) Reading symbols from /lib64/libnss_files.so.2... (No debugging symbols found in /lib64/libnss_files.so.2) 0x00007f453f4bf644 in __io_getevents_0_4 () from /lib64/libaio.so.1 (gdb)\",\"或者像这样：\",\"[root@localhost tmp]# gdb -q (gdb) attach 3697 Attaching to process 3697 Reading symbols from /usr/sbin/mysqld... Reading symbols from /lib64/libpthread.so.0... (No debugging symbols found in /lib64/libpthread.so.0) [Thread debugging using libthread_db enabled] Using host libthread_db library \\\"/lib64/libthread_db.so.1\\\". Reading symbols from /lib64/libaio.so.1... Reading symbols from .gnu_debugdata for /lib64/libaio.so.1... (No debugging symbols found in .gnu_debugdata for /lib64/libaio.so.1) Reading symbols from /lib64/libnuma.so.1... Reading symbols from .gnu_debugdata for /lib64/libnuma.so.1... (No debugging symbols found in .gnu_debugdata for /lib64/libnuma.so.1) Reading symbols from /lib64/libcrypt.so.1... (No debugging symbols found in /lib64/libcrypt.so.1) Reading symbols from /lib64/libdl.so.2... (No debugging symbols found in /lib64/libdl.so.2) Reading symbols from /lib64/libstdc++.so.6... (No debugging symbols found in /lib64/libstdc++.so.6) Reading symbols from /lib64/libm.so.6... (No debugging symbols found in /lib64/libm.so.6) Reading symbols from /lib64/libgcc_s.so.1... (No debugging symbols found in /lib64/libgcc_s.so.1) Reading symbols from /lib64/libc.so.6... (No debugging symbols found in /lib64/libc.so.6) Reading symbols from /lib64/ld-linux-x86-64.so.2... (No debugging symbols found in /lib64/ld-linux-x86-64.so.2) Reading symbols from /lib64/libfreebl3.so... Reading symbols from .gnu_debugdata for /lib64/libfreebl3.so... (No debugging symbols found in .gnu_debugdata for /lib64/libfreebl3.so) Reading symbols from /lib64/libnss_files.so.2... (No debugging symbols found in /lib64/libnss_files.so.2) 0x00007f453f4bf644 in __io_getevents_0_4 () from /lib64/libaio.so.1 (gdb)\",\"这样操作后，不要退出gdb，对应的线程就被暂停住了。 注意，gdb启动后不能退出，因为gdb退出后线程就恢复执行了。\",\"要暂停多个线程就只需要启动多个gdb进程即可。\",\"在2个gdb进程中分别暂停了线程3697和线程3698后，如下： 可以看到线程3697和3698的状态都变成了“t”。\",\"但是我要暂停12个线程，岂不是要启动12个gdb？ 对，我没有在gdb中找到方法，目前较新版本的gdb，一个gdb进程也只能同时attach一个线程。 这很不合理呀。\",\"如果需要暂停的线程多，我们就要换一个工具，这个工具就是fthread，推荐给大家。\"]},\"35\":{\"h\":\"使用fthread暂停指定线程\"},\"36\":{\"h\":\"fthread简介\",\"t\":[\"fthread就是用来专门解决批量暂停线程的工具，正好符合我们目前的需求。\"]},\"37\":{\"h\":\"获取fthread\",\"t\":[\"fthread目前只提供了linux x64版本的可执行文件，其二进制下载路径如下：\",\"https://github.com/EmptyWatson/fthread/releases/download/v0.0.1-release/fthread_x64\"]},\"38\":{\"h\":\"使用fthread\",\"t\":[\"其官方文档上有详尽的说明\",\"我们以暂停mysqld中的几个线程(htop中标黄的线程)为例： \",\"[root@localhost tmp]# ./fthread_x64 -p $(pidof mysqld) 2022-01-29 15:26:02,589 INFO --------->fthread is starting...... 2022-01-29 15:26:02,590 INFO Welcome to fthread Press 'tab' to view autocompletions Type '.help' for help Type '.quit' or '.exit' to exit fthread> f 3697-3706 freeze threads .... freeze threads finish, succ cnt 10 fthread> f 3836,3837 freeze threads .... freeze threads finish, succ cnt 2 fthread> list u unfreeze u fthread> list freezed IDX Thread Id Status Name [2 ] 3697 * freezed mysqld [3 ] 3698 * freezed mysqld [4 ] 3699 * freezed mysqld [5 ] 3700 * freezed mysqld [6 ] 3701 * freezed mysqld [7 ] 3702 * freezed mysqld [8 ] 3703 * freezed mysqld [9 ] 3704 * freezed mysqld [10 ] 3705 * freezed mysqld [11 ] 3706 * freezed mysqld [14 ] 3836 * freezed mysqld [15 ] 3837 * freezed mysqld fthread>\",\"fthread提供了自动补全的能力： \",\"暂停完成后，htop中的线程状态： \"]},\"39\":{\"h\":\"暂停线程的原理\",\"t\":[\"暂停线程的原理很简单，就是借助linux提供的ptrace系统调用：\",\"#include <sys/ptrace.h> long ptrace(enum __ptrace_request request, pid_t pid, void *addr, void *data); ptrace(PTRACE_ATTACH, pid, 0, 0)\",\"ptrace的说明如下：\",\"The ptrace() system call provides a means by which one process (the \\\"tracer\\\") may observe and control the execution of another process (the \\\"tracee\\\"), and examine and change the tracee's memory and registers. It is primarily used to implement breakpoint debugging and system call tracing. A tracee first needs to be attached to the tracer. Attachment and subsequent commands are per thread: in a multithreaded process, every thread can be individually attached to a (potentially different) tracer, or left not attached and thus not debugged. Therefore, \\\"tracee\\\" always means \\\"(one) thread\\\", never \\\"a (possibly multithreaded) process\\\". Ptrace commands are always sent to a specific tracee using a call of the form ptrace(PTRACE_foo, pid, ...) where pid is the thread ID of the corresponding Linux thread.\",\"当指定的线程被attach后，线程的执行就暂停了。\"]},\"40\":{\"h\":\"参考资料\",\"t\":[\"[1] gdb手册 https://sourceware.org/gdb/onlinedocs/gdb/Attach.html\",\"[2] fthread https://github.com/EmptyWatson/fthread\",\"[3] ptrace 维基百科 https://en.wikipedia.org/wiki/Ptrace\",\"[4] ptrace man https://man7.org/linux/man-pages/man2/ptrace.2.html\"]},\"41\":{\"c\":[\"调试\"]},\"42\":{\"c\":[\"线程\",\"冻结\",\"调试技巧\",\"gdb\",\"性能优化\"]},\"43\":{\"h\":\"软件概念世界\"},\"44\":{\"h\":\"世界究竟是概念\",\"t\":[\"软件概念世界\",\"物质的世界，不用多说，我们都能轻松感知\",\"有这样的世界，大部分人们只能模糊感知到它的存在 他们就是无形的世界\",\"这样的世界不止一个\",\"有个名词叫概念世界，它就指向了这样一个世界\",\"物质世界里高楼丛生，四通八达，琳琅满目 俯身大地，大地宽广 仰望星空，银河灿烂 千山江水，万里晴天 璀璨多彩，无所不有\",\"一醒来这个物质世界就展现在你我面前，清清楚楚，明明白白\",\"而概念的世界则不同，你我无法用眼睛看到，用耳朵听到，用手触摸到，我们唯有借助思维才能了知\",\"人呀，一部分生活在物理世界中，另一部分生活在概念世界中\",\"更有甚者认为人就生活在概念世界中\",\"我们来看看概念世界是个什么样子\",\"准备好你的脑袋\",\"请思考：\",\"什么是道德？\",\"什么是万有引力？\",\"什么是爱？\",\"什么是自然？\",\"什么是生命？\",\"什么是时间？\",\"对，你看到概念世界了\",\"当你阅读本文时 概念世界在你脑海中展开了\",\"但你可能并没有感觉到这是一个世界\",\"你通过思考获得了对概念世界的一瞥\",\"这是我们所感知到的残缺的概念世界，我们像物质世界的盲人，摸到了概念世界小小的一角\",\"如果脑海里没有词句、图像、声音，那么对我们来说，概念世界也就不会出现\",\"这个世界是抽象的，而我们用头脑去观察它，往往只能看到一个局部 物质的世界里，你用眼睛看时，一刹那，一个真实清晰的世界展现开来，你在这一瞬间见到了数以千计，数以万计的事物，他们在空间的各处，有大小、形状、颜色，或独立、或聚集、或交错，清晰明了\",\"概念世界从哪儿诞生？ 到底是概念世界依附在物理世界之上？ 还是概念世界生成了物理世界？ 这是争论不休的话题，并未形成统一的认识，只能按下不表\",\"这些疑问并不妨碍我们去认识概念世界\",\"可以肯定概念世界与物质世界之间存在着深深的联系\",\"概念世界是人类在理性探寻与精神追求的过程中积累沉淀而形成的一个抽象世界\",\"概念世界像是我们物质世界的一个投影，又像是我们对物质世界的解构和升华\",\"这个世界里包含了物质世界的大量信息，但与物质世界又非常不同\",\"概念世界中的事物没有具体的可被我们看见的形象\",\"要想让他人看见你所看见的无形世界中的事物 第一要：取名，以符号区分事物 第二要：类比，用物质世界和其他无形世界中的已知事物\",\"所以概念世界里有什么？ 有像物理世界里原子一样的概念原子。 有像物理世界里使用的工具的一样的概念工具。 有像物理世界里修建的各种高楼大厦一样的概念建筑。 有像物理世界里各个国家地域一样的概念领域。 有像物理世界里确知的物理规律一样的概念规律。 ......\",\"有几个与概念事物相关的重要问题需要说说。\",\"什么是概念世界事物的诞生和消亡？ 与物理世界不同，不能描述概念事物的诞生和消亡，只能描述概念事物的实例的诞生和消亡。 当你用头脑感觉到它时，一个概念事物实例便诞生了。 当没有头脑感觉到它时，这个概念事物实例便消亡了。 所以概念事物实例很容易诞生，也很容易消亡。 我们只能通过概念事物实例来引证概念事物的存在。\",\"同一个界定(描述)的概念事物，在你脑海中的和我脑海中的是一样的吗？ 只要界定的概念事物是相同的描述，我们认为不同头脑里诞生的概念事物实例指向了同一个概念事物。 即便是在不同的时间里，不同的脑海里生成的一个界定相同的概念事物事物，他们是同一个概念事物。 所以概念事物具有分身术，他们不随物理世界的创建实例的不同而不同。\",\"那概念世界里面有像人一样拥有自由意志的事物吗？ 我不确定，或许会有\",\"所以概念世界里事物繁多，可以与物理世界中的事物相对应，也可以不与物理世界的事物相对应。 人们更能理解与物理世界相对应的事物 那些不与物理世界对应的概念事物不容易被认为存在，但在概念世界里，它存在。 我们倾向于将能与物理世界对应的概念事物称为真实事物。\",\"在这里我们主要说说其中的软件概念世界，这是一个大多数事物能够与物理世界相对应的概念世界。\",\"软件概念世界在物理世界上出现实例的时间并不算长，从它出现，到发展壮大初见规模，再到如今如此繁盛，不过百来年时间。\",\"软件概念世界伴随着物理世界中的计算机的诞生而出现，那是一段时期是人类历史上，璀璨耀眼而伤感悲痛的时期。\",\"所有接受过历史教育的朋友们应该都清楚那段时期，20世纪，理论和科技科技跳跃发展的时代，也是人类两次世界大战的时代。\",\"计算机，诞生于那个时期，它一种智能的人造事物。\",\"在我看来，目前地球上，除了生命，计算机是能在物理世界中自主展现概念世界的事物中能力最高的事物。\",\"计算机是物，为我们所用 它改变了我们的生活，它是一个强有力的，颠覆性的工具 计算机和计算机群体里有一个世界 这里别有洞天，它是一个奇妙的世界 无数的人感受到它的魅力，为它的不可思议而动容，投身到它的建设中去 它是就是软件世界\",\"计算机所展现的，就是这个软件概念世界\",\"软件的世界，是概念世界的一个地域，这个地方极其广阔，万象丛生，无所不有，它与概念世界中的其他地方相互影响，相互渗透，同样它通过物理世界中的计算机作用于我们的物质世界。\",\"软件世界不能独立存在，他的要素： 表现软件概念世界事物的载体，载体应该是计算机，当然也可以是人等一切具有可计算能力的事物 创建软件概念世界中事物的信息，也就是创建和描述概念世界中的事物\",\"软件世界，这是一个需要演绎的世界 像DNA需要表达一样\",\"所以人门将软件世界中的破坏分子也叫做病毒，因为它们本身对软件世界没有直接的破坏能力，它们需要依靠宿主去表达破坏性，像极了物理世界中的病毒。\",\"这个世界是物理世界的投影 其中存在着 次序与混乱 开放与封闭， 广大与渺小 精巧与粗犷 善良与邪恶 睿智与愚痴 人类世界里有的那些这里往往都有\",\"软件世界俨然成为了我们生活中的一大部分，你每天用着电脑，玩儿着手机，上着网，其实这个世界可忙碌了。 但是有好多朋友并未走进这个世界来瞧瞧。\",\"如今\",\"你看到它了\",\"他看到它了\",\"我也看到它了\",\"他是否真的存在，已经不那么重要\",\"因为，大家都看到它了\",\"如果你对这个世界有些好奇，请想想： 每当你用鼠标拖动电脑上的一个文件时，你拖动了什么？这个世界里又究竟发生了什么？\",\"我们去世界上的各个地方旅游，看了各种景点，你是否也曾想带着一双无形的眼睛来这个无形的世界里看看 如果软件世界是有形的，如果概念世界是有形的，如果精神世界是有形的，如果其他无形的世界是有形的 那时，你我将感叹到这个世界是如此的壮观，如此的奇妙，如此的不可思议，如此的异想天开 如果我们拥有一双像真实眼睛一样的无形之眼，顿时间，你我的世界会怎么样？\"]},\"45\":{\"c\":[\"哲学\",\"软件\"]},\"46\":{\"c\":[\"哲学\",\"软件\",\"概念\"]}},\"dirtCount\":0,\"index\":[[\"哲学\",{\"2\":{\"45\":1,\"46\":1}}],[\"顿时间\",{\"1\":{\"44\":1}}],[\"每当你用鼠标拖动电脑上的一个文件时\",{\"1\":{\"44\":1}}],[\"每个malloc和每个free的函数调用都需要做更多额外操作\",{\"1\":{\"26\":1}}],[\"请想想\",{\"1\":{\"44\":1}}],[\"请思考\",{\"1\":{\"44\":1}}],[\"已经不那么重要\",{\"1\":{\"44\":1}}],[\"上着网\",{\"1\":{\"44\":1}}],[\"玩儿着手机\",{\"1\":{\"44\":1}}],[\"睿智与愚痴\",{\"1\":{\"44\":1}}],[\"善良与邪恶\",{\"1\":{\"44\":1}}],[\"精巧与粗犷\",{\"1\":{\"44\":1}}],[\"广大与渺小\",{\"1\":{\"44\":1}}],[\"次序与混乱\",{\"1\":{\"44\":1}}],[\"像极了物理世界中的病毒\",{\"1\":{\"44\":1}}],[\"像dna需要表达一样\",{\"1\":{\"44\":1}}],[\"像这样\",{\"1\":{\"34\":1}}],[\"创建软件概念世界中事物的信息\",{\"1\":{\"44\":1}}],[\"载体应该是计算机\",{\"1\":{\"44\":1}}],[\"他是否真的存在\",{\"1\":{\"44\":1}}],[\"他看到它了\",{\"1\":{\"44\":1}}],[\"他的要素\",{\"1\":{\"44\":1}}],[\"他们不随物理世界的创建实例的不同而不同\",{\"1\":{\"44\":1}}],[\"他们是同一个概念事物\",{\"1\":{\"44\":1}}],[\"他们在空间的各处\",{\"1\":{\"44\":1}}],[\"他们就是无形的世界\",{\"1\":{\"44\":1}}],[\"他们拥有非常大的地址空间\",{\"1\":{\"9\":1}}],[\"同样它通过物理世界中的计算机作用于我们的物质世界\",{\"1\":{\"44\":1}}],[\"同一个界定\",{\"1\":{\"44\":1}}],[\"相互渗透\",{\"1\":{\"44\":1}}],[\"相同调用栈只有一条记录数据\",{\"1\":{\"10\":1}}],[\"万象丛生\",{\"1\":{\"44\":1}}],[\"万里晴天\",{\"1\":{\"44\":1}}],[\"投身到它的建设中去\",{\"1\":{\"44\":1}}],[\"颠覆性的工具\",{\"1\":{\"44\":1}}],[\"诞生于那个时期\",{\"1\":{\"44\":1}}],[\"计算机所展现的\",{\"1\":{\"44\":1}}],[\"计算机和计算机群体里有一个世界\",{\"1\":{\"44\":1}}],[\"计算机是物\",{\"1\":{\"44\":1}}],[\"计算机是能在物理世界中自主展现概念世界的事物中能力最高的事物\",{\"1\":{\"44\":1}}],[\"计算机\",{\"1\":{\"44\":1}}],[\"理论和科技科技跳跃发展的时代\",{\"1\":{\"44\":1}}],[\"理解了本文说的这种简要模型就足够使用\",{\"1\":{\"10\":1}}],[\"所有接受过历史教育的朋友们应该都清楚那段时期\",{\"1\":{\"44\":1}}],[\"所以人门将软件世界中的破坏分子也叫做病毒\",{\"1\":{\"44\":1}}],[\"所以概念世界里事物繁多\",{\"1\":{\"44\":1}}],[\"所以概念世界里有什么\",{\"1\":{\"44\":1}}],[\"所以概念事物具有分身术\",{\"1\":{\"44\":1}}],[\"所以概念事物实例很容易诞生\",{\"1\":{\"44\":1}}],[\"所以想要去修改执行的机器码让线程退出\",{\"1\":{\"33\":1}}],[\"所以前几列的值都为0\",{\"1\":{\"23\":1}}],[\"所以需要构造调用栈映射表\",{\"1\":{\"10\":1}}],[\"所以是编程者丧失了对程序行为表现的控制权\",{\"1\":{\"9\":1}}],[\"所以得以jemalloc为例\",{\"1\":{\"8\":1}}],[\"所以给自己预留些时间\",{\"1\":{\"7\":1}}],[\"璀璨耀眼而伤感悲痛的时期\",{\"1\":{\"44\":1}}],[\"璀璨多彩\",{\"1\":{\"44\":1}}],[\"再到如今如此繁盛\",{\"1\":{\"44\":1}}],[\"从它出现\",{\"1\":{\"44\":1}}],[\"从功用的角度来看\",{\"1\":{\"9\":1}}],[\"人类世界里有的那些这里往往都有\",{\"1\":{\"44\":1}}],[\"人们更能理解与物理世界相对应的事物\",{\"1\":{\"44\":1}}],[\"人呀\",{\"1\":{\"44\":1}}],[\"那时\",{\"1\":{\"44\":1}}],[\"那是一段时期是人类历史上\",{\"1\":{\"44\":1}}],[\"那些不与物理世界对应的概念事物不容易被认为存在\",{\"1\":{\"44\":1}}],[\"那概念世界里面有像人一样拥有自由意志的事物吗\",{\"1\":{\"44\":1}}],[\"那么对我们来说\",{\"1\":{\"44\":1}}],[\"那么我们如何实施\",{\"1\":{\"33\":1}}],[\"那么我们的怀疑就不成立了\",{\"1\":{\"33\":1}}],[\"那么就可以开展下一步\",{\"1\":{\"33\":1}}],[\"那么使其无数据输入的方法就无法排除它的嫌疑\",{\"1\":{\"33\":1}}],[\"那么再来观测一下系统的性能表现有没有恢复\",{\"1\":{\"33\":1}}],[\"那么你可能不会那么快感受到问题\",{\"1\":{\"9\":1}}],[\"那么\",{\"1\":{\"7\":1}}],[\"那么今天介绍的方法或许对你的意义不大\",{\"1\":{\"7\":1}}],[\"与物理世界不同\",{\"1\":{\"44\":1}}],[\"与应用程序的特性相关\",{\"1\":{\"26\":1}}],[\"类比\",{\"1\":{\"44\":1}}],[\"第二要\",{\"1\":{\"44\":1}}],[\"第一要\",{\"1\":{\"44\":1}}],[\"第一次生成的heap\",{\"1\":{\"24\":1}}],[\"取名\",{\"1\":{\"44\":1}}],[\"又像是我们对物质世界的解构和升华\",{\"1\":{\"44\":1}}],[\"到发展壮大初见规模\",{\"1\":{\"44\":1}}],[\"到底是概念世界依附在物理世界之上\",{\"1\":{\"44\":1}}],[\"到heap文件中\",{\"1\":{\"10\":1}}],[\"清晰明了\",{\"1\":{\"44\":1}}],[\"清清楚楚\",{\"1\":{\"44\":1}}],[\"颜色\",{\"1\":{\"44\":1}}],[\"形状\",{\"1\":{\"44\":1}}],[\"数以万计的事物\",{\"1\":{\"44\":1}}],[\"往往只能看到一个局部\",{\"1\":{\"44\":1}}],[\"声音\",{\"1\":{\"44\":1}}],[\"图像\",{\"1\":{\"44\":1}}],[\"摸到了概念世界小小的一角\",{\"1\":{\"44\":1}}],[\"什么是概念世界事物的诞生和消亡\",{\"1\":{\"44\":1}}],[\"什么是时间\",{\"1\":{\"44\":1}}],[\"什么是生命\",{\"1\":{\"44\":1}}],[\"什么是自然\",{\"1\":{\"44\":1}}],[\"什么是爱\",{\"1\":{\"44\":1}}],[\"什么是万有引力\",{\"1\":{\"44\":1}}],[\"什么是道德\",{\"1\":{\"44\":1}}],[\"更有甚者认为人就生活在概念世界中\",{\"1\":{\"44\":1}}],[\"另一部分生活在概念世界中\",{\"1\":{\"44\":1}}],[\"另外\",{\"1\":{\"10\":1}}],[\"明明白白\",{\"1\":{\"44\":1}}],[\"无数的人感受到它的魅力\",{\"1\":{\"44\":1}}],[\"无所不有\",{\"1\":{\"44\":2}}],[\"无法直接证实\",{\"1\":{\"33\":1}}],[\"无法分析消耗大量虚拟内存\",{\"1\":{\"26\":1}}],[\"千山江水\",{\"1\":{\"44\":1}}],[\"银河灿烂\",{\"1\":{\"44\":1}}],[\"仰望星空\",{\"1\":{\"44\":1}}],[\"俯身大地\",{\"1\":{\"44\":1}}],[\"琳琅满目\",{\"1\":{\"44\":1}}],[\"四通八达\",{\"1\":{\"44\":1}}],[\"物质世界里高楼丛生\",{\"1\":{\"44\":1}}],[\"物质的世界里\",{\"1\":{\"44\":1}}],[\"物质的世界\",{\"1\":{\"44\":1}}],[\"物理内存资源往往相对比较紧缺\",{\"1\":{\"9\":1}}],[\"物理内存资源\",{\"1\":{\"9\":1}}],[\"物理内存消耗越来越多\",{\"1\":{\"9\":1}}],[\"物理世界的一个码农\",{\"1\":{\"1\":1}}],[\"世界究竟是概念\",{\"0\":{\"44\":1}}],[\"软件\",{\"2\":{\"45\":1,\"46\":1}}],[\"软件世界俨然成为了我们生活中的一大部分\",{\"1\":{\"44\":1}}],[\"软件世界\",{\"1\":{\"44\":1}}],[\"软件世界不能独立存在\",{\"1\":{\"44\":1}}],[\"软件世界的一个信使\",{\"1\":{\"1\":1}}],[\"软件的世界\",{\"1\":{\"44\":1}}],[\"软件概念世界伴随着物理世界中的计算机的诞生而出现\",{\"1\":{\"44\":1}}],[\"软件概念世界在物理世界上出现实例的时间并不算长\",{\"1\":{\"44\":1}}],[\"软件概念世界\",{\"0\":{\"43\":1},\"1\":{\"44\":1}}],[\"性能优化\",{\"2\":{\"42\":1}}],[\"冻结\",{\"2\":{\"42\":1}}],[\"参考资料\",{\"0\":{\"40\":1}}],[\"线程\",{\"2\":{\"42\":1}}],[\"线程的执行就暂停了\",{\"1\":{\"39\":1}}],[\"线程编号\",{\"1\":{\"10\":2}}],[\"暂停线程的原理很简单\",{\"1\":{\"39\":1}}],[\"暂停线程的原理\",{\"0\":{\"39\":1}}],[\"暂停完成后\",{\"1\":{\"38\":1}}],[\"暂停profiling\",{\"1\":{\"19\":1}}],[\"获取fthread\",{\"0\":{\"37\":1}}],[\"正好符合我们目前的需求\",{\"1\":{\"36\":1}}],[\"推荐给大家\",{\"1\":{\"34\":1}}],[\"目前地球上\",{\"1\":{\"44\":1}}],[\"目前较新版本的gdb\",{\"1\":{\"34\":1}}],[\"目录结构如下\",{\"1\":{\"16\":1}}],[\"岂不是要启动12个gdb\",{\"1\":{\"34\":1}}],[\"要想让他人看见你所看见的无形世界中的事物\",{\"1\":{\"44\":1}}],[\"要想使用内存切片功能\",{\"1\":{\"13\":1}}],[\"要暂停多个线程就只需要启动多个gdb进程即可\",{\"1\":{\"34\":1}}],[\"注意\",{\"1\":{\"34\":1}}],[\"实则不然\",{\"1\":{\"34\":1}}],[\"实际运行的过程中业务流程却未充分使用这些内存\",{\"1\":{\"26\":1}}],[\"误导了\",{\"1\":{\"34\":1}}],[\"your\",{\"1\":{\"34\":1}}],[\"yuanguohuo\",{\"1\":{\"28\":1}}],[\"yum\",{\"1\":{\"12\":3}}],[\"找到了方法\",{\"1\":{\"34\":1}}],[\"找出增长的函数调用栈\",{\"1\":{\"10\":1}}],[\"经过几番探索后\",{\"1\":{\"34\":1}}],[\"中也没有记录如何达成这个目的\",{\"1\":{\"34\":1}}],[\"连广受好评的\",{\"1\":{\"34\":1}}],[\"说实话\",{\"1\":{\"33\":1}}],[\"即便是在不同的时间里\",{\"1\":{\"44\":1}}],[\"即便如此\",{\"1\":{\"33\":1}}],[\"即\",{\"1\":{\"33\":1}}],[\"既然方法5是有效的手段\",{\"1\":{\"33\":1}}],[\"既然是堆内存分配器\",{\"1\":{\"10\":1}}],[\"还是概念世界生成了物理世界\",{\"1\":{\"44\":1}}],[\"还可以接着分析\",{\"1\":{\"33\":1}}],[\"还有我们的切片分析工具\",{\"1\":{\"13\":1}}],[\"出问题的现场环境大概率还存在\",{\"1\":{\"33\":1}}],[\"影响面小\",{\"1\":{\"33\":1}}],[\"甚至找不到复现问题的有效手段\",{\"1\":{\"33\":1}}],[\"甚至会产生新的阻塞造成新的内存增长问题\",{\"1\":{\"26\":1}}],[\"属于风险较高的操作\",{\"1\":{\"33\":1}}],[\"重启复现\",{\"1\":{\"33\":1}}],[\"修改业务代码或者调整配置后关闭该业务流程\",{\"1\":{\"33\":1}}],[\"修改运行时的指令码\",{\"1\":{\"33\":1}}],[\"使这个被怀疑的业务没有数据需要处理\",{\"1\":{\"33\":1}}],[\"使用fthread\",{\"0\":{\"38\":1}}],[\"使用fthread暂停指定线程\",{\"0\":{\"35\":1}}],[\"使用gdb暂停指定的几个线程\",{\"0\":{\"34\":1}}],[\"使用方法1在更小的范围内去寻找线索\",{\"1\":{\"33\":1}}],[\"使用编译时链接的方式\",{\"1\":{\"13\":1}}],[\"使用ld\",{\"1\":{\"11\":1,\"13\":1}}],[\"使用jemalloc\",{\"1\":{\"6\":1}}],[\"让这几个线程都退出掉\",{\"1\":{\"33\":1}}],[\"让输入的数据被过滤掉\",{\"1\":{\"33\":1}}],[\"让他们在24点时重启下程序吧\",{\"1\":{\"7\":1}}],[\"改变程序的输入\",{\"1\":{\"33\":1}}],[\"方法出奇的简单\",{\"1\":{\"34\":1}}],[\"方法5在实施成本就比较低\",{\"1\":{\"33\":1}}],[\"方法5\",{\"1\":{\"33\":1}}],[\"方法4有不确定性\",{\"1\":{\"33\":1}}],[\"方法4\",{\"1\":{\"33\":1}}],[\"方法3属于linux的特定产物\",{\"1\":{\"33\":1}}],[\"方法3\",{\"1\":{\"33\":1}}],[\"方法2比较间接\",{\"1\":{\"33\":1}}],[\"方法2\",{\"1\":{\"33\":1}}],[\"方法1可以比较容易实施\",{\"1\":{\"33\":1}}],[\"方法1\",{\"1\":{\"33\":1}}],[\"看了各种景点\",{\"1\":{\"44\":1}}],[\"看到函数调用后也只能是猜想\",{\"1\":{\"33\":1}}],[\"看看有什么异常的系统调用或者影响系统硬件的操作\",{\"1\":{\"33\":1}}],[\"看看这个业务的12个线程在干什么\",{\"1\":{\"33\":1}}],[\"看名字就知道\",{\"1\":{\"13\":1}}],[\"验证这个猜想大概有这几种途径\",{\"1\":{\"33\":1}}],[\"问题跟踪思路\",{\"0\":{\"33\":1}}],[\"别的流程对它没有依赖\",{\"1\":{\"32\":1}}],[\"开放与封闭\",{\"1\":{\"44\":1}}],[\"开篇问题\",{\"0\":{\"32\":1}}],[\"开启了prof编译选项\",{\"1\":{\"13\":1}}],[\"调试技巧\",{\"2\":{\"30\":1,\"42\":1}}],[\"调试\",{\"2\":{\"29\":1,\"41\":1}}],[\"调用了malloc\",{\"1\":{\"26\":1}}],[\"调用一次malloc函数该计数值增加申请的字节数\",{\"1\":{\"10\":1}}],[\"调用一次malloc函数该计数值增加1\",{\"1\":{\"10\":2}}],[\"调用一次fre\",{\"1\":{\"10\":1}}],[\"调用free的时候并不会减去释放的内存的字节数\",{\"1\":{\"10\":1}}],[\"调用free的时候并不会减1\",{\"1\":{\"10\":1}}],[\"调用free\",{\"1\":{\"10\":1}}],[\"调用栈映射表\",{\"1\":{\"10\":2}}],[\"调用栈\",{\"1\":{\"10\":3}}],[\"zh\",{\"1\":{\"28\":1}}],[\"zxvf\",{\"1\":{\"14\":1}}],[\"解析heap文件的能力\",{\"1\":{\"27\":1}}],[\"下载heap文件\",{\"1\":{\"27\":1}}],[\"建议你将其工程化\",{\"1\":{\"27\":1}}],[\"此种场景下\",{\"1\":{\"26\":1}}],[\"此时业务的性能变得很差\",{\"1\":{\"32\":1}}],[\"此时jemalloc的prof功能就无法胜任了\",{\"1\":{\"26\":1}}],[\"此时jemalloc不会进行prof采样\",{\"1\":{\"24\":1}}],[\"此时想查看细微的信息\",{\"1\":{\"25\":1}}],[\"此时并未执行任何的内存申请操作\",{\"1\":{\"24\":1}}],[\"虚拟内存增长很快\",{\"1\":{\"26\":1}}],[\"虚拟内存资源\",{\"1\":{\"9\":1}}],[\"频繁使用虚拟内存预分配的编程风格\",{\"1\":{\"26\":1}}],[\"频繁的创建线程而不回收线程就会造成栈内存泄露\",{\"1\":{\"9\":1}}],[\"面对这个问题\",{\"1\":{\"26\":2}}],[\"程序的性能会有大幅度下降\",{\"1\":{\"26\":1}}],[\"程序内存消耗表现不符合业务需求\",{\"1\":{\"9\":1}}],[\"系统会变慢\",{\"1\":{\"26\":1}}],[\"用物质世界和其他无形世界中的已知事物\",{\"1\":{\"44\":1}}],[\"用手触摸到\",{\"1\":{\"44\":1}}],[\"用耳朵听到\",{\"1\":{\"44\":1}}],[\"用kcachegrind打开\",{\"1\":{\"25\":1}}],[\"用于验证jemalloc的profiling能力\",{\"1\":{\"15\":1}}],[\"用于交互查看调用图\",{\"1\":{\"12\":1}}],[\"用于存放内存指针与内存信息的关联关系\",{\"1\":{\"10\":1}}],[\"显示代码行数\",{\"1\":{\"25\":1}}],[\"检查代码会发现泄漏的调用路径和内存增长的位置与图中吻合\",{\"1\":{\"24\":1}}],[\"发送了prof激活信号\",{\"1\":{\"24\":1}}],[\"发挥了作用\",{\"1\":{\"23\":1}}],[\"$\",{\"1\":{\"24\":5,\"38\":1}}],[\"$0x3\",{\"1\":{\"23\":2}}],[\"$0x4\",{\"1\":{\"23\":3}}],[\"$0x0\",{\"1\":{\"23\":2}}],[\"$0x1\",{\"1\":{\"23\":4}}],[\"$0x2\",{\"1\":{\"23\":2}}],[\"$0x20\",{\"1\":{\"23\":1}}],[\"$0x6\",{\"1\":{\"23\":1}}],[\"由于没有分析累计统计\",{\"1\":{\"23\":1}}],[\"由perl语言所编写\",{\"1\":{\"13\":1}}],[\"q\",{\"1\":{\"34\":2}}],[\"quit\",{\"1\":{\"23\":1,\"38\":1}}],[\"ql\",{\"1\":{\"12\":1}}],[\"95\",{\"1\":{\"23\":1}}],[\"99\",{\"1\":{\"23\":1}}],[\"98\",{\"1\":{\"23\":1,\"28\":2}}],[\"94\",{\"1\":{\"23\":1}}],[\"92\",{\"1\":{\"23\":1}}],[\"9\",{\"1\":{\"23\":3,\"24\":1,\"38\":1}}],[\"96\",{\"1\":{\"23\":8}}],[\"9月\",{\"1\":{\"16\":2,\"23\":1,\"24\":4}}],[\"8f\",{\"1\":{\"28\":2}}],[\"84\",{\"1\":{\"28\":2}}],[\"840704\",{\"1\":{\"23\":2}}],[\"85\",{\"1\":{\"28\":2}}],[\"86\",{\"1\":{\"28\":2}}],[\"8272\",{\"1\":{\"23\":2}}],[\"87\",{\"1\":{\"23\":1}}],[\"8\",{\"1\":{\"23\":6,\"38\":1}}],[\"81920\",{\"1\":{\"23\":5}}],[\"查看下heap文件\",{\"1\":{\"23\":1}}],[\"尽最大力量还原信息\",{\"1\":{\"23\":1}}],[\"7808\",{\"1\":{\"24\":1}}],[\"72297\",{\"1\":{\"24\":13,\"25\":3}}],[\"7cc3\",{\"1\":{\"23\":1}}],[\"7c71\",{\"1\":{\"23\":1}}],[\"7c1f\",{\"1\":{\"23\":1}}],[\"7bcd\",{\"1\":{\"23\":1}}],[\"7dba\",{\"1\":{\"23\":1}}],[\"7db3\",{\"1\":{\"23\":1}}],[\"7dbc\",{\"1\":{\"23\":2}}],[\"7db1\",{\"1\":{\"23\":1}}],[\"7db5\",{\"1\":{\"23\":2}}],[\"7dad\",{\"1\":{\"23\":1}}],[\"7dab\",{\"1\":{\"23\":1}}],[\"7da7\",{\"1\":{\"23\":1}}],[\"7da5\",{\"1\":{\"23\":1}}],[\"7da1\",{\"1\":{\"23\":1}}],[\"7dcf\",{\"1\":{\"23\":1}}],[\"7dc8\",{\"1\":{\"23\":1}}],[\"7dc1\",{\"1\":{\"23\":1}}],[\"7dc3\",{\"1\":{\"23\":2}}],[\"7dca\",{\"1\":{\"23\":2}}],[\"7dd6\",{\"1\":{\"23\":1}}],[\"7dd5\",{\"1\":{\"23\":2}}],[\"7dd2\",{\"1\":{\"23\":5}}],[\"7dd1\",{\"1\":{\"23\":4}}],[\"7dd4\",{\"1\":{\"23\":2}}],[\"7d9f\",{\"1\":{\"23\":1}}],[\"7d9b\",{\"1\":{\"23\":1}}],[\"7d99\",{\"1\":{\"23\":1}}],[\"7d95\",{\"1\":{\"23\":1}}],[\"7d93\",{\"1\":{\"23\":1}}],[\"7d8f\",{\"1\":{\"23\":1}}],[\"7d8c\",{\"1\":{\"23\":1}}],[\"7d87\",{\"1\":{\"23\":1}}],[\"7d82\",{\"1\":{\"23\":1}}],[\"7d78\",{\"1\":{\"23\":1}}],[\"7d75\",{\"1\":{\"23\":1}}],[\"7d71\",{\"1\":{\"23\":1}}],[\"7d7d\",{\"1\":{\"23\":2}}],[\"7d6f\",{\"1\":{\"23\":1}}],[\"7d6b\",{\"1\":{\"23\":1}}],[\"7d68\",{\"1\":{\"23\":1}}],[\"7d66\",{\"1\":{\"23\":1}}],[\"7d62\",{\"1\":{\"23\":1}}],[\"7d60\",{\"1\":{\"23\":1}}],[\"7d5e\",{\"1\":{\"23\":2}}],[\"7d57\",{\"1\":{\"23\":1}}],[\"7d59\",{\"1\":{\"23\":2}}],[\"7d50\",{\"1\":{\"23\":1}}],[\"7d52\",{\"1\":{\"23\":2}}],[\"7d4e\",{\"1\":{\"23\":1}}],[\"7d49\",{\"1\":{\"23\":1}}],[\"7d44\",{\"1\":{\"23\":1}}],[\"7d3f\",{\"1\":{\"23\":1}}],[\"7d3d\",{\"1\":{\"23\":1}}],[\"7d3a\",{\"1\":{\"23\":1}}],[\"7d38\",{\"1\":{\"23\":1}}],[\"7d34\",{\"1\":{\"23\":1}}],[\"7d2e\",{\"1\":{\"23\":1}}],[\"7d2b\",{\"1\":{\"23\":1}}],[\"7d29\",{\"1\":{\"23\":1}}],[\"7d25\",{\"1\":{\"23\":1}}],[\"7d21\",{\"1\":{\"23\":1}}],[\"7d1d\",{\"1\":{\"23\":1}}],[\"7d1a\",{\"1\":{\"23\":1}}],[\"7d19\",{\"1\":{\"23\":1}}],[\"7d15\",{\"1\":{\"23\":2}}],[\"7\",{\"1\":{\"23\":2,\"28\":1,\"38\":1}}],[\"71646\",{\"1\":{\"23\":7}}],[\"7k\",{\"1\":{\"16\":1}}],[\"~336\",{\"1\":{\"23\":2}}],[\"~2182144\",{\"1\":{\"23\":2}}],[\"应用程序通过接口完成\",{\"1\":{\"22\":1}}],[\"增量达到门限时dump\",{\"1\":{\"22\":1}}],[\"增加采样间隔降低了切片的保真度\",{\"1\":{\"21\":1}}],[\"超过上一次内存消耗最大值时dump\",{\"1\":{\"22\":1}}],[\"配置项\",{\"1\":{\"22\":3}}],[\"配置heap文件的输出路径\",{\"1\":{\"20\":1}}],[\"退出时dump\",{\"1\":{\"22\":1}}],[\"退出时泄漏\",{\"1\":{\"9\":1}}],[\"触发profiling的2类方法\",{\"0\":{\"22\":1}}],[\"触发条件\",{\"1\":{\"9\":2}}],[\"将lg\",{\"1\":{\"21\":1}}],[\"将导出内存申请映射表\",{\"1\":{\"10\":1}}],[\"默认的采样间隔为512kib\",{\"1\":{\"21\":1}}],[\"表现软件概念世界事物的载体\",{\"1\":{\"44\":1}}],[\"表现为随着时间的前进\",{\"1\":{\"9\":1}}],[\"表示分配的字节数\",{\"1\":{\"21\":1}}],[\"选项\",{\"1\":{\"21\":1}}],[\"选项prof\",{\"1\":{\"19\":1}}],[\"选项prof可用于开启profiling功能\",{\"1\":{\"19\":1}}],[\"保留一个整体概要信息\",{\"1\":{\"21\":1}}],[\"保证这是一个好的方法\",{\"1\":{\"6\":1}}],[\"采样的目的是为了忽略一些细节\",{\"1\":{\"21\":1}}],[\"采样\",{\"1\":{\"21\":1}}],[\"造成切片不准确\",{\"1\":{\"19\":1}}],[\"有几个与概念事物相关的重要问题需要说说\",{\"1\":{\"44\":1}}],[\"有像物理世界里确知的物理规律一样的概念规律\",{\"1\":{\"44\":1}}],[\"有像物理世界里各个国家地域一样的概念领域\",{\"1\":{\"44\":1}}],[\"有像物理世界里修建的各种高楼大厦一样的概念建筑\",{\"1\":{\"44\":1}}],[\"有像物理世界里使用的工具的一样的概念工具\",{\"1\":{\"44\":1}}],[\"有像物理世界里原子一样的概念原子\",{\"1\":{\"44\":1}}],[\"有大小\",{\"1\":{\"44\":1}}],[\"有个名词叫概念世界\",{\"1\":{\"44\":1}}],[\"有这样的世界\",{\"1\":{\"44\":1}}],[\"有可能需要很长的时间\",{\"1\":{\"33\":1}}],[\"有可能错过内存分配的时机\",{\"1\":{\"19\":1}}],[\"有一个linux的多线程程序\",{\"1\":{\"32\":1}}],[\"有些场景下\",{\"1\":{\"26\":1}}],[\"有了时间和泄漏量就能有泄露速度\",{\"1\":{\"9\":1}}],[\"禁用\",{\"1\":{\"19\":1}}],[\"启动时\",{\"1\":{\"24\":1}}],[\"启动运行10分钟后\",{\"1\":{\"7\":1}}],[\"启用\",{\"1\":{\"19\":1}}],[\"启用和激活\",{\"1\":{\"19\":1}}],[\"启用和激活prof\",{\"0\":{\"19\":1}}],[\"例如在没有数据需要处理时也执行各种操作\",{\"1\":{\"33\":1}}],[\"例如我们可以用gdb\",{\"1\":{\"33\":1}}],[\"例如\",{\"1\":{\"17\":2,\"18\":1}}],[\"具体的配置项请参考jemalloc的官方手册\",{\"1\":{\"17\":1}}],[\"先介绍一下jemalloc运行时的控制方法\",{\"1\":{\"17\":1}}],[\"然再使用jeprof分析\",{\"1\":{\"16\":1}}],[\"然后再来分析系统性能表现\",{\"1\":{\"33\":1}}],[\"然后再使用jeprof工具\",{\"1\":{\"16\":1}}],[\"然后进行了多次dump操作\",{\"1\":{\"24\":1}}],[\"然后内存就稳定了\",{\"1\":{\"7\":1}}],[\"把裁剪后的符号通过eu\",{\"1\":{\"16\":1}}],[\"基本思路\",{\"1\":{\"16\":1}}],[\"基本原理也是在程序启动时开始进行prof记录\",{\"1\":{\"10\":1}}],[\"情况紧急\",{\"1\":{\"16\":1}}],[\"否则有可能解析不出调用堆栈\",{\"1\":{\"16\":1}}],[\"链接动态库编译\",{\"1\":{\"16\":1}}],[\"链接静态库编译\",{\"1\":{\"16\":1}}],[\"链接到可执行文件中\",{\"1\":{\"11\":1}}],[\"等待3秒\",{\"1\":{\"15\":2}}],[\"等到增长完成后\",{\"1\":{\"10\":1}}],[\"++level\",{\"1\":{\"15\":1,\"23\":1}}],[\"++i\",{\"1\":{\"15\":1}}],[\"||\",{\"1\":{\"15\":1,\"23\":1}}],[\"6181425\",{\"1\":{\"28\":1}}],[\"6k\",{\"1\":{\"24\":1}}],[\"68k\",{\"1\":{\"24\":1}}],[\"6\",{\"0\":{\"22\":1},\"1\":{\"15\":1,\"23\":1,\"28\":1,\"34\":12,\"38\":1}}],[\"64\",{\"1\":{\"12\":6,\"13\":4,\"34\":4}}],[\">fthread\",{\"1\":{\"38\":1}}],[\">=\",{\"1\":{\"23\":2}}],[\">end\",{\"1\":{\"15\":1,\"23\":1,\"24\":1}}],[\">wait\",{\"1\":{\"15\":2,\"23\":1,\"24\":2}}],[\">begin\",{\"1\":{\"15\":2,\"23\":1,\"24\":2}}],[\">\",{\"1\":{\"15\":1,\"21\":1,\"23\":2,\"24\":2,\"25\":2}}],[\"4>\",{\"1\":{\"23\":1}}],[\"49\",{\"1\":{\"23\":2}}],[\"46\",{\"1\":{\"23\":3}}],[\"40\",{\"1\":{\"23\":1}}],[\"43\",{\"1\":{\"16\":1}}],[\"4\",{\"0\":{\"20\":1},\"1\":{\"15\":4,\"16\":2,\"23\":4,\"28\":1,\"34\":2,\"38\":1,\"40\":1}}],[\"implement\",{\"1\":{\"39\":1}}],[\"it\",{\"1\":{\"39\":1}}],[\"item\",{\"1\":{\"28\":1}}],[\"is\",{\"1\":{\"34\":1,\"38\":1,\"39\":2}}],[\"idx\",{\"1\":{\"38\":1}}],[\"id\",{\"1\":{\"34\":4,\"38\":1,\"39\":1}}],[\"ios\",{\"1\":{\"23\":1}}],[\"io\",{\"1\":{\"23\":8,\"34\":2}}],[\"i++\",{\"1\":{\"15\":1}}],[\"i\",{\"1\":{\"15\":6}}],[\"if\",{\"1\":{\"15\":13,\"23\":2}}],[\"individually\",{\"1\":{\"39\":1}}],[\"in\",{\"1\":{\"34\":26,\"39\":1}}],[\"info\",{\"1\":{\"34\":1,\"38\":2}}],[\"inuse\",{\"1\":{\"25\":1}}],[\"insert\",{\"1\":{\"23\":1}}],[\"install\",{\"1\":{\"12\":6,\"14\":1}}],[\"interval\",{\"1\":{\"22\":1}}],[\"int32\",{\"1\":{\"15\":1}}],[\"int\",{\"1\":{\"15\":5,\"23\":2}}],[\"include\",{\"1\":{\"12\":3,\"13\":1,\"15\":8,\"39\":1}}],[\"生成了4个heap文件\",{\"1\":{\"24\":1}}],[\"生成文件的路径如下\",{\"1\":{\"20\":1}}],[\"生成指定范围的随机数\",{\"1\":{\"15\":1}}],[\"生成heap文件\",{\"1\":{\"10\":1}}],[\"<unsigned\",{\"1\":{\"23\":2}}],[\"<unistd\",{\"1\":{\"15\":1}}],[\"<fun\",{\"1\":{\"23\":22}}],[\"<<\",{\"1\":{\"15\":22}}],[\"<=\",{\"1\":{\"15\":1,\"23\":3,\"24\":4}}],[\"<\",{\"1\":{\"15\":2}}],[\"<jemalloc>\",{\"1\":{\"23\":4}}],[\"<jemalloc\",{\"1\":{\"15\":1}}],[\"<sys\",{\"1\":{\"39\":1}}],[\"<signal\",{\"1\":{\"15\":1}}],[\"<stdlib\",{\"1\":{\"15\":1}}],[\"<stdio\",{\"1\":{\"15\":1}}],[\"<stdint\",{\"1\":{\"15\":1}}],[\"<random>\",{\"1\":{\"15\":1}}],[\"<iostream>\",{\"1\":{\"15\":1}}],[\"代码如下\",{\"1\":{\"15\":1}}],[\"输出jemalloc的内部统计信息\",{\"1\":{\"15\":1}}],[\"新的malloc从此时才能被记录\",{\"1\":{\"15\":1}}],[\"激活profiling\",{\"1\":{\"15\":1,\"19\":1}}],[\"进行profiling的heap文件dump操作\",{\"1\":{\"15\":1}}],[\"动作\",{\"1\":{\"15\":1}}],[\"动态库的方式在函数调用时会多一次符号查找\",{\"1\":{\"11\":1}}],[\"信号id\",{\"1\":{\"15\":1}}],[\"view\",{\"1\":{\"38\":1}}],[\"v0\",{\"1\":{\"37\":1}}],[\"void\",{\"1\":{\"15\":22,\"23\":1,\"39\":2}}],[\"version\",{\"1\":{\"13\":1}}],[\"never\",{\"1\":{\"39\":1}}],[\"needs\",{\"1\":{\"39\":1}}],[\"net\",{\"1\":{\"28\":1}}],[\"newlen\",{\"1\":{\"15\":1}}],[\"newp\",{\"1\":{\"15\":1}}],[\"new申请了多少内存\",{\"1\":{\"7\":1}}],[\"not\",{\"1\":{\"39\":2}}],[\"no\",{\"1\":{\"34\":24}}],[\"nodefraction=0\",{\"1\":{\"25\":1}}],[\"nodecount=1000\",{\"1\":{\"25\":1}}],[\"nodes\",{\"1\":{\"23\":1,\"24\":2}}],[\"nop\",{\"1\":{\"23\":2}}],[\"noinline\",{\"1\":{\"15\":8}}],[\"null\",{\"1\":{\"15\":5,\"18\":2,\"22\":3}}],[\"nullptr\",{\"1\":{\"15\":3}}],[\"n\",{\"1\":{\"15\":3}}],[\"name\",{\"1\":{\"15\":1,\"38\":1}}],[\"模拟内存泄漏和内存增长\",{\"1\":{\"15\":1}}],[\"jobs\",{\"1\":{\"34\":1}}],[\"jmp\",{\"1\":{\"23\":7}}],[\"jbe\",{\"1\":{\"23\":1}}],[\"ja\",{\"1\":{\"23\":3}}],[\"j\",{\"1\":{\"14\":1}}],[\"je\",{\"1\":{\"23\":11,\"24\":2}}],[\"jepprof\",{\"1\":{\"20\":1}}],[\"jeprof会省略许多信息\",{\"1\":{\"25\":1}}],[\"jeprof还有非常多的其它用法\",{\"1\":{\"25\":1}}],[\"jeprof的\",{\"1\":{\"16\":1}}],[\"jeprof是一个脚本工具\",{\"1\":{\"13\":1}}],[\"jeprof\",{\"1\":{\"12\":2,\"13\":1,\"16\":1,\"20\":2,\"23\":19,\"24\":13,\"25\":10}}],[\"jemalloc直接提供了内存泄漏检查的能力\",{\"1\":{\"23\":1}}],[\"jemalloc直接提供了分析能力\",{\"1\":{\"10\":1}}],[\"jemalloc内部自动切片\",{\"1\":{\"22\":1}}],[\"jemalloc内部会有一个抽象意义上的allocate\",{\"1\":{\"10\":1}}],[\"jemalloc提供了profiling功能的两种开启方式\",{\"1\":{\"19\":1}}],[\"jemalloc提供了足够的接口\",{\"1\":{\"10\":1}}],[\"jemalloc库和graphviz库\",{\"1\":{\"11\":1}}],[\"jemalloc里\",{\"1\":{\"10\":1}}],[\"jemalloc中的调用栈映射表比我们这里描述的要复杂\",{\"1\":{\"10\":1}}],[\"jemalloc会存储调用堆栈和申请到的内存指针\",{\"1\":{\"10\":1}}],[\"jemalloc的heap\",{\"1\":{\"28\":1}}],[\"jemalloc的heap文件中对调用栈进行了聚合\",{\"1\":{\"10\":1}}],[\"jemalloc的泄漏检查\",{\"1\":{\"28\":1}}],[\"jemalloc的分析结果就变得不可信了\",{\"1\":{\"26\":1}}],[\"jemalloc的动态库路径\",{\"1\":{\"11\":1}}],[\"jemalloc的使用方式主要有2种\",{\"1\":{\"11\":1}}],[\"jemalloc的切片能力了\",{\"1\":{\"10\":1}}],[\"jemalloc的工具都有类似的处理逻辑\",{\"1\":{\"10\":1}}],[\"jemalloc的官方文档上叫profiling\",{\"1\":{\"10\":1}}],[\"jemalloc的profiling就是动态跟踪技术\",{\"1\":{\"9\":1}}],[\"jemalloc\",{\"1\":{\"8\":3,\"12\":8,\"13\":4,\"14\":4,\"15\":1,\"16\":5,\"23\":7,\"24\":10,\"25\":4,\"28\":9},\"2\":{\"30\":1}}],[\"jemalloc出自facebook\",{\"1\":{\"8\":1}}],[\"jemalloc切片方法并非万能\",{\"1\":{\"26\":1}}],[\"jemalloc切片\",{\"0\":{\"6\":1}}],[\"where\",{\"1\":{\"39\":1}}],[\"which\",{\"1\":{\"39\":1}}],[\"way\",{\"1\":{\"34\":1}}],[\"was\",{\"1\":{\"34\":1}}],[\"www\",{\"1\":{\"28\":1}}],[\"wikipedia\",{\"1\":{\"28\":1,\"40\":1}}],[\"wiki\",{\"1\":{\"28\":3,\"40\":1}}],[\"with\",{\"1\":{\"23\":2,\"24\":4,\"28\":1,\"34\":2}}],[\"windows上应该也可以\",{\"1\":{\"7\":1}}],[\"welcome\",{\"1\":{\"23\":1,\"38\":1}}],[\"w\",{\"1\":{\"15\":2,\"23\":2}}],[\"write\",{\"1\":{\"15\":1}}],[\"wget\",{\"1\":{\"14\":1}}],[\"步骤很简单\",{\"1\":{\"14\":1}}],[\"就是这个软件概念世界\",{\"1\":{\"44\":1}}],[\"就是借助linux提供的ptrace系统调用\",{\"1\":{\"39\":1}}],[\"就是使用gdb的attach命令\",{\"1\":{\"34\":1}}],[\"就能确认怀疑对不对了\",{\"1\":{\"33\":1}}],[\"就需要自己手动编译\",{\"1\":{\"14\":1}}],[\"就让我用捉急的英文勉强翻译一下\",{\"1\":{\"10\":1}}],[\"对\",{\"1\":{\"34\":1,\"44\":1}}],[\"对应的线程就被暂停住了\",{\"1\":{\"34\":1}}],[\"对系统整体性能产生了影响\",{\"1\":{\"32\":1}}],[\"对比2个不同的heap文件的差异\",{\"1\":{\"13\":1}}],[\"对于运行一段时间后才激活prof功能的情况\",{\"1\":{\"19\":1}}],[\"对于我们安装的rpm或者deb包\",{\"1\":{\"13\":1}}],[\"对于内存增长问题\",{\"1\":{\"10\":1}}],[\"对于内存泄漏问题\",{\"1\":{\"10\":1}}],[\"文本\",{\"1\":{\"13\":1}}],[\"分为\",{\"1\":{\"22\":1}}],[\"分割\",{\"1\":{\"17\":1}}],[\"分析结果\",{\"1\":{\"24\":1}}],[\"分析heap文件和带符号信息的可执行文件\",{\"1\":{\"16\":1}}],[\"分析和可视化jemalloc生成的heap文件\",{\"1\":{\"13\":1}}],[\"分配对象个数\",{\"1\":{\"10\":2}}],[\"反汇编指定函数\",{\"1\":{\"13\":1}}],[\"反正国内对这个问题也没有业界统一的叫法\",{\"1\":{\"10\":1}}],[\"主要通过mallctl来实现对jemalloc的控制\",{\"1\":{\"15\":1}}],[\"主要使用了2个接口\",{\"1\":{\"15\":1}}],[\"主要提供的能力\",{\"1\":{\"13\":1}}],[\"主要还是为了追求内存使用的性能表现\",{\"1\":{\"8\":1}}],[\"关键就是\",{\"1\":{\"23\":1}}],[\"关注这项\",{\"1\":{\"13\":1}}],[\"关于内存泄漏问题\",{\"1\":{\"9\":1}}],[\"fthread提供了自动补全的能力\",{\"1\":{\"38\":1}}],[\"fthread>\",{\"1\":{\"38\":5}}],[\"fthread\",{\"1\":{\"37\":2,\"38\":2,\"40\":2}}],[\"fthread目前只提供了linux\",{\"1\":{\"37\":1}}],[\"fthread就是用来专门解决批量暂停线程的工具\",{\"1\":{\"36\":1}}],[\"fthread简介\",{\"0\":{\"36\":1}}],[\"foo\",{\"1\":{\"39\":1}}],[\"found\",{\"1\":{\"34\":24}}],[\"form\",{\"1\":{\"39\":1}}],[\"for\",{\"1\":{\"15\":2,\"23\":3,\"34\":12,\"38\":1}}],[\"flat\",{\"1\":{\"23\":1}}],[\"failure\",{\"1\":{\"23\":1}}],[\"false\",{\"1\":{\"13\":3,\"19\":2,\"24\":1}}],[\"fwrite\",{\"1\":{\"23\":1}}],[\"f\",{\"1\":{\"23\":7,\"38\":2}}],[\"first\",{\"1\":{\"39\":1}}],[\"finish\",{\"1\":{\"38\":2}}],[\"find\",{\"1\":{\"34\":1}}],[\"final\",{\"1\":{\"22\":1,\"23\":2}}],[\"files\",{\"1\":{\"34\":5}}],[\"file\",{\"1\":{\"23\":10,\"24\":4}}],[\"fill\",{\"1\":{\"13\":1}}],[\"fun\",{\"1\":{\"15\":15,\"23\":23}}],[\"fr=aladdin\",{\"1\":{\"28\":1}}],[\"freezed\",{\"1\":{\"38\":13}}],[\"freeze\",{\"1\":{\"38\":4}}],[\"free\",{\"1\":{\"15\":4}}],[\"free的时候将ptr指针所对应的内存申请size值从内存申请映射表中减掉\",{\"1\":{\"10\":1}}],[\"from\",{\"1\":{\"15\":2,\"34\":34}}],[\"front\",{\"0\":{\"3\":1},\"1\":{\"3\":1}}],[\"or\",{\"1\":{\"34\":1,\"38\":1,\"39\":1}}],[\"org\",{\"1\":{\"28\":2,\"40\":3}}],[\"outside\",{\"1\":{\"34\":1}}],[\"out\",{\"1\":{\"25\":2,\"34\":1}}],[\"of\",{\"1\":{\"23\":1,\"34\":1,\"39\":3}}],[\"ostream\",{\"1\":{\"23\":1}}],[\"overflow\",{\"1\":{\"23\":2}}],[\"onlinedocs\",{\"1\":{\"40\":1}}],[\"one\",{\"1\":{\"34\":1,\"39\":2}}],[\"on\",{\"1\":{\"23\":2}}],[\"observe\",{\"1\":{\"39\":1}}],[\"objects\",{\"1\":{\"23\":2}}],[\"oblivious\",{\"1\":{\"13\":1}}],[\"o\",{\"1\":{\"16\":2}}],[\"operator<<\",{\"1\":{\"23\":1}}],[\"op2\",{\"1\":{\"15\":1,\"24\":1}}],[\"op\",{\"1\":{\"15\":1,\"23\":1,\"24\":1}}],[\"opts\",{\"1\":{\"15\":1}}],[\"option\",{\"1\":{\"13\":1}}],[\"oldlenp\",{\"1\":{\"15\":1}}],[\"oldp\",{\"1\":{\"15\":1}}],[\"02\",{\"1\":{\"28\":1,\"38\":2}}],[\"01\",{\"1\":{\"28\":1,\"38\":2}}],[\"000001\",{\"1\":{\"25\":2}}],[\"0x00007f453f4bf644\",{\"1\":{\"34\":2}}],[\"0x000000001\",{\"1\":{\"10\":1}}],[\"0x000000789\",{\"1\":{\"10\":3}}],[\"0x000000456\",{\"1\":{\"10\":5}}],[\"0x000000123\",{\"1\":{\"10\":4}}],[\"0x4\",{\"1\":{\"23\":7}}],[\"0x1\",{\"1\":{\"23\":1}}],[\"0x18\",{\"1\":{\"23\":6}}],[\"0k\",{\"1\":{\"16\":1}}],[\"08\",{\"1\":{\"16\":1}}],[\"09\",{\"1\":{\"16\":1}}],[\"0\",{\"1\":{\"13\":2,\"15\":10,\"22\":1,\"23\":192,\"24\":4,\"25\":3,\"34\":6,\"37\":1,\"39\":2}}],[\"590\",{\"1\":{\"38\":1}}],[\"589\",{\"1\":{\"38\":1}}],[\"58368\",{\"1\":{\"23\":4}}],[\"55046\",{\"1\":{\"25\":2}}],[\"552960\",{\"1\":{\"23\":4}}],[\"5k\",{\"1\":{\"24\":1}}],[\"5\",{\"0\":{\"21\":1},\"1\":{\"13\":1,\"14\":4,\"15\":2,\"23\":4,\"24\":1,\"28\":1,\"38\":1}}],[\"56bytes\",{\"1\":{\"10\":5}}],[\"26\",{\"1\":{\"38\":2}}],[\"26bytes\",{\"1\":{\"10\":5}}],[\"29\",{\"1\":{\"38\":2}}],[\"2>\",{\"1\":{\"23\":1}}],[\"20世纪\",{\"1\":{\"44\":1}}],[\"2022\",{\"1\":{\"38\":2}}],[\"2019\",{\"1\":{\"28\":1}}],[\"2099200\",{\"1\":{\"23\":2}}],[\"200000\",{\"1\":{\"15\":1}}],[\"25\",{\"1\":{\"23\":2}}],[\"2182\",{\"1\":{\"23\":1}}],[\"2182144\",{\"1\":{\"23\":8}}],[\"2100224\",{\"1\":{\"23\":6}}],[\"2^12\",{\"1\":{\"22\":1}}],[\"2^19b\",{\"1\":{\"21\":1}}],[\"2^19\",{\"1\":{\"21\":1}}],[\"2\",{\"0\":{\"18\":1},\"1\":{\"13\":2,\"14\":4,\"15\":6,\"16\":3,\"23\":21,\"24\":9,\"26\":1,\"28\":1,\"34\":12,\"38\":2,\"40\":2}}],[\"every\",{\"1\":{\"39\":1}}],[\"emptywatson\",{\"1\":{\"37\":1,\"40\":1}}],[\"e6\",{\"1\":{\"28\":4}}],[\"e5\",{\"1\":{\"28\":4}}],[\"edgefraction=0\",{\"1\":{\"25\":1}}],[\"edges\",{\"1\":{\"23\":1,\"24\":2}}],[\"edx\",{\"1\":{\"23\":2}}],[\"edi\",{\"1\":{\"23\":2}}],[\"esi\",{\"1\":{\"23\":2}}],[\"eax\",{\"1\":{\"23\":10}}],[\"error\",{\"1\":{\"15\":3}}],[\"err\",{\"1\":{\"15\":3}}],[\"else\",{\"1\":{\"15\":2}}],[\"en\",{\"1\":{\"40\":1}}],[\"enum\",{\"1\":{\"39\":1}}],[\"endbr64\",{\"1\":{\"23\":1}}],[\"endl\",{\"1\":{\"15\":11}}],[\"enabled\",{\"1\":{\"34\":2}}],[\"enable\",{\"1\":{\"14\":1}}],[\"examine\",{\"1\":{\"39\":1}}],[\"execution\",{\"1\":{\"39\":1}}],[\"exit\",{\"1\":{\"38\":2}}],[\"extra\",{\"1\":{\"13\":1}}],[\"expression\",{\"1\":{\"13\":1}}],[\"e\",{\"1\":{\"13\":1}}],[\"e函数该计数值减1\",{\"1\":{\"10\":1}}],[\"则输出结果中的config\",{\"1\":{\"13\":1}}],[\"x64\",{\"1\":{\"37\":1,\"38\":1}}],[\"x64版本的可执行文件\",{\"1\":{\"37\":1}}],[\"xsputn\",{\"1\":{\"23\":2}}],[\"xxx\",{\"1\":{\"20\":1}}],[\"xxxxx\",{\"1\":{\"13\":1}}],[\"x\",{\"1\":{\"16\":1}}],[\"xr\",{\"1\":{\"16\":1}}],[\"x86\",{\"1\":{\"12\":6,\"13\":4,\"34\":4}}],[\"特别的\",{\"1\":{\"13\":1}}],[\"编译时静态链接需要用的头文件和静态库\",{\"1\":{\"13\":1}}],[\"需要继续努力寻找其他线索了\",{\"1\":{\"33\":1}}],[\"需要谨慎使用\",{\"1\":{\"33\":1}}],[\"需要先抓取数据\",{\"1\":{\"16\":1}}],[\"需要保证编译jemalloc的库时\",{\"1\":{\"13\":1}}],[\"需要如下文件\",{\"1\":{\"13\":1}}],[\"需要另外使用函数调用栈来表达内存分配信息\",{\"1\":{\"10\":1}}],[\"仅需使用动态库\",{\"1\":{\"13\":1}}],[\"3699\",{\"1\":{\"38\":1}}],[\"3698\",{\"1\":{\"38\":1}}],[\"3697\",{\"1\":{\"34\":3,\"38\":2}}],[\"3837\",{\"1\":{\"38\":2}}],[\"3836\",{\"1\":{\"38\":2}}],[\"3a\",{\"1\":{\"28\":2}}],[\"3705\",{\"1\":{\"38\":1}}],[\"3704\",{\"1\":{\"38\":1}}],[\"3703\",{\"1\":{\"38\":1}}],[\"3702\",{\"1\":{\"38\":1}}],[\"3701\",{\"1\":{\"38\":1}}],[\"3700\",{\"1\":{\"38\":1}}],[\"3706\",{\"1\":{\"38\":2}}],[\"370\",{\"1\":{\"24\":1}}],[\"3>\",{\"1\":{\"23\":1}}],[\"353280\",{\"1\":{\"23\":4}}],[\"30\",{\"1\":{\"23\":2}}],[\"3\",{\"0\":{\"19\":1},\"1\":{\"12\":1,\"15\":5,\"23\":12,\"24\":3,\"25\":2,\"28\":2,\"38\":1,\"40\":1}}],[\"14\",{\"1\":{\"38\":1}}],[\"15\",{\"1\":{\"38\":3}}],[\"1561\",{\"1\":{\"24\":1}}],[\"1853\",{\"1\":{\"24\":1}}],[\"1>\",{\"1\":{\"23\":1}}],[\"16\",{\"1\":{\"23\":2}}],[\"122\",{\"1\":{\"23\":1}}],[\"121\",{\"1\":{\"23\":1}}],[\"12k\",{\"1\":{\"23\":2}}],[\"12表示4kb\",{\"1\":{\"22\":1}}],[\"12\",{\"1\":{\"22\":1,\"24\":2}}],[\"1915904\",{\"1\":{\"23\":1}}],[\"19\",{\"1\":{\"21\":1}}],[\"11k\",{\"1\":{\"24\":2}}],[\"116\",{\"1\":{\"23\":1}}],[\"115\",{\"1\":{\"23\":1}}],[\"113\",{\"1\":{\"23\":1}}],[\"112\",{\"1\":{\"23\":1}}],[\"110\",{\"1\":{\"23\":1}}],[\"110592\",{\"1\":{\"23\":4}}],[\"118\",{\"1\":{\"23\":2}}],[\"11\",{\"0\":{\"18\":1,\"19\":1,\"20\":1,\"21\":1,\"22\":1},\"1\":{\"17\":1,\"24\":6,\"38\":1}}],[\"10910\",{\"1\":{\"23\":1}}],[\"109\",{\"1\":{\"23\":1}}],[\"107\",{\"1\":{\"23\":1}}],[\"1075200\",{\"1\":{\"23\":2}}],[\"106\",{\"1\":{\"23\":1}}],[\"103\",{\"1\":{\"23\":1}}],[\"102\",{\"1\":{\"23\":1}}],[\"1024000\",{\"1\":{\"23\":3}}],[\"1024\",{\"1\":{\"15\":9,\"23\":11}}],[\"1024bytes\",{\"1\":{\"10\":3}}],[\"100个gdb小技巧\",{\"1\":{\"34\":1}}],[\"100\",{\"1\":{\"15\":1,\"23\":45}}],[\"1000\",{\"1\":{\"15\":4}}],[\"10\",{\"1\":{\"15\":3,\"16\":1,\"23\":1,\"38\":2}}],[\"1\",{\"1\":{\"12\":1,\"13\":1,\"14\":4,\"15\":11,\"16\":1,\"17\":1,\"23\":8,\"24\":8,\"26\":1,\"28\":1,\"34\":24,\"37\":1,\"40\":1}}],[\"be\",{\"1\":{\"39\":2}}],[\"begin\",{\"1\":{\"13\":1}}],[\"by\",{\"1\":{\"39\":1}}],[\"bytes\",{\"1\":{\"23\":4,\"24\":2,\"25\":4}}],[\"bc\",{\"1\":{\"28\":2}}],[\"b3\",{\"1\":{\"28\":2}}],[\"baidu\",{\"1\":{\"28\":1}}],[\"baike\",{\"1\":{\"28\":1}}],[\"backtrace\",{\"1\":{\"23\":2}}],[\"base=\",{\"1\":{\"24\":2,\"25\":1}}],[\"base\",{\"1\":{\"12\":2}}],[\"b\",{\"1\":{\"21\":1,\"22\":1,\"23\":6,\"24\":4}}],[\"bool\",{\"1\":{\"15\":1,\"18\":1}}],[\"big\",{\"1\":{\"15\":2,\"23\":3}}],[\"bin\",{\"1\":{\"12\":2,\"13\":1}}],[\"breakpoint\",{\"1\":{\"39\":1}}],[\"break\",{\"1\":{\"15\":5,\"23\":6}}],[\"build\",{\"1\":{\"13\":1}}],[\"host\",{\"1\":{\"34\":2}}],[\"help\",{\"1\":{\"23\":2,\"38\":2}}],[\"heap两次dump来做比较\",{\"1\":{\"24\":1}}],[\"heap和test\",{\"1\":{\"24\":1}}],[\"heap是在激活prof后\",{\"1\":{\"24\":1}}],[\"heap\",{\"1\":{\"16\":3,\"20\":2,\"23\":9,\"24\":10,\"25\":5,\"28\":3}}],[\"h>\",{\"1\":{\"15\":6,\"39\":1}}],[\"h和libjemalloc\",{\"1\":{\"13\":1}}],[\"htop中的线程状态\",{\"1\":{\"38\":1}}],[\"htop中标黄的线程\",{\"1\":{\"38\":1}}],[\"http\",{\"1\":{\"28\":1}}],[\"https\",{\"1\":{\"8\":3,\"14\":1,\"28\":6,\"37\":1,\"40\":4}}],[\"html\",{\"1\":{\"12\":1,\"28\":1,\"40\":2}}],[\"h\",{\"1\":{\"12\":1,\"13\":1,\"25\":1}}],[\"u\",{\"1\":{\"38\":2}}],[\"utility\",{\"1\":{\"34\":1}}],[\"unfreeze\",{\"1\":{\"38\":1}}],[\"unix\",{\"1\":{\"34\":1}}],[\"uniform\",{\"1\":{\"15\":1}}],[\"unstrip命令再拼接回去\",{\"1\":{\"16\":1}}],[\"usual\",{\"1\":{\"34\":1}}],[\"used\",{\"1\":{\"39\":1}}],[\"use\",{\"1\":{\"28\":2}}],[\"using\",{\"1\":{\"23\":4,\"24\":4,\"34\":4,\"39\":1}}],[\"usleep\",{\"1\":{\"15\":3}}],[\"usr\",{\"1\":{\"12\":27,\"13\":6,\"14\":1,\"15\":4,\"34\":2}}],[\"uint32\",{\"1\":{\"15\":3,\"23\":2}}],[\"uint8\",{\"1\":{\"15\":1}}],[\"ubuntu上安装\",{\"1\":{\"12\":1}}],[\"结果如下\",{\"1\":{\"12\":1,\"24\":2}}],[\"结伴\",{\"1\":{\"0\":1}}],[\"long\",{\"1\":{\"39\":1}}],[\"localhost\",{\"1\":{\"34\":2,\"38\":1}}],[\"local\",{\"1\":{\"14\":1,\"23\":4,\"24\":4}}],[\"lock\",{\"1\":{\"13\":1}}],[\"latest\",{\"1\":{\"28\":1}}],[\"lazy\",{\"1\":{\"13\":1}}],[\"lg\",{\"1\":{\"21\":1,\"22\":1,\"23\":2,\"24\":1}}],[\"ljemalloc\",{\"1\":{\"16\":1}}],[\"lpthread\",{\"1\":{\"16\":1}}],[\"lht\",{\"1\":{\"23\":1,\"24\":1}}],[\"lh\",{\"1\":{\"16\":1}}],[\"ls\",{\"1\":{\"16\":1,\"23\":1,\"24\":1}}],[\"left\",{\"1\":{\"39\":1}}],[\"leaveq\",{\"1\":{\"23\":1}}],[\"lea\",{\"1\":{\"23\":1}}],[\"leak\",{\"1\":{\"15\":11,\"23\":48,\"24\":2,\"28\":1}}],[\"level\",{\"1\":{\"15\":5,\"23\":3}}],[\"ldl\",{\"1\":{\"16\":1}}],[\"ld\",{\"1\":{\"13\":1,\"34\":4}}],[\"list\",{\"1\":{\"38\":2}}],[\"lines\",{\"1\":{\"25\":1}}],[\"lines参数可以显示代码对应位置\",{\"1\":{\"16\":1}}],[\"linux上暂停指定的多个运行线程\",{\"0\":{\"31\":1}}],[\"linux\",{\"1\":{\"12\":6,\"13\":4,\"34\":4,\"39\":1,\"40\":1}}],[\"libnss\",{\"1\":{\"34\":4}}],[\"libnuma\",{\"1\":{\"34\":6}}],[\"libfreebl3\",{\"1\":{\"34\":6}}],[\"libm\",{\"1\":{\"34\":4}}],[\"libstdc++\",{\"1\":{\"34\":4}}],[\"libdl\",{\"1\":{\"34\":4}}],[\"libaio\",{\"1\":{\"34\":8}}],[\"library\",{\"1\":{\"34\":2}}],[\"libthread\",{\"1\":{\"34\":6}}],[\"libpthread\",{\"1\":{\"34\":4}}],[\"lib64\",{\"1\":{\"34\":58}}],[\"libcrypt\",{\"1\":{\"34\":4}}],[\"libc\",{\"1\":{\"23\":2,\"34\":4}}],[\"lib参数可以指定带符号的库路径\",{\"1\":{\"16\":1}}],[\"libunwind\",{\"1\":{\"13\":1}}],[\"libgcc\",{\"1\":{\"13\":1,\"34\":4}}],[\"lib\",{\"1\":{\"12\":7,\"13\":4,\"16\":1}}],[\"libjemalloc\",{\"1\":{\"12\":11,\"13\":5,\"16\":1}}],[\"l\",{\"1\":{\"12\":1,\"16\":1,\"34\":1}}],[\"data\",{\"1\":{\"39\":1}}],[\"db\",{\"1\":{\"34\":6}}],[\"dropping\",{\"1\":{\"23\":1,\"24\":2}}],[\"drwxr\",{\"1\":{\"16\":1}}],[\"different\",{\"1\":{\"39\":1}}],[\"disasm\",{\"1\":{\"23\":1}}],[\"distr\",{\"1\":{\"15\":2}}],[\"distribution<t>\",{\"1\":{\"15\":1}}],[\"di\",{\"1\":{\"23\":2}}],[\"dl\",{\"1\":{\"23\":2}}],[\"download\",{\"1\":{\"37\":1}}],[\"doallocate\",{\"1\":{\"23\":2}}],[\"doallocbuf\",{\"1\":{\"23\":2}}],[\"documentation\",{\"1\":{\"28\":1}}],[\"doc\",{\"1\":{\"12\":8}}],[\"dump\",{\"1\":{\"15\":2,\"22\":1,\"24\":4}}],[\"detail\",{\"1\":{\"23\":2}}],[\"default\",{\"1\":{\"15\":1,\"23\":1}}],[\"debugged\",{\"1\":{\"39\":1}}],[\"debugging\",{\"1\":{\"34\":26,\"39\":1}}],[\"debugdata\",{\"1\":{\"34\":12}}],[\"debug\",{\"1\":{\"13\":1}}],[\"debian\",{\"1\":{\"12\":1}}],[\"device\",{\"1\":{\"15\":1}}],[\"dev\",{\"1\":{\"12\":8,\"15\":2}}],[\"devel\",{\"1\":{\"12\":2}}],[\"dpkg\",{\"1\":{\"12\":1}}],[\"rax\",{\"1\":{\"23\":11}}],[\"rand\",{\"1\":{\"15\":2}}],[\"random>\",{\"1\":{\"23\":2}}],[\"random<uint32\",{\"1\":{\"15\":6,\"23\":2}}],[\"random\",{\"1\":{\"15\":2}}],[\"range\",{\"1\":{\"15\":4}}],[\"rdi\",{\"1\":{\"23\":2}}],[\"rsp\",{\"1\":{\"23\":2}}],[\"rbp\",{\"1\":{\"23\":15}}],[\"rtld\",{\"1\":{\"23\":2}}],[\"r\",{\"1\":{\"16\":2,\"23\":2,\"24\":8}}],[\"rw\",{\"1\":{\"16\":1,\"23\":1,\"24\":4}}],[\"running\",{\"1\":{\"34\":1}}],[\"run\",{\"1\":{\"15\":3,\"23\":2,\"24\":5}}],[\"routine\",{\"1\":{\"23\":1}}],[\"root\",{\"1\":{\"15\":2,\"16\":5,\"23\":9,\"24\":18,\"34\":2,\"38\":1}}],[\"rof\",{\"1\":{\"10\":1}}],[\"registers\",{\"1\":{\"39\":1}}],[\"registrysignal\",{\"1\":{\"15\":2}}],[\"request\",{\"1\":{\"39\":2}}],[\"release\",{\"1\":{\"37\":1}}],[\"releases\",{\"1\":{\"37\":1}}],[\"reading\",{\"1\":{\"34\":32}}],[\"readme\",{\"1\":{\"12\":1}}],[\"retq\",{\"1\":{\"23\":1}}],[\"return\",{\"1\":{\"15\":5,\"23\":2}}],[\"received\",{\"1\":{\"15\":3,\"24\":5}}],[\"recu>\",{\"1\":{\"23\":1}}],[\"recu+0xc0>\",{\"1\":{\"23\":1}}],[\"recu+0xa7>\",{\"1\":{\"23\":1}}],[\"recu+0xa0>\",{\"1\":{\"23\":1}}],[\"recu+0xae>\",{\"1\":{\"23\":1}}],[\"recu+0xbd>\",{\"1\":{\"23\":4}}],[\"recu+0xbc>\",{\"1\":{\"23\":3}}],[\"recu+0xb5>\",{\"1\":{\"23\":1}}],[\"recu+0xbf>\",{\"1\":{\"23\":1}}],[\"recu+0x68>\",{\"1\":{\"23\":1}}],[\"recu+0x49>\",{\"1\":{\"23\":1}}],[\"recu+0x44>\",{\"1\":{\"23\":1}}],[\"recu+0x3d>\",{\"1\":{\"23\":1}}],[\"recu\",{\"1\":{\"15\":3,\"23\":6}}],[\"refs\",{\"1\":{\"14\":1}}],[\"rpm\",{\"1\":{\"12\":1}}],[\"kill\",{\"1\":{\"24\":5}}],[\"kcachegrind\",{\"1\":{\"12\":2}}],[\"kcachegrind软件可选安装\",{\"1\":{\"12\":1}}],[\"kdesdk\",{\"1\":{\"12\":1}}],[\"因此其中不包含映射表\",{\"1\":{\"24\":1}}],[\"因此性能会有非常轻微的降低\",{\"1\":{\"11\":1}}],[\"因为\",{\"1\":{\"44\":1}}],[\"因为它们本身对软件世界没有直接的破坏能力\",{\"1\":{\"44\":1}}],[\"因为gdb退出后线程就恢复执行了\",{\"1\":{\"34\":1}}],[\"因为担心无法复现问题\",{\"1\":{\"32\":1}}],[\"因为出jemalloc之外的其他内存分配器也使用这种方式\",{\"1\":{\"11\":1}}],[\"因为没有银弹\",{\"1\":{\"6\":1}}],[\"灵活度最高\",{\"1\":{\"11\":1}}],[\"替换ptmalloc的接口\",{\"1\":{\"11\":1}}],[\"预装载到进程空间中\",{\"1\":{\"11\":1}}],[\"运行时没有任何依赖\",{\"1\":{\"11\":1}}],[\"运行过程中泄漏\",{\"1\":{\"9\":1}}],[\"通过pdf图我们看到了所有内存增长的位置\",{\"1\":{\"24\":1}}],[\"通过heap对比来分析泄漏和增长\",{\"1\":{\"24\":1}}],[\"通过接口\",{\"0\":{\"18\":1}}],[\"通过设置环境变量malloc\",{\"1\":{\"17\":1}}],[\"通过环境变量\",{\"1\":{\"17\":1}}],[\"通过向测试程序发送signal来控制程序的行为\",{\"1\":{\"15\":1}}],[\"通过静态链接\",{\"1\":{\"11\":1}}],[\"通过jeprof工具对比heap1和heap2的差异\",{\"1\":{\"10\":1}}],[\"该程序进程产生了120个线程\",{\"1\":{\"32\":1}}],[\"该参数的含义\",{\"1\":{\"21\":1}}],[\"该测试程序提供多个函数调用的路径去申请内存\",{\"1\":{\"15\":1}}],[\"该heap文件直接表明了内存增长的函数调用栈\",{\"1\":{\"10\":1}}],[\"该heap文件就直接表明了内存泄漏的函数调用栈\",{\"1\":{\"10\":1}}],[\"该怎么办\",{\"1\":{\"7\":2}}],[\"而我们用头脑去观察它\",{\"1\":{\"44\":1}}],[\"而概念的世界则不同\",{\"1\":{\"44\":1}}],[\"而且容易造成程序崩溃\",{\"1\":{\"33\":1}}],[\"而且有时构造特定的输入数据也很困难\",{\"1\":{\"33\":1}}],[\"而且这个业务也没有运行时开关\",{\"1\":{\"32\":1}}],[\"而且这些操作jemalloc的优化不是很充分\",{\"1\":{\"26\":1}}],[\"而且发现jemalloc很合适你的场景\",{\"1\":{\"27\":1}}],[\"而且\",{\"1\":{\"10\":1}}],[\"而非静态检查\",{\"1\":{\"9\":1}}],[\"如此的异想天开\",{\"1\":{\"44\":1}}],[\"如此的不可思议\",{\"1\":{\"44\":1}}],[\"如此的奇妙\",{\"1\":{\"44\":1}}],[\"如今\",{\"1\":{\"44\":1}}],[\"如何使用gdb暂停几个线程时\",{\"1\":{\"34\":1}}],[\"如开篇所说\",{\"1\":{\"26\":1}}],[\"如\",{\"1\":{\"19\":2}}],[\"如下是mysqld的线程情况\",{\"1\":{\"34\":1}}],[\"如下\",{\"1\":{\"15\":1,\"23\":2,\"34\":1}}],[\"如其名字\",{\"1\":{\"10\":1}}],[\"如果我们拥有一双像真实眼睛一样的无形之眼\",{\"1\":{\"44\":1}}],[\"如果其他无形的世界是有形的\",{\"1\":{\"44\":1}}],[\"如果精神世界是有形的\",{\"1\":{\"44\":1}}],[\"如果概念世界是有形的\",{\"1\":{\"44\":1}}],[\"如果软件世界是有形的\",{\"1\":{\"44\":1}}],[\"如果脑海里没有词句\",{\"1\":{\"44\":1}}],[\"如果需要暂停的线程多\",{\"1\":{\"34\":1}}],[\"如果使用方法5验证的结果是系统的性能没有受到影响\",{\"1\":{\"33\":1}}],[\"如果使用方法5快速验证了是这个业务的问题\",{\"1\":{\"33\":1}}],[\"如果这个业务本身的代码实现上存在漏洞\",{\"1\":{\"33\":1}}],[\"如果能够从外部直接将这业务的所有线程都暂停了\",{\"1\":{\"33\":1}}],[\"如果不想使用这些参数\",{\"1\":{\"16\":1}}],[\"如果不能重现\",{\"1\":{\"7\":1}}],[\"如果程序在客户现场出现问题\",{\"1\":{\"16\":1}}],[\"如果通过yum和apt安装的libjemalloc没有prof功能\",{\"1\":{\"14\":1}}],[\"如果prof功能被编译\",{\"1\":{\"13\":1}}],[\"如果泄漏仅仅发生在虚拟内存资源上\",{\"1\":{\"9\":1}}],[\"如果是windows\",{\"1\":{\"7\":1}}],[\"如果你对这个世界有些好奇\",{\"1\":{\"44\":1}}],[\"如果你的程序经常要分析内存泄漏或内存消耗问题\",{\"1\":{\"27\":1}}],[\"如果你的项目遇到这种情况\",{\"1\":{\"9\":1}}],[\"如果你之前不知道它们的存在\",{\"1\":{\"8\":1}}],[\"如果你遇到了开篇提出的类似问题\",{\"1\":{\"7\":1}}],[\"如果你维护的项目代码总量不过数千行\",{\"1\":{\"7\":1}}],[\"累计分配字节数\",{\"1\":{\"10\":2}}],[\"累计分配对象个数\",{\"1\":{\"10\":2}}],[\"除了生命\",{\"1\":{\"44\":1}}],[\"除了总字节数之外其中还包含\",{\"1\":{\"10\":1}}],[\"除此之外还有好多内存分配器\",{\"1\":{\"8\":1}}],[\"映射表\",{\"1\":{\"10\":1}}],[\"复合统计值\",{\"1\":{\"10\":1}}],[\"键值为\",{\"1\":{\"10\":1}}],[\"为它的不可思议而动容\",{\"1\":{\"44\":1}}],[\"为我们所用\",{\"1\":{\"44\":1}}],[\"为例\",{\"1\":{\"38\":1}}],[\"为了触发缺页中断分配物理内存\",{\"1\":{\"15\":1}}],[\"为了优化内存消耗\",{\"1\":{\"7\":1}}],[\"为键\",{\"1\":{\"10\":1}}],[\"概念\",{\"2\":{\"46\":1}}],[\"概念世界中的事物没有具体的可被我们看见的形象\",{\"1\":{\"44\":1}}],[\"概念世界像是我们物质世界的一个投影\",{\"1\":{\"44\":1}}],[\"概念世界是人类在理性探寻与精神追求的过程中积累沉淀而形成的一个抽象世界\",{\"1\":{\"44\":1}}],[\"概念世界从哪儿诞生\",{\"1\":{\"44\":1}}],[\"概念世界也就不会出现\",{\"1\":{\"44\":1}}],[\"概念世界在你脑海中展开了\",{\"1\":{\"44\":1}}],[\"概念世界的一个旅行者\",{\"1\":{\"1\":1}}],[\"概括说就是2个流程\",{\"1\":{\"21\":1}}],[\"概括起来\",{\"1\":{\"10\":1}}],[\"其官方文档上有详尽的说明\",{\"1\":{\"38\":1}}],[\"其二进制下载路径如下\",{\"1\":{\"37\":1}}],[\"其他用法请参考jeprof的help信息\",{\"1\":{\"25\":1}}],[\"其他编译说明\",{\"1\":{\"16\":1}}],[\"其他的类\",{\"1\":{\"10\":1}}],[\"其中存在着\",{\"1\":{\"44\":1}}],[\"其中19指512kib\",{\"1\":{\"21\":1}}],[\"其中采样流程可控制采集间隔参数\",{\"1\":{\"21\":1}}],[\"其中包含了调用jemalloc接口的例子\",{\"1\":{\"15\":1}}],[\"其中\",{\"1\":{\"10\":1}}],[\"其核心就是维护了一个以\",{\"1\":{\"10\":1}}],[\"其实这个世界可忙碌了\",{\"1\":{\"44\":1}}],[\"其实tcmalloc也具备类似的能力\",{\"1\":{\"8\":1}}],[\"其实今天讲的方法对java\",{\"1\":{\"7\":1}}],[\"后边有机会再说\",{\"1\":{\"26\":2}}],[\"后\",{\"1\":{\"10\":1}}],[\"申请内存量\",{\"1\":{\"10\":2}}],[\"申请的内存量\",{\"1\":{\"10\":3}}],[\"specific\",{\"1\":{\"39\":1}}],[\"space\",{\"1\":{\"25\":1}}],[\"system\",{\"1\":{\"39\":2}}],[\"symbols\",{\"1\":{\"34\":56}}],[\"sbin\",{\"1\":{\"34\":2}}],[\"succ\",{\"1\":{\"38\":2}}],[\"subsequent\",{\"1\":{\"39\":1}}],[\"sub\",{\"1\":{\"23\":1}}],[\"summary\",{\"1\":{\"23\":2}}],[\"sample设置为0时能够最大程度的保留内存分配的信息\",{\"1\":{\"21\":1}}],[\"sample\",{\"1\":{\"21\":1,\"23\":2,\"24\":1}}],[\"switch\",{\"1\":{\"15\":1,\"23\":1}}],[\"s\",{\"1\":{\"15\":2,\"34\":4,\"39\":1}}],[\"strace等相应的工具去分析线程的调用栈\",{\"1\":{\"33\":1}}],[\"sts\",{\"1\":{\"23\":1}}],[\"std=c++11\",{\"1\":{\"16\":2}}],[\"std\",{\"1\":{\"15\":25,\"23\":3}}],[\"starting\",{\"1\":{\"38\":1}}],[\"started\",{\"1\":{\"34\":1}}],[\"start\",{\"1\":{\"23\":5}}],[\"status\",{\"1\":{\"38\":1}}],[\"static\",{\"1\":{\"15\":1}}],[\"statistics\",{\"1\":{\"13\":1}}],[\"stats\",{\"1\":{\"13\":1,\"15\":3,\"17\":1}}],[\"stack\",{\"1\":{\"10\":2}}],[\"signal3\",{\"1\":{\"15\":1}}],[\"signal2\",{\"1\":{\"15\":1}}],[\"signal1\",{\"1\":{\"15\":1}}],[\"signal\",{\"1\":{\"15\":3}}],[\"signo\",{\"1\":{\"15\":4}}],[\"sig\",{\"1\":{\"15\":7}}],[\"sigrtmin+10\",{\"1\":{\"15\":4}}],[\"sigusr2\",{\"1\":{\"15\":4,\"24\":2}}],[\"sigusr1\",{\"1\":{\"15\":4,\"24\":8}}],[\"sizeof\",{\"1\":{\"15\":1,\"18\":1}}],[\"size\",{\"1\":{\"10\":1,\"15\":4}}],[\"shell\",{\"1\":{\"34\":1}}],[\"shows\",{\"1\":{\"34\":1}}],[\"show\",{\"1\":{\"23\":2,\"24\":2,\"25\":4}}],[\"sh\",{\"1\":{\"14\":1}}],[\"share\",{\"1\":{\"12\":14}}],[\"sent\",{\"1\":{\"39\":1}}],[\"serinfo\",{\"1\":{\"23\":2}}],[\"settings\",{\"1\":{\"13\":1}}],[\"sed\",{\"1\":{\"13\":2}}],[\"sourceware\",{\"1\":{\"40\":1}}],[\"so\",{\"1\":{\"12\":1,\"13\":2,\"34\":58}}],[\"抽象意义上的\",{\"1\":{\"10\":1}}],[\"多个选项使用\",{\"1\":{\"17\":1}}],[\"多种格式的分析结果输出\",{\"1\":{\"13\":1}}],[\"多次调用malloc后形成\",{\"1\":{\"10\":1}}],[\"多处内存泄露\",{\"1\":{\"9\":1}}],[\"多处泄漏\",{\"1\":{\"9\":1}}],[\"multithreaded\",{\"1\":{\"39\":2}}],[\"mysqld\",{\"1\":{\"34\":2,\"38\":13}}],[\"means\",{\"1\":{\"39\":2}}],[\"mesos\",{\"1\":{\"28\":2}}],[\"memory\",{\"1\":{\"28\":2,\"39\":1}}],[\"m0\",{\"1\":{\"24\":3,\"25\":3}}],[\"m1\",{\"1\":{\"24\":3}}],[\"m2\",{\"1\":{\"24\":4}}],[\"m3\",{\"1\":{\"24\":3,\"25\":2}}],[\"mkdir\",{\"1\":{\"24\":1}}],[\"mov\",{\"1\":{\"23\":19}}],[\"m64\",{\"1\":{\"16\":2}}],[\"mt19937\",{\"1\":{\"15\":1}}],[\"may\",{\"1\":{\"39\":1}}],[\"maxdegree=100\",{\"1\":{\"25\":1}}],[\"main\",{\"1\":{\"15\":1,\"23\":3}}],[\"mallctl\",{\"1\":{\"15\":3,\"18\":1,\"22\":1}}],[\"malloc\",{\"1\":{\"10\":1,\"13\":2,\"15\":10,\"17\":2,\"18\":1,\"19\":4,\"23\":5,\"24\":1}}],[\"make\",{\"1\":{\"14\":2}}],[\"man2\",{\"1\":{\"40\":1}}],[\"man7\",{\"1\":{\"40\":1}}],[\"man3\",{\"1\":{\"12\":2}}],[\"man1\",{\"1\":{\"12\":2}}],[\"man\",{\"1\":{\"12\":5,\"28\":1,\"40\":2}}],[\"map\",{\"1\":{\"10\":2}}],[\"microsoft\",{\"1\":{\"8\":1}}],[\"mimalloc出自microsoft\",{\"1\":{\"8\":1}}],[\"mimalloc\",{\"1\":{\"8\":3}}],[\"======================\",{\"1\":{\"23\":1}}],[\"==\",{\"1\":{\"15\":7}}],[\"=\",{\"1\":{\"10\":1,\"15\":11,\"18\":1,\"23\":1}}],[\"当没有头脑感觉到它时\",{\"1\":{\"44\":1}}],[\"当你用头脑感觉到它时\",{\"1\":{\"44\":1}}],[\"当你阅读本文时\",{\"1\":{\"44\":1}}],[\"当指定的线程被attach后\",{\"1\":{\"39\":1}}],[\"当调用栈很多时\",{\"1\":{\"25\":1}}],[\"当开启prof时\",{\"1\":{\"10\":1}}],[\"当然也可以是人等一切具有可计算能力的事物\",{\"1\":{\"44\":1}}],[\"当然\",{\"1\":{\"10\":1,\"23\":1}}],[\"当然就只能管理堆上的内存\",{\"1\":{\"10\":1}}],[\"当然不回收线程带来的后果比栈内存泄漏更严重\",{\"1\":{\"9\":1}}],[\"‍将生成的\",{\"1\":{\"25\":1}}],[\"‍\",{\"1\":{\"10\":2,\"13\":1,\"15\":1,\"24\":1}}],[\"another\",{\"1\":{\"39\":1}}],[\"and\",{\"1\":{\"28\":1,\"39\":7}}],[\"autocompletions\",{\"1\":{\"38\":1}}],[\"autogen\",{\"1\":{\"14\":1}}],[\"as\",{\"1\":{\"34\":1}}],[\"attachment\",{\"1\":{\"39\":1}}],[\"attached\",{\"1\":{\"39\":3}}],[\"attaches\",{\"1\":{\"34\":1}}],[\"attaching\",{\"1\":{\"34\":2}}],[\"attach\",{\"1\":{\"34\":2,\"39\":1,\"40\":1}}],[\"attribute\",{\"1\":{\"15\":8}}],[\"ad\",{\"1\":{\"28\":2}}],[\"addr\",{\"1\":{\"39\":1}}],[\"add\",{\"1\":{\"16\":1}}],[\"abs\",{\"1\":{\"23\":1,\"24\":2}}],[\"always\",{\"1\":{\"39\":2}}],[\"al\",{\"1\":{\"23\":2}}],[\"allocate\",{\"1\":{\"10\":4,\"15\":1,\"24\":1}}],[\"apache\",{\"1\":{\"28\":1}}],[\"api\",{\"1\":{\"24\":2}}],[\"approximation\",{\"1\":{\"23\":2}}],[\"apt\",{\"1\":{\"12\":3}}],[\"are\",{\"1\":{\"39\":2}}],[\"argument\",{\"1\":{\"34\":1}}],[\"argv\",{\"1\":{\"15\":1}}],[\"argc\",{\"1\":{\"15\":1}}],[\"archive\",{\"1\":{\"14\":1}}],[\"active设置为false\",{\"1\":{\"24\":1}}],[\"active可用于激活profiling功能\",{\"1\":{\"19\":1}}],[\"active\",{\"1\":{\"15\":5,\"18\":4,\"19\":2,\"24\":2,\"34\":1}}],[\"access\",{\"1\":{\"15\":5}}],[\"accum选项打开\",{\"1\":{\"10\":2}}],[\"after\",{\"1\":{\"13\":1}}],[\"a用于链接那些编译时使用了位置无关编译策略的程序\",{\"1\":{\"13\":1}}],[\"a\",{\"1\":{\"12\":2,\"13\":3,\"16\":1,\"22\":1,\"28\":1,\"34\":3,\"39\":7}}],[\"ahp\",{\"0\":{\"3\":1},\"1\":{\"3\":1}}],[\"简化后这个表的逻辑大概是这个样子\",{\"1\":{\"10\":1}}],[\"简写成p\",{\"1\":{\"10\":1}}],[\"tracing\",{\"1\":{\"39\":1}}],[\"tracee\",{\"1\":{\"39\":5}}],[\"tracer\",{\"1\":{\"39\":3}}],[\"true\",{\"1\":{\"13\":7,\"15\":1,\"17\":3,\"18\":1,\"19\":2,\"22\":2,\"23\":4,\"24\":1}}],[\"tmp\",{\"1\":{\"34\":2,\"38\":1}}],[\"thus\",{\"1\":{\"39\":1}}],[\"threads\",{\"1\":{\"38\":4}}],[\"thread\",{\"1\":{\"34\":2,\"38\":1,\"39\":5}}],[\"throw\",{\"1\":{\"23\":1}}],[\"therefore\",{\"1\":{\"39\":1}}],[\"the\",{\"1\":{\"34\":5,\"39\":9}}],[\"that\",{\"1\":{\"34\":1}}],[\"this\",{\"1\":{\"34\":1}}],[\"type\",{\"1\":{\"23\":1,\"38\":2}}],[\"text\",{\"1\":{\"25\":1}}],[\"test\",{\"1\":{\"15\":2,\"16\":2,\"17\":2,\"20\":3,\"23\":17,\"24\":24,\"25\":10}}],[\"template<typename\",{\"1\":{\"15\":1}}],[\"top33\",{\"1\":{\"23\":1}}],[\"top\",{\"1\":{\"23\":1}}],[\"total\",{\"1\":{\"23\":5,\"24\":1}}],[\"to\",{\"1\":{\"15\":2,\"23\":1,\"34\":4,\"38\":3,\"39\":5}}],[\"t>\",{\"1\":{\"15\":7,\"23\":2}}],[\"t\",{\"1\":{\"15\":12,\"23\":2,\"34\":1,\"39\":1}}],[\"tab\",{\"1\":{\"38\":1}}],[\"table得到\",{\"1\":{\"10\":2}}],[\"table\",{\"1\":{\"10\":5}}],[\"takes\",{\"1\":{\"34\":1}}],[\"targets\",{\"1\":{\"34\":1}}],[\"tar\",{\"1\":{\"14\":3}}],[\"tags\",{\"1\":{\"14\":1}}],[\"time\",{\"1\":{\"13\":1}}],[\"tcmalloc出自google\",{\"1\":{\"8\":1}}],[\"tcmalloc\",{\"1\":{\"8\":3}}],[\"堆内存切片\",{\"1\":{\"10\":1}}],[\"堆是动态内存申请的最主要的场地\",{\"1\":{\"9\":1}}],[\"准备好你的脑袋\",{\"1\":{\"44\":1}}],[\"准备好掉头发\",{\"1\":{\"9\":1}}],[\"准确来说是路径前缀\",{\"1\":{\"20\":1}}],[\"准确的说\",{\"1\":{\"10\":1}}],[\"以符号区分事物\",{\"1\":{\"44\":1}}],[\"以暂停mysqld为例\",{\"1\":{\"34\":1}}],[\"以为只能传入进程id\",{\"1\":{\"34\":1}}],[\"以此为分析的依据甚至会得到错误的结论\",{\"1\":{\"26\":1}}],[\"以callgrind格式输出\",{\"1\":{\"25\":1}}],[\"以文本形式输出\",{\"1\":{\"25\":1}}],[\"以获得更直观的结果\",{\"1\":{\"23\":1}}],[\"以获得物体的一个概要信息\",{\"1\":{\"10\":1}}],[\"以交互方式查看\",{\"1\":{\"23\":1}}],[\"以如下方式运行编译好的测试程序\",{\"1\":{\"23\":1}}],[\"以方便外部操作\",{\"1\":{\"15\":2}}],[\"以调用栈为中心对内存申请量进行统计\",{\"1\":{\"10\":1}}],[\"以及申请的内存大小\",{\"1\":{\"10\":1}}],[\"以至于发展到系统无物理内存可分配\",{\"1\":{\"9\":1}}],[\"以至于你知道每一个malloc\",{\"1\":{\"7\":1}}],[\"截取大的物体上的一点东西下来分析\",{\"1\":{\"10\":1}}],[\"的概念事物\",{\"1\":{\"44\":1}}],[\"的文件\",{\"1\":{\"20\":1}}],[\"的\",{\"1\":{\"10\":1}}],[\"的表达能力有限\",{\"1\":{\"10\":1}}],[\"的轮廓\",{\"1\":{\"10\":1}}],[\"的描述\",{\"1\":{\"9\":1}}],[\"描述\",{\"1\":{\"44\":1}}],[\"描\",{\"1\":{\"10\":1}}],[\"词典对profiling的解释是\",{\"1\":{\"10\":1}}],[\"一个概念事物实例便诞生了\",{\"1\":{\"44\":1}}],[\"一个真实清晰的世界展现开来\",{\"1\":{\"44\":1}}],[\"一个gdb进程也只能同时attach一个线程\",{\"1\":{\"34\":1}}],[\"一刹那\",{\"1\":{\"44\":1}}],[\"一部分生活在物理世界中\",{\"1\":{\"44\":1}}],[\"一醒来这个物质世界就展现在你我面前\",{\"1\":{\"44\":1}}],[\"一倍到数倍不等等\",{\"1\":{\"26\":1}}],[\"一旦开启并激活了prof后\",{\"1\":{\"26\":1}}],[\"一共dump了4次\",{\"1\":{\"24\":1}}],[\"一般\",{\"1\":{\"13\":1}}],[\"一般的程序\",{\"1\":{\"11\":1}}],[\"一词\",{\"1\":{\"10\":1}}],[\"一起\",{\"1\":{\"0\":1}}],[\"切片要表达一个意思\",{\"1\":{\"10\":1}}],[\"切片\",{\"1\":{\"10\":1}}],[\"跟踪内存泄漏问题往往使用动态跟踪技术\",{\"1\":{\"9\":1}}],[\"跟踪内存泄漏和内存增长\",{\"0\":{\"6\":1}}],[\"维护糟糕的项目能够发展你的核心技能\",{\"1\":{\"9\":1}}],[\"维基百科\",{\"1\":{\"9\":1,\"28\":1,\"40\":1}}],[\"缓慢的系统无法复现问题\",{\"1\":{\"26\":1}}],[\"缓慢\",{\"1\":{\"9\":1}}],[\"持续\",{\"1\":{\"9\":1}}],[\"持续性泄漏\",{\"1\":{\"9\":1}}],[\"是概念世界的一个地域\",{\"1\":{\"44\":1}}],[\"是非常有效的初步手段\",{\"1\":{\"33\":1}}],[\"是指某个调用栈总的内存申请的字节计数值\",{\"1\":{\"10\":1}}],[\"是指某个调用栈总的内存申请的计数值\",{\"1\":{\"10\":1}}],[\"是\",{\"1\":{\"10\":1}}],[\"是自己瞎翻译的\",{\"1\":{\"10\":1}}],[\"是这种\",{\"1\":{\"9\":1}}],[\"是经过多年检验的方法\",{\"1\":{\"6\":1}}],[\"哪种内存泄露最难跟踪\",{\"1\":{\"9\":1}}],[\"哪个流程最耗内存\",{\"1\":{\"7\":1}}],[\"必须先启用才能激活\",{\"1\":{\"19\":1}}],[\"必须消灭\",{\"1\":{\"9\":1}}],[\"必现\",{\"1\":{\"9\":1}}],[\"怎么来确认这个怀疑是对的还是错的\",{\"1\":{\"32\":1}}],[\"怎么能存在泄漏\",{\"1\":{\"9\":1}}],[\"怎么跟踪内存泄漏\",{\"1\":{\"7\":1}}],[\"强迫症同事不允许有瑕疵\",{\"1\":{\"9\":1}}],[\"并未形成统一的认识\",{\"1\":{\"44\":1}}],[\"并输出heap文件\",{\"1\":{\"23\":1}}],[\"并非真有\",{\"1\":{\"10\":1}}],[\"并非所有的内存泄露都需要花费时间去跟踪\",{\"1\":{\"9\":1}}],[\"并且程序已经过瘦身\",{\"1\":{\"16\":1}}],[\"并且随机调用free\",{\"1\":{\"15\":1}}],[\"并且\",{\"1\":{\"7\":9,\"8\":1}}],[\"快速泄漏和缓慢泄漏\",{\"1\":{\"9\":1}}],[\"少处泄漏\",{\"1\":{\"9\":1}}],[\"少量泄漏\",{\"1\":{\"9\":1}}],[\"但在概念世界里\",{\"1\":{\"44\":1}}],[\"但与物质世界又非常不同\",{\"1\":{\"44\":1}}],[\"但你可能并没有感觉到这是一个世界\",{\"1\":{\"44\":1}}],[\"但这个操作难度较大\",{\"1\":{\"33\":1}}],[\"但问题是我们对系统的理解大都是不全面的\",{\"1\":{\"33\":1}}],[\"但没有找到\",{\"1\":{\"32\":1}}],[\"但表现未物理内存泄露泄漏的问题\",{\"1\":{\"26\":1}}],[\"但也降低了计算开销\",{\"1\":{\"21\":1}}],[\"但各个工具的内部实现细节各不相同\",{\"1\":{\"10\":1}}],[\"但大体可分为\",{\"1\":{\"9\":1}}],[\"但是有好多朋友并未走进这个世界来瞧瞧\",{\"1\":{\"44\":1}}],[\"但是我要暂停12个线程\",{\"1\":{\"34\":1}}],[\"但是我们不能重启程序\",{\"1\":{\"32\":1}}],[\"但是物理内存却未消耗\",{\"1\":{\"26\":1}}],[\"但是转念一想\",{\"1\":{\"9\":1}}],[\"但是程序可能由于各种原因出现了偏差\",{\"1\":{\"9\":1}}],[\"但是非常少见\",{\"1\":{\"9\":1}}],[\"但是你实在受不了它乌龟一样的速度\",{\"1\":{\"7\":1}}],[\"但是\",{\"1\":{\"6\":1,\"34\":1}}],[\"短时间等等\",{\"1\":{\"9\":1}}],[\"长时间\",{\"1\":{\"9\":1}}],[\"细一点可以分为启动时泄漏\",{\"1\":{\"9\":1}}],[\"非持续性泄漏\",{\"1\":{\"9\":1}}],[\"指示着不要错过任何分配\",{\"1\":{\"23\":1}}],[\"指示的是生成的heap文件的前缀\",{\"1\":{\"20\":1}}],[\"指某个调用栈尚未释放的内存申请的计数值\",{\"1\":{\"10\":1}}],[\"指程序中引发泄漏的问题出处\",{\"1\":{\"9\":1}}],[\"指程序的生命周期内\",{\"1\":{\"9\":1}}],[\"指单次泄漏发生时所消耗的内存量\",{\"1\":{\"9\":1}}],[\"指泄漏出现的条件\",{\"1\":{\"9\":1}}],[\"偶发性\",{\"1\":{\"9\":1}}],[\"偶发\",{\"1\":{\"9\":1}}],[\"时间特性\",{\"1\":{\"9\":2}}],[\"时间不就没有了吗\",{\"1\":{\"7\":1}}],[\"只能描述概念事物的实例的诞生和消亡\",{\"1\":{\"44\":1}}],[\"只能按下不表\",{\"1\":{\"44\":1}}],[\"只是暂停了一小会儿线程\",{\"1\":{\"33\":1}}],[\"只有激活了才能进行profiling分析\",{\"1\":{\"19\":1}}],[\"只有内存资源的控制权丢失\",{\"1\":{\"9\":1}}],[\"只要界定的概念事物是相同的描述\",{\"1\":{\"44\":1}}],[\"只要被裁剪的符号还在\",{\"1\":{\"16\":1}}],[\"只要你调用过malloc函数\",{\"1\":{\"8\":1}}],[\"举个例子\",{\"1\":{\"9\":1,\"10\":1}}],[\"也就是创建和描述概念世界中的事物\",{\"1\":{\"44\":1}}],[\"也是人类两次世界大战的时代\",{\"1\":{\"44\":1}}],[\"也是我们工程实践过程中内存泄漏发生的主要位置\",{\"1\":{\"9\":1}}],[\"也可以不与物理世界的事物相对应\",{\"1\":{\"44\":1}}],[\"也可以将出现问题的可执行文件部署在与现场相同的路径上\",{\"1\":{\"16\":1}}],[\"也很容易消亡\",{\"1\":{\"44\":1}}],[\"也有办法解析出调用栈\",{\"1\":{\"16\":1}}],[\"也有一部分内存泄漏发生在栈空间中\",{\"1\":{\"9\":1}}],[\"大家都看到它了\",{\"1\":{\"44\":1}}],[\"大家可以去读读\",{\"1\":{\"9\":1}}],[\"大地宽广\",{\"1\":{\"44\":1}}],[\"大部分人们只能模糊感知到它的存在\",{\"1\":{\"44\":1}}],[\"大量泄漏\",{\"1\":{\"9\":1}}],[\"大量的泄漏必定造成资源匮乏\",{\"1\":{\"9\":1}}],[\"大体可分为\",{\"1\":{\"9\":2}}],[\"大致有\",{\"1\":{\"9\":1}}],[\"现在\",{\"1\":{\"32\":1,\"34\":1}}],[\"现在需要找出这些内存消耗的热点\",{\"1\":{\"7\":1}}],[\"现代的cpu和操作系统往往都是64位的\",{\"1\":{\"9\":1}}],[\"资源都有存放的位置\",{\"1\":{\"9\":1}}],[\"资源当然是内存资源\",{\"1\":{\"9\":1}}],[\"资源\",{\"1\":{\"9\":1}}],[\"资源和\",{\"1\":{\"9\":1}}],[\"可快速验证猜想\",{\"1\":{\"33\":1}}],[\"可使用top命令查看消耗热点函数排序结果\",{\"1\":{\"13\":1}}],[\"可选\",{\"1\":{\"12\":2}}],[\"可通过prof\",{\"1\":{\"10\":2}}],[\"可查allocate\",{\"1\":{\"10\":2}}],[\"可控性\",{\"1\":{\"9\":2}}],[\"可以与物理世界中的事物相对应\",{\"1\":{\"44\":1}}],[\"可以肯定概念世界与物质世界之间存在着深深的联系\",{\"1\":{\"44\":1}}],[\"可以容易获取业务性能表现的指标\",{\"1\":{\"32\":1}}],[\"可以这样\",{\"1\":{\"25\":1}}],[\"可以再对比最早的和最晚的2次heap\",{\"1\":{\"24\":1}}],[\"可以分析内存泄漏发生的位置\",{\"1\":{\"24\":1}}],[\"可以分为\",{\"1\":{\"9\":1}}],[\"可以看到线程3697和3698的状态都变成了\",{\"1\":{\"34\":1}}],[\"可以看到\",{\"1\":{\"23\":1}}],[\"可以通过执行如下命令来测试来确认jemalloc的prof功能是否被编译\",{\"1\":{\"13\":1}}],[\"可以延伸出泄漏的速度\",{\"1\":{\"9\":1}}],[\"可以使用部署在ipub上的app在线查看和计算结果\",{\"1\":{\"3\":1}}],[\"可以\",{\"1\":{\"0\":1}}],[\"泄漏出现的时间情况\",{\"1\":{\"9\":1}}],[\"泄漏位置数量\",{\"1\":{\"9\":2}}],[\"泄漏内存量\",{\"1\":{\"9\":2}}],[\"泄漏的内在含义表现在\",{\"1\":{\"9\":1}}],[\"泄漏了10gb内存\",{\"1\":{\"7\":1}}],[\"最好带上调试符号\",{\"1\":{\"16\":1}}],[\"最好不是生产环境\",{\"1\":{\"7\":1}}],[\"最终生成的结果\",{\"1\":{\"24\":1}}],[\"最终生成树形的内存消耗调用关系\",{\"1\":{\"10\":1}}],[\"最终我们可以使用jeprof工具遍历该映射表\",{\"1\":{\"10\":1}}],[\"最终造成程序被操作系统异常终止\",{\"1\":{\"9\":1}}],[\"导出heap文件\",{\"1\":{\"27\":1}}],[\"导出是指将内存中的分配信息导出到文件中\",{\"1\":{\"21\":1}}],[\"导出\",{\"1\":{\"21\":1}}],[\"导出成heap文件\",{\"1\":{\"10\":1}}],[\"导出gluc的ahp使用的yaml配置文件后\",{\"1\":{\"3\":1}}],[\"导致系统主动进行oom\",{\"1\":{\"9\":1}}],[\"严重时\",{\"1\":{\"9\":1}}],[\"内存增长\",{\"2\":{\"30\":1}}],[\"内存申请释放越频繁性能下降越明显\",{\"1\":{\"26\":1}}],[\"内存分配采样之间的平均间隔\",{\"1\":{\"21\":1}}],[\"内存分配器的性能问题是另外一个非常大的话题\",{\"1\":{\"8\":1}}],[\"内存指针\",{\"1\":{\"10\":5}}],[\"内存资源的控制权本应该掌握在编码者的预期表现所框定的范围内\",{\"1\":{\"9\":1}}],[\"内存泄漏\",{\"1\":{\"28\":2},\"2\":{\"30\":1}}],[\"内存泄漏的函数调用路径一目了然\",{\"1\":{\"23\":1}}],[\"内存泄漏往往是发生在进程空间中的堆空间中\",{\"1\":{\"9\":1}}],[\"内存泄漏问题往往更关注物理内存的泄漏\",{\"1\":{\"26\":1}}],[\"内存泄漏问题我们也可以使用这种方法来跟踪\",{\"1\":{\"10\":1}}],[\"内存泄漏问题可以根据其特性按照多个维度进行分类\",{\"1\":{\"9\":1}}],[\"内存泄漏问题\",{\"1\":{\"9\":1}}],[\"很有参考价值\",{\"1\":{\"9\":1}}],[\"百度百科\",{\"1\":{\"9\":1,\"28\":1}}],[\"和\",{\"1\":{\"9\":3,\"23\":1}}],[\"今天的主题还是内存切片问题\",{\"1\":{\"8\":1}}],[\"今天给大家介绍一种依靠内存分配器自带能力来跟踪内存泄漏问题的方法\",{\"1\":{\"6\":1}}],[\"它们需要依靠宿主去表达破坏性\",{\"1\":{\"44\":1}}],[\"它们都很优秀\",{\"1\":{\"8\":1}}],[\"它与概念世界中的其他地方相互影响\",{\"1\":{\"44\":1}}],[\"它是就是软件世界\",{\"1\":{\"44\":1}}],[\"它是一个奇妙的世界\",{\"1\":{\"44\":1}}],[\"它是一个强有力的\",{\"1\":{\"44\":1}}],[\"它改变了我们的生活\",{\"1\":{\"44\":1}}],[\"它一种智能的人造事物\",{\"1\":{\"44\":1}}],[\"它存在\",{\"1\":{\"44\":1}}],[\"它就指向了这样一个世界\",{\"1\":{\"44\":1}}],[\"它有自己的缺陷\",{\"1\":{\"26\":1}}],[\"它会再程序正常结束时检查内存泄漏\",{\"1\":{\"23\":1}}],[\"它提供了malloc和free这样的动态分配内存和归还的能力\",{\"1\":{\"8\":1}}],[\"巨头对基础技术的研究还是很舍得投入\",{\"1\":{\"8\":1}}],[\"gdb手册\",{\"1\":{\"40\":1}}],[\"gdb启动后不能退出\",{\"1\":{\"34\":1}}],[\"gdb\",{\"1\":{\"34\":6,\"40\":2},\"2\":{\"42\":1}}],[\"gdump\",{\"1\":{\"22\":1}}],[\"grow\",{\"1\":{\"24\":2}}],[\"graphviz\",{\"1\":{\"12\":2}}],[\"graphviz库用于绘图生成pdf文件\",{\"1\":{\"12\":1}}],[\"glibc\",{\"1\":{\"23\":2}}],[\"gluc\",{\"0\":{\"3\":1},\"1\":{\"3\":1}}],[\"g\",{\"1\":{\"16\":2}}],[\"g++\",{\"1\":{\"16\":2}}],[\"generator\",{\"1\":{\"15\":2}}],[\"getevents\",{\"1\":{\"34\":2}}],[\"get\",{\"1\":{\"12\":3}}],[\"gb0b3e49a54ec29e32636f4577d9d5a896d67fd20\",{\"1\":{\"13\":1}}],[\"gz\",{\"1\":{\"12\":3,\"14\":2}}],[\"gnu\",{\"1\":{\"12\":6,\"13\":4,\"34\":12}}],[\"google\",{\"1\":{\"8\":1}}],[\"github\",{\"1\":{\"8\":3,\"14\":1,\"28\":2,\"37\":1,\"40\":1}}],[\"都开源\",{\"1\":{\"8\":1}}],[\"本文再列举些例子\",{\"1\":{\"25\":1}}],[\"本文不展开讨论\",{\"1\":{\"8\":1}}],[\"本文讲的jemalloc是另外一个\",{\"1\":{\"8\":1}}],[\"减少内存使用量\",{\"1\":{\"8\":1}}],[\"包括减少cpu开销\",{\"1\":{\"8\":1}}],[\"之所以有这么多种内存分配器\",{\"1\":{\"8\":1}}],[\"比如非常少量的非持续性泄漏\",{\"1\":{\"9\":1}}],[\"比如只在系统退出时才会产生的泄漏\",{\"1\":{\"9\":1}}],[\"比如是编码者忘记了释放申请的内存\",{\"1\":{\"9\":1}}],[\"比如跑了1天\",{\"1\":{\"7\":1}}],[\"比较出名的还有\",{\"1\":{\"8\":1}}],[\"在我看来\",{\"1\":{\"44\":1}}],[\"在这里我们主要说说其中的软件概念世界\",{\"1\":{\"44\":1}}],[\"在你脑海中的和我脑海中的是一样的吗\",{\"1\":{\"44\":1}}],[\"在2个gdb进程中分别暂停了线程3697和线程3698后\",{\"1\":{\"34\":1}}],[\"在某一台服务器上运行10天后\",{\"1\":{\"32\":1}}],[\"在业务上提供\",{\"1\":{\"27\":1}}],[\"在操作等待时间内我们\",{\"1\":{\"24\":1}}],[\"在另一个shell窗口中发送控制信号\",{\"1\":{\"24\":1}}],[\"在一个shell窗口中启动测试程序\",{\"1\":{\"24\":1}}],[\"在一个内存密集型的代码量超过40w行的c++编写的系统中\",{\"1\":{\"7\":1}}],[\"在测试之前\",{\"1\":{\"17\":1}}],[\"在ubuntu上执行\",{\"1\":{\"12\":1}}],[\"在centos上执行\",{\"1\":{\"12\":1}}],[\"在内存增长后再生成一个heap2\",{\"1\":{\"10\":1}}],[\"在内存增长之前激活prof记录功能\",{\"1\":{\"10\":1}}],[\"在程序退出时将\",{\"1\":{\"10\":1}}],[\"在程序运行时分析\",{\"1\":{\"9\":1}}],[\"在切片操作发生时\",{\"1\":{\"10\":1}}],[\"在应用程序调用malloc的时候\",{\"1\":{\"10\":1}}],[\"在\",{\"1\":{\"10\":1}}],[\"在linux操作系统上内存资源包含2个大的部分\",{\"1\":{\"9\":1}}],[\"在linux上\",{\"1\":{\"8\":1}}],[\"cnt\",{\"1\":{\"38\":2}}],[\"checking\",{\"1\":{\"28\":1}}],[\"check\",{\"1\":{\"23\":2}}],[\"change\",{\"1\":{\"39\":1}}],[\"changelog\",{\"1\":{\"12\":1}}],[\"characters\",{\"1\":{\"13\":1}}],[\"char\",{\"1\":{\"13\":1,\"15\":4}}],[\"cmpl\",{\"1\":{\"23\":6}}],[\"cmp\",{\"1\":{\"23\":2}}],[\"cumulative\",{\"1\":{\"23\":1}}],[\"cpp\",{\"1\":{\"16\":3,\"23\":1}}],[\"cbopaque\",{\"1\":{\"15\":1}}],[\"cb\",{\"1\":{\"15\":1}}],[\"cd\",{\"1\":{\"14\":1}}],[\"can\",{\"1\":{\"39\":1}}],[\"case\",{\"1\":{\"15\":4,\"28\":2}}],[\"cachegrind\",{\"1\":{\"25\":2}}],[\"cache\",{\"1\":{\"13\":1}}],[\"callgrind\",{\"1\":{\"25\":1}}],[\"callgrind等多种格式\",{\"1\":{\"13\":1}}],[\"callq\",{\"1\":{\"23\":7}}],[\"callstack2\",{\"1\":{\"10\":2}}],[\"callstack1\",{\"1\":{\"10\":3}}],[\"call\",{\"1\":{\"10\":2,\"39\":3}}],[\"corresponding\",{\"1\":{\"39\":1}}],[\"cout\",{\"1\":{\"15\":11}}],[\"control\",{\"1\":{\"39\":1}}],[\"contexts\",{\"1\":{\"23\":2}}],[\"const\",{\"1\":{\"15\":3}}],[\"conf中可配置的选项也可以通过接口调用的方式\",{\"1\":{\"18\":1}}],[\"conf=prof\",{\"1\":{\"17\":1,\"19\":4,\"23\":1,\"24\":1}}],[\"conf=stats\",{\"1\":{\"13\":1,\"17\":1}}],[\"conf\",{\"1\":{\"13\":1,\"17\":1}}],[\"configure\",{\"1\":{\"14\":1}}],[\"config\",{\"1\":{\"13\":10}}],[\"copyright\",{\"1\":{\"12\":1}}],[\"commands\",{\"1\":{\"39\":2}}],[\"command\",{\"1\":{\"13\":1,\"34\":3}}],[\"com\",{\"1\":{\"8\":3,\"14\":1,\"28\":4,\"37\":1,\"40\":1}}],[\"centos上安装\",{\"1\":{\"12\":1}}],[\"c\",{\"1\":{\"8\":1,\"22\":1}}],[\"c++程序员都使用过内存分配器\",{\"1\":{\"8\":1}}],[\"c++程序员\",{\"1\":{\"7\":1}}],[\"pages\",{\"1\":{\"40\":1}}],[\"possibly\",{\"1\":{\"39\":1}}],[\"potentially\",{\"1\":{\"39\":1}}],[\"per\",{\"1\":{\"39\":1}}],[\"ps\",{\"1\":{\"34\":1}}],[\"pstack\",{\"1\":{\"33\":1}}],[\"pid\",{\"1\":{\"39\":5}}],[\"pid=3697\",{\"1\":{\"34\":1}}],[\"pidof\",{\"1\":{\"24\":5,\"38\":1}}],[\"pic\",{\"1\":{\"12\":1,\"13\":2}}],[\"pdf\",{\"1\":{\"23\":3,\"24\":4,\"25\":2}}],[\"pdf文件\",{\"1\":{\"13\":1}}],[\"push\",{\"1\":{\"23\":1}}],[\"p\",{\"1\":{\"15\":13,\"38\":1}}],[\"pc\",{\"1\":{\"12\":1}}],[\"pkgconfig\",{\"1\":{\"12\":2}}],[\"primarily\",{\"1\":{\"39\":1}}],[\"print\",{\"1\":{\"13\":1,\"15\":3,\"17\":2}}],[\"provides\",{\"1\":{\"39\":1}}],[\"process\",{\"1\":{\"34\":8,\"39\":4}}],[\"program\",{\"1\":{\"17\":2}}],[\"prof会将内部的函数调用映射表导出生成后缀为\",{\"1\":{\"20\":1}}],[\"prof\",{\"1\":{\"13\":4,\"14\":1,\"15\":4,\"18\":1,\"20\":1,\"21\":2,\"22\":4,\"23\":8,\"24\":8}}],[\"prof一项值应该为true\",{\"1\":{\"13\":1}}],[\"profiling的基本流程\",{\"0\":{\"21\":1}}],[\"profiling的输出\",{\"0\":{\"20\":1}}],[\"profiling\",{\"1\":{\"10\":1,\"16\":5,\"23\":7,\"24\":10,\"25\":4,\"28\":6},\"2\":{\"29\":1,\"30\":1}}],[\"profiling跟踪内存泄漏和内存增长问题\",{\"1\":{\"6\":1}}],[\"press\",{\"1\":{\"38\":1}}],[\"prefix\",{\"1\":{\"20\":1,\"23\":1,\"24\":1}}],[\"prefix参数可指定库路径前缀\",{\"1\":{\"16\":1}}],[\"prefix=\",{\"1\":{\"14\":1}}],[\"preload=\",{\"1\":{\"13\":1}}],[\"preload时\",{\"1\":{\"13\":1}}],[\"preload指定\",{\"1\":{\"11\":1}}],[\"ptrace的说明如下\",{\"1\":{\"39\":1}}],[\"ptrace\",{\"1\":{\"39\":9,\"40\":4}}],[\"ptr\",{\"1\":{\"10\":1,\"15\":8}}],[\"ptr3\",{\"1\":{\"10\":4}}],[\"ptr2\",{\"1\":{\"10\":5}}],[\"ptr1\",{\"1\":{\"10\":5}}],[\"ptmalloc是glibc的默认内存分配器\",{\"1\":{\"8\":1}}],[\"python等其他语言也适用\",{\"1\":{\"7\":1}}],[\"没有并且了\",{\"1\":{\"7\":1}}],[\"没有找到适合的方法\",{\"1\":{\"7\":1}}],[\"搜索了\",{\"1\":{\"7\":1}}],[\"直接交给运营去填坑\",{\"1\":{\"7\":1}}],[\"不同的脑海里生成的一个界定相同的概念事物事物\",{\"1\":{\"44\":1}}],[\"不同的原因造成的内存泄漏表现也各不相同\",{\"1\":{\"9\":1}}],[\"不能描述概念事物的诞生和消亡\",{\"1\":{\"44\":1}}],[\"不能以此分析输出代码问题发生的位置\",{\"1\":{\"10\":1}}],[\"不用多说\",{\"1\":{\"44\":1}}],[\"不用看这篇文章\",{\"1\":{\"7\":1}}],[\"不要退出gdb\",{\"1\":{\"34\":1}}],[\"不是真的有\",{\"1\":{\"10\":1}}],[\"不是一下就能消耗完\",{\"1\":{\"9\":1}}],[\"不好意思\",{\"1\":{\"9\":1}}],[\"不好意思这不是什么问题\",{\"1\":{\"7\":1}}],[\"不管你知不知道什么是内存分配器\",{\"1\":{\"8\":1}}],[\"不过百来年时间\",{\"1\":{\"44\":1}}],[\"不过经过对比\",{\"1\":{\"32\":1}}],[\"不过也有缺陷\",{\"1\":{\"11\":1}}],[\"不过你可能还得借助些其他的工具\",{\"1\":{\"7\":1}}],[\"不过我还没研究过\",{\"1\":{\"7\":1}}],[\"不然你怎么会遇到这些问题\",{\"1\":{\"7\":1}}],[\"不然你踩到了坑\",{\"1\":{\"7\":1}}],[\"根本跑步起来\",{\"1\":{\"7\":1}}],[\"急于撇清跟自己所维护的模块的关系\",{\"1\":{\"7\":1}}],[\"你我的世界会怎么样\",{\"1\":{\"44\":1}}],[\"你我将感叹到这个世界是如此的壮观\",{\"1\":{\"44\":1}}],[\"你我无法用眼睛看到\",{\"1\":{\"44\":1}}],[\"你是否也曾想带着一双无形的眼睛来这个无形的世界里看看\",{\"1\":{\"44\":1}}],[\"你拖动了什么\",{\"1\":{\"44\":1}}],[\"你看到它了\",{\"1\":{\"44\":1}}],[\"你看到概念世界了\",{\"1\":{\"44\":1}}],[\"你每天用着电脑\",{\"1\":{\"44\":1}}],[\"你在这一瞬间见到了数以千计\",{\"1\":{\"44\":1}}],[\"你在浏览器中去寻找\",{\"1\":{\"34\":1}}],[\"你用眼睛看时\",{\"1\":{\"44\":1}}],[\"你通过思考获得了对概念世界的一瞥\",{\"1\":{\"44\":1}}],[\"你就会发现\",{\"1\":{\"34\":1}}],[\"你就使用了它\",{\"1\":{\"8\":1}}],[\"你可能需要花几分钟去了解一下了\",{\"1\":{\"8\":1}}],[\"你可以了解下本文提供的方法\",{\"1\":{\"7\":1}}],[\"你至少得有1天的时间\",{\"1\":{\"7\":1}}],[\"你打开了中文搜索引擎\",{\"1\":{\"7\":1}}],[\"你有权力重启你的程序\",{\"1\":{\"7\":1}}],[\"你遭遇的这个问题最好是能够重现的\",{\"1\":{\"7\":1}}],[\"你的程序在linux上运行\",{\"1\":{\"7\":1}}],[\"你的程序不是一个对实时性有变态要求的程序\",{\"1\":{\"7\":1}}],[\"你的工程在使用valgrind时遇到了各种报错\",{\"1\":{\"7\":1}}],[\"你曾经尝试过内存问题跟踪神器valgrind\",{\"1\":{\"7\":1}}],[\"你需要把锅甩出去\",{\"1\":{\"7\":1}}],[\"你刚接手这个规模较大的系统\",{\"1\":{\"7\":1}}],[\"我也看到它了\",{\"1\":{\"44\":1}}],[\"我不确定\",{\"1\":{\"44\":1}}],[\"我没有在gdb中找到方法\",{\"1\":{\"34\":1}}],[\"我需要通过jeprof工具来对heap文件进行分析\",{\"1\":{\"23\":1}}],[\"我想你应该是c\",{\"1\":{\"7\":1}}],[\"我想你应该有更好的方法\",{\"1\":{\"7\":1}}],[\"我想你应该没有这么有信心\",{\"1\":{\"7\":1}}],[\"我们去世界上的各个地方旅游\",{\"1\":{\"44\":1}}],[\"我们倾向于将能与物理世界对应的概念事物称为真实事物\",{\"1\":{\"44\":1}}],[\"我们认为不同头脑里诞生的概念事物实例指向了同一个概念事物\",{\"1\":{\"44\":1}}],[\"我们只能通过概念事物实例来引证概念事物的存在\",{\"1\":{\"44\":1}}],[\"我们像物质世界的盲人\",{\"1\":{\"44\":1}}],[\"我们来看看概念世界是个什么样子\",{\"1\":{\"44\":1}}],[\"我们唯有借助思维才能了知\",{\"1\":{\"44\":1}}],[\"我们都能轻松感知\",{\"1\":{\"44\":1}}],[\"我们以暂停mysqld中的几个线程\",{\"1\":{\"38\":1}}],[\"我们就要换一个工具\",{\"1\":{\"34\":1}}],[\"我们暂停线程3697\",{\"1\":{\"34\":1}}],[\"我们容易被这个\",{\"1\":{\"34\":1}}],[\"我们猜想gdb应该具有这个能力\",{\"1\":{\"34\":1}}],[\"我们如何在linux上仅仅暂停一个进程中的一部分线程的运行\",{\"1\":{\"33\":1}}],[\"我们也只是支付了很小的代价而已\",{\"1\":{\"33\":1}}],[\"我们也可以通过接口在内存增长之前生成一个heap1\",{\"1\":{\"10\":1}}],[\"我们没有通用的使线程退出的手段\",{\"1\":{\"33\":1}}],[\"我们想办法去复现这个问题\",{\"1\":{\"33\":1}}],[\"我们怀疑这个业务的线程运行过程中执行了某些特殊代码\",{\"1\":{\"32\":1}}],[\"我们对其中一个业务产生了比较大的怀疑\",{\"1\":{\"32\":1}}],[\"我们使用了各种手段分析排查产生性能下降的原因\",{\"1\":{\"32\":1}}],[\"我们检查了同时启动服务的其他10台服务器\",{\"1\":{\"32\":1}}],[\"我们同样可以通过其他手段来解决\",{\"1\":{\"26\":1}}],[\"我们挑选test\",{\"1\":{\"24\":1}}],[\"我们将prof\",{\"1\":{\"24\":1}}],[\"我们打开\",{\"1\":{\"23\":1}}],[\"我们看到了泄漏最高的函数名字\",{\"1\":{\"23\":1}}],[\"我们看到jemalloc的内存泄漏报告和生成的heap文件\",{\"1\":{\"23\":1}}],[\"我们可以通过其他手段来解决\",{\"1\":{\"26\":1}}],[\"我们可以通过查看安装后的文件列表来获取jemalloc的库文件和头文件位置\",{\"1\":{\"12\":1}}],[\"我们可以同pdf的方式来查看\",{\"1\":{\"23\":1}}],[\"我们可以控制jemalloc在运行时的行为\",{\"1\":{\"17\":1}}],[\"我们编写一个测试代码\",{\"1\":{\"15\":1}}],[\"我们主要使用如下几个文件\",{\"1\":{\"13\":1}}],[\"我们需要安装开发版本jemalloc库和graphviz库\",{\"1\":{\"12\":1}}],[\"我们需要安装开发版本\",{\"1\":{\"11\":1}}],[\"我们通过调用接口dump出\",{\"1\":{\"10\":1}}],[\"我们\",{\"1\":{\"0\":1}}],[\"或交错\",{\"1\":{\"44\":1}}],[\"或聚集\",{\"1\":{\"44\":1}}],[\"或独立\",{\"1\":{\"44\":1}}],[\"或者像这样\",{\"1\":{\"34\":1}}],[\"或者内存句柄被破坏等等等具体的泄漏原因\",{\"1\":{\"9\":1}}],[\"或者是智能指针循环引用\",{\"1\":{\"9\":1}}],[\"或者很容易重现的\",{\"1\":{\"7\":1}}],[\"或者很不幸\",{\"1\":{\"7\":1}}],[\"或者现在的情况比较棘手\",{\"1\":{\"7\":1}}],[\"或者你遇到了这些问题怎么会来这里找方法\",{\"1\":{\"7\":1}}],[\"或者你正在维护由非常多的模块构成的一个大系统\",{\"1\":{\"7\":1}}],[\"或者你对业务和代码细节足够熟悉\",{\"1\":{\"7\":1}}],[\"或许会有\",{\"1\":{\"44\":1}}],[\"或许\",{\"1\":{\"0\":1}}],[\"存在内存消耗过高的问题\",{\"1\":{\"7\":1}}],[\"服务器内存消耗了20gb\",{\"1\":{\"7\":1}}],[\"定位一个慢内存泄漏问题\",{\"1\":{\"7\":1}}],[\"这些疑问并不妨碍我们去认识概念世界\",{\"1\":{\"44\":1}}],[\"这些都是由于内存资源的控制权丧失造成内存资源不可控而出现的内存泄漏问题\",{\"1\":{\"9\":1}}],[\"这是一个需要演绎的世界\",{\"1\":{\"44\":1}}],[\"这是一个大多数事物能够与物理世界相对应的概念世界\",{\"1\":{\"44\":1}}],[\"这是争论不休的话题\",{\"1\":{\"44\":1}}],[\"这是我们所感知到的残缺的概念世界\",{\"1\":{\"44\":1}}],[\"这是有开销的\",{\"1\":{\"23\":1}}],[\"这样的世界不止一个\",{\"1\":{\"44\":1}}],[\"这样操作后\",{\"1\":{\"34\":1}}],[\"这很不合理呀\",{\"1\":{\"34\":1}}],[\"这里别有洞天\",{\"1\":{\"44\":1}}],[\"这里分享给大家\",{\"1\":{\"34\":1}}],[\"这里的profiling是指heap\",{\"1\":{\"10\":1}}],[\"这10台服务器的业务表现都正常\",{\"1\":{\"32\":1}}],[\"这不影响我们的分析\",{\"1\":{\"23\":1}}],[\"这不是最好的\",{\"1\":{\"6\":1}}],[\"这点下降几乎感知不到\",{\"1\":{\"11\":1}}],[\"这就能够在客户环境中非常轻松地更换内存分配器\",{\"1\":{\"11\":1}}],[\"这种方式使用最简单\",{\"1\":{\"11\":1}}],[\"这种情况才是内存泄漏\",{\"1\":{\"9\":1}}],[\"这需要修改代码\",{\"1\":{\"11\":1}}],[\"这个地方极其广阔\",{\"1\":{\"44\":1}}],[\"这个概念事物实例便消亡了\",{\"1\":{\"44\":1}}],[\"这个世界里又究竟发生了什么\",{\"1\":{\"44\":1}}],[\"这个世界里包含了物质世界的大量信息\",{\"1\":{\"44\":1}}],[\"这个世界是物理世界的投影\",{\"1\":{\"44\":1}}],[\"这个世界是抽象的\",{\"1\":{\"44\":1}}],[\"这个世界的奥秘\",{\"1\":{\"0\":1}}],[\"这个工具就是fthread\",{\"1\":{\"34\":1}}],[\"这个问题好像大家不怎么会遇到\",{\"1\":{\"34\":1}}],[\"这个问题能难倒一大片经验丰富的工程师\",{\"1\":{\"33\":1}}],[\"这个业务一共启动了12个线程\",{\"1\":{\"32\":1}}],[\"这个业务本身很独立\",{\"1\":{\"32\":1}}],[\"这个统计值默认是关闭的\",{\"1\":{\"10\":2}}],[\"这个维度本身可被量化\",{\"1\":{\"9\":1}}],[\"这两者上\",{\"1\":{\"9\":1}}],[\"这几个内存分配器我都尝试过\",{\"1\":{\"8\":1}}],[\"工具\",{\"2\":{\"4\":1,\"5\":1}}],[\"工具列表\",{\"0\":{\"2\":1}}],[\"介绍页\",{\"0\":{\"1\":1}}],[\"去探索\",{\"1\":{\"0\":1}}],[\"博客主页\",{\"0\":{\"0\":1}}]],\"serializationVersion\":2},\"/en/\":{\"documentCount\":97,\"nextId\":97,\"documentIds\":{\"0\":\"0\",\"1\":\"1\",\"2\":\"4\",\"3\":\"4@0\",\"4\":\"5\",\"5\":\"5@0\",\"6\":\"5@1\",\"7\":\"6\",\"8\":\"6@0\",\"9\":\"6@1\",\"10\":\"7\",\"11\":\"7@0\",\"12\":\"7@1\",\"13\":\"8\",\"14\":\"8#markdown-introduction\",\"15\":\"8#markdown-config\",\"16\":\"8#markdown-extension\",\"17\":\"8#vuepress-enhancement\",\"18\":\"8#theme-enhancement\",\"19\":\"8#code-tabs\",\"20\":\"8#tabs\",\"21\":\"8#footnote\",\"22\":\"8#include-files\",\"23\":\"8#tex\",\"24\":\"8#tasklist\",\"25\":\"8#image-enhancement\",\"26\":\"8#superscript-and-subscript\",\"27\":\"8#component\",\"28\":\"8@0\",\"29\":\"8@1\",\"30\":\"9\",\"31\":\"9#page-title\",\"32\":\"9#page-information\",\"33\":\"9#page-content\",\"34\":\"9#components\",\"35\":\"9@0\",\"36\":\"9@1\",\"37\":\"10\",\"38\":\"10#heading-2\",\"39\":\"10#heading-3\",\"40\":\"10@0\",\"41\":\"10@1\",\"42\":\"11\",\"43\":\"11#heading-2\",\"44\":\"11#heading-3\",\"45\":\"11@0\",\"46\":\"11@1\",\"47\":\"12\",\"48\":\"12#heading-2\",\"49\":\"12#heading-3\",\"50\":\"12@0\",\"51\":\"12@1\",\"52\":\"13\",\"53\":\"13#heading-2\",\"54\":\"13#heading-3\",\"55\":\"13@0\",\"56\":\"13@1\",\"57\":\"15\",\"58\":\"15#heading-2\",\"59\":\"15#heading-3\",\"60\":\"15@0\",\"61\":\"15@1\",\"62\":\"16\",\"63\":\"16#heading-2\",\"64\":\"16#heading-3\",\"65\":\"16@0\",\"66\":\"16@1\",\"67\":\"17\",\"68\":\"17#heading-2\",\"69\":\"17#heading-3\",\"70\":\"17@0\",\"71\":\"17@1\",\"72\":\"18\",\"73\":\"18#heading-2\",\"74\":\"18#heading-3\",\"75\":\"18@0\",\"76\":\"18@1\",\"77\":\"19\",\"78\":\"19#heading-2\",\"79\":\"19#heading-3\",\"80\":\"19@0\",\"81\":\"19@1\",\"82\":\"20\",\"83\":\"20#heading-2\",\"84\":\"20#heading-3\",\"85\":\"20@0\",\"86\":\"20@1\",\"87\":\"21\",\"88\":\"21#heading-2\",\"89\":\"21#heading-3\",\"90\":\"21@0\",\"91\":\"21@1\",\"92\":\"22\",\"93\":\"22#heading-2\",\"94\":\"22#heading-3\",\"95\":\"22@0\",\"96\":\"22@1\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[2,30],\"1\":[2,4],\"2\":[2],\"3\":[null,null,1],\"4\":[4,40],\"5\":[null,null,1],\"6\":[null,null,1],\"7\":[2,10],\"8\":[null,null,1],\"9\":[null,null,1],\"10\":[1,44],\"11\":[null,null,1],\"12\":[null,null,1],\"13\":[2,32],\"14\":[2,19],\"15\":[2,25],\"16\":[2,18],\"17\":[2,16],\"18\":[2,18],\"19\":[2,2],\"20\":[1,2],\"21\":[1,9],\"22\":[2,2],\"23\":[1,26],\"24\":[1,6],\"25\":[2,8],\"26\":[3,4],\"27\":[1],\"28\":[null,null,1],\"29\":[null,null,1],\"30\":[2,10],\"31\":[2,20],\"32\":[2,27],\"33\":[2,30],\"34\":[1,29],\"35\":[null,null,1],\"36\":[null,null,3],\"37\":[1],\"38\":[2,5],\"39\":[2,5],\"40\":[null,null,1],\"41\":[null,null,3],\"42\":[2],\"43\":[2,5],\"44\":[2,5],\"45\":[null,null,2],\"46\":[null,null,2],\"47\":[1],\"48\":[2,5],\"49\":[2,5],\"50\":[null,null,2],\"51\":[null,null,2],\"52\":[1],\"53\":[2,5],\"54\":[2,5],\"55\":[null,null,1],\"56\":[null,null,2],\"57\":[2],\"58\":[2,5],\"59\":[2,5],\"60\":[null,null,1],\"61\":[null,null,3],\"62\":[2,6],\"63\":[2,5],\"64\":[2,5],\"65\":[null,null,1],\"66\":[null,null,3],\"67\":[2],\"68\":[2,5],\"69\":[2,5],\"70\":[null,null,2],\"71\":[null,null,3],\"72\":[2],\"73\":[2,5],\"74\":[2,5],\"75\":[null,null,2],\"76\":[null,null,3],\"77\":[2],\"78\":[2,5],\"79\":[2,5],\"80\":[null,null,2],\"81\":[null,null,3],\"82\":[2,9],\"83\":[2,5],\"84\":[2,5],\"85\":[null,null,2],\"86\":[null,null,3],\"87\":[2],\"88\":[2,5],\"89\":[2,5],\"90\":[null,null,1],\"91\":[null,null,3],\"92\":[2],\"93\":[2,5],\"94\":[2,5],\"95\":[null,null,1],\"96\":[null,null,3]},\"averageFieldLength\":[1.9245094343672573,13.93139880955163,1.1626998944957119],\"storedFields\":{\"0\":{\"h\":\"Blog Home\",\"t\":[\"This is a blog home page demo.\",\"To use this layout, you should set both layout: BlogHome and home: true in the page front matter.\",\"For related configuration docs, please see blog homepage.\"]},\"1\":{\"h\":\"Intro Page\",\"t\":[\"Nothins to Say.\"]},\"2\":{\"h\":\"Features demo\"},\"3\":{\"c\":[\"Guide\"]},\"4\":{\"h\":\"Disabling layout and features\",\"t\":[\"You can disable some function and layout on the page by setting the Frontmatter of the page.\",\"This page is an demo that disables the following features:\",\"Navbar\",\"Sidebar\",\"Breadcrumb\",\"Page information\",\"Contributors\",\"Edit link\",\"Update time\",\"Prev/Next link\",\"Comment\",\"Footer\",\"Back to top button\"]},\"5\":{\"c\":[\"Guide\"]},\"6\":{\"c\":[\"disable\"]},\"7\":{\"h\":\"Encryption Article\",\"t\":[\"The actual article content.\",\"Paragraph 1 text paragraph 1 text paragraph 1 text paragraph 1 text paragraph 1 text paragraph 1 text paragraph 1 text paragraph 1 text paragraph 1 text paragraph 1 text paragraph 1 text paragraph 1 text.\",\"Paragraph 2 text paragraph 2 text paragraph 2 text paragraph 2 text paragraph 2 text paragraph 2 text paragraph 2 text paragraph 2 text paragraph 2 text paragraph 2 text paragraph 2 text paragraph 2 text paragraph 2 text paragraph 2 text.\"]},\"8\":{\"c\":[\"Guide\"]},\"9\":{\"c\":[\"encryption\"]},\"10\":{\"h\":\"Layout\",\"t\":[\"The layout contains:\",\"Navbar\",\"Sidebar\",\"Footer\",\"Also each page can contain:\",\"BreadCrumb\",\"Title and information\",\"TOC (Table of Contents)\",\"Meta information including update time and contributors\",\"Comments\",\"The theme also has the following elements:\",\"Darkmode button\",\"Back to top button\",\"Print button\",\"You can customize them in theme options and page frontmatter.\"]},\"11\":{\"c\":[\"Guide\"]},\"12\":{\"c\":[\"Layout\"]},\"13\":{\"h\":\"Markdown Enhance\",\"t\":[\"VuePress basically generate pages from Markdown files. So you can use it to generate documentation or blog sites easily.\",\"You should create and write Markdown files, so that VuePress can convert them to different pages according to file structure.\"]},\"14\":{\"h\":\"Markdown Introduction\",\"t\":[\"If you are a new learner and don't know how to write Markdown, please read Markdown Intro and Markdown Demo.\"]},\"15\":{\"h\":\"Markdown Config\",\"t\":[\"VuePress introduce configuration for each markdown page using Frontmatter.\",\"Frontmatter\",\"Frontmatter is an important concept in VuePress. If you don't know it, you need to read Frontmatter Introduction.\"]},\"16\":{\"h\":\"Markdown Extension\",\"t\":[\"The Markdown content in VuePress will be parsed by markdown-it, which supports syntax extensions via markdown-it plugins.\"]},\"17\":{\"h\":\"VuePress Enhancement\",\"t\":[\"To enrich document writing, VuePress has extended Markdown syntax.\",\"For these extensions, please read Markdown extensions in VuePress.\"]},\"18\":{\"h\":\"Theme Enhancement\",\"t\":[\"By using vuepress-plugin-md-enhance, the theme extends more Markdown syntax and provides richer writing functions.\"]},\"19\":{\"h\":\"Code Tabs\",\"t\":[\"View Detail\"]},\"20\":{\"h\":\"Tabs\",\"t\":[\"View Detail\"]},\"21\":{\"h\":\"Footnote\",\"t\":[\"This text has footnote[^first].\",\"[^first]: This is footnote content\",\"View Detail\"]},\"22\":{\"h\":\"Include files\",\"t\":[\"View Detail\"]},\"23\":{\"h\":\"TeX\",\"t\":[\"$$ \\\\frac {\\\\partial^r} {\\\\partial \\\\omega^r} \\\\left(\\\\frac {y^{\\\\omega}} {\\\\omega}\\\\right) = \\\\left(\\\\frac {y^{\\\\omega}} {\\\\omega}\\\\right) \\\\left{(\\\\log y)^r + \\\\sum_{i=1}^r \\\\frac {(-1)^i r \\\\cdots (r-i+1) (\\\\log y)^{r-i}} {\\\\omega^i} \\\\right} $$\",\"View Detail\"]},\"24\":{\"h\":\"Tasklist\",\"t\":[\" Plan A\",\" Plan B\",\"View Detail\"]},\"25\":{\"h\":\"Image Enhancement\",\"t\":[\"Support setting color scheme and size.\",\"View Detail\"]},\"26\":{\"h\":\"Superscript and Subscript\",\"t\":[\"19th H2O\",\"View Detail\"]},\"27\":{\"h\":\"Component\"},\"28\":{\"c\":[\"Guide\"]},\"29\":{\"c\":[\"Markdown\"]},\"30\":{\"h\":\"Page Config\",\"t\":[\"Content before more comment is regarded as page excerpt.\"]},\"31\":{\"h\":\"Page Title\",\"t\":[\"The first H1 title in Markdown will be regarded as page title.\",\"You can also set title in Markdown's Frontmatter:\",\"--- title: Page Title ---\"]},\"32\":{\"h\":\"Page Information\",\"t\":[\"You can set page information in Markdown's Frontmatter.\",\"The author is Ms.Hope.\",\"The writing date is January 1, 2020\",\"Category is \\\"Guide\\\"\",\"Tags are \\\"Page Config\\\" and \\\"Guide\\\"\"]},\"33\":{\"h\":\"Page Content\",\"t\":[\"You are free to write your Markdown here.\",\"Assets\",\"You can place images besides your Markdown files nd use relative links.\",\"For images in .vuepress/public directory, please use absolute links (i.e.: starting with /).\"]},\"34\":{\"h\":\"Components\",\"t\":[\"Each markdown page is converted into a Vue component, which means you can use Vue syntax in Markdown:\",\"{{ 1 + 1 }}\",\"{{ i }}\",\"You can also create and import your own components.\"]},\"35\":{\"c\":[\"Guide\"]},\"36\":{\"c\":[\"Page config\",\"Guide\"]},\"37\":{\"h\":\"Cherry\"},\"38\":{\"h\":\"Heading 2\",\"t\":[\"Here is the content.\"]},\"39\":{\"h\":\"Heading 3\",\"t\":[\"Here is the content.\"]},\"40\":{\"c\":[\"Cherry\"]},\"41\":{\"c\":[\"red\",\"small\",\"round\"]},\"42\":{\"h\":\"Dragon Fruit\"},\"43\":{\"h\":\"Heading 2\",\"t\":[\"Here is the content.\"]},\"44\":{\"h\":\"Heading 3\",\"t\":[\"Here is the content.\"]},\"45\":{\"c\":[\"Dragon Fruit\",\"Fruit\"]},\"46\":{\"c\":[\"red\",\"big\"]},\"47\":{\"h\":\"Strawberry\"},\"48\":{\"h\":\"Heading 2\",\"t\":[\"Here is the content.\"]},\"49\":{\"h\":\"Heading 3\",\"t\":[\"Here is the content.\"]},\"50\":{\"c\":[\"Fruit\",\"Strawberry\"]},\"51\":{\"c\":[\"red\",\"small\"]},\"52\":{\"h\":\"Tomato\"},\"53\":{\"h\":\"Heading 2\",\"t\":[\"Here is the content.\"]},\"54\":{\"h\":\"Heading 3\",\"t\":[\"Here is the content.\"]},\"55\":{\"c\":[\"Vegetable\"]},\"56\":{\"c\":[\"red\",\"round\"]},\"57\":{\"h\":\"Apple 1\"},\"58\":{\"h\":\"Heading 2\",\"t\":[\"Here is the content.\"]},\"59\":{\"h\":\"Heading 3\",\"t\":[\"Here is the content.\"]},\"60\":{\"c\":[\"Apple\"]},\"61\":{\"c\":[\"red\",\"big\",\"round\"]},\"62\":{\"h\":\"Apple 2\",\"t\":[\"A apple article being stared.\"]},\"63\":{\"h\":\"Heading 2\",\"t\":[\"Here is the content.\"]},\"64\":{\"h\":\"Heading 3\",\"t\":[\"Here is the content.\"]},\"65\":{\"c\":[\"Apple\"]},\"66\":{\"c\":[\"red\",\"big\",\"round\"]},\"67\":{\"h\":\"Apple 3\"},\"68\":{\"h\":\"Heading 2\",\"t\":[\"Here is the content.\"]},\"69\":{\"h\":\"Heading 3\",\"t\":[\"Here is the content.\"]},\"70\":{\"c\":[\"Apple\",\"Fruit\"]},\"71\":{\"c\":[\"red\",\"big\",\"round\"]},\"72\":{\"h\":\"Apple 4\"},\"73\":{\"h\":\"Heading 2\",\"t\":[\"Here is the content.\"]},\"74\":{\"h\":\"Heading 3\",\"t\":[\"Here is the content.\"]},\"75\":{\"c\":[\"Apple\",\"Fruit\"]},\"76\":{\"c\":[\"red\",\"big\",\"round\"]},\"77\":{\"h\":\"Banana 1\"},\"78\":{\"h\":\"Heading 2\",\"t\":[\"Here is the content.\"]},\"79\":{\"h\":\"Heading 3\",\"t\":[\"Here is the content.\"]},\"80\":{\"c\":[\"Banana\",\"Fruit\"]},\"81\":{\"c\":[\"yellow\",\"curly\",\"long\"]},\"82\":{\"h\":\"Banana 2\",\"t\":[\"A banana article being stared with number 10.\"]},\"83\":{\"h\":\"Heading 2\",\"t\":[\"Here is the content.\"]},\"84\":{\"h\":\"Heading 3\",\"t\":[\"Here is the content.\"]},\"85\":{\"c\":[\"Banana\",\"Fruit\"]},\"86\":{\"c\":[\"yellow\",\"curly\",\"long\"]},\"87\":{\"h\":\"Banana 3\"},\"88\":{\"h\":\"Heading 2\",\"t\":[\"Here is the content.\"]},\"89\":{\"h\":\"Heading 3\",\"t\":[\"Here is the content.\"]},\"90\":{\"c\":[\"Banana\"]},\"91\":{\"c\":[\"yellow\",\"curly\",\"long\"]},\"92\":{\"h\":\"Banana 4\"},\"93\":{\"h\":\"Heading 2\",\"t\":[\"Here is the content.\"]},\"94\":{\"h\":\"Heading 3\",\"t\":[\"Here is the content.\"]},\"95\":{\"c\":[\"Banana\"]},\"96\":{\"c\":[\"yellow\",\"curly\",\"long\"]}},\"dirtCount\":0,\"index\":[[\"4\",{\"0\":{\"72\":1,\"92\":1}}],[\"3\",{\"0\":{\"39\":1,\"44\":1,\"49\":1,\"54\":1,\"59\":1,\"64\":1,\"67\":1,\"69\":1,\"74\":1,\"79\":1,\"84\":1,\"87\":1,\"89\":1,\"94\":1}}],[\"january\",{\"1\":{\"32\":1}}],[\"+\",{\"1\":{\"23\":1,\"34\":1}}],[\"^\",{\"1\":{\"23\":1}}],[\"^i\",{\"1\":{\"23\":1}}],[\"^r\",{\"1\":{\"23\":2}}],[\"^first\",{\"1\":{\"21\":2}}],[\"=\",{\"1\":{\"23\":1}}],[\"yellow\",{\"2\":{\"81\":1,\"86\":1,\"91\":1,\"96\":1}}],[\"y\",{\"1\":{\"23\":2}}],[\"y^\",{\"1\":{\"23\":2}}],[\"your\",{\"1\":{\"33\":2,\"34\":1}}],[\"you\",{\"1\":{\"0\":1,\"4\":1,\"10\":1,\"13\":2,\"14\":1,\"15\":2,\"31\":1,\"32\":1,\"33\":2,\"34\":2}}],[\"$$\",{\"1\":{\"23\":2}}],[\"round\",{\"2\":{\"41\":1,\"56\":1,\"61\":1,\"66\":1,\"71\":1,\"76\":1}}],[\"r\",{\"1\":{\"23\":3}}],[\"right\",{\"1\":{\"23\":3}}],[\"richer\",{\"1\":{\"18\":1}}],[\"red\",{\"2\":{\"41\":1,\"46\":1,\"51\":1,\"56\":1,\"61\":1,\"66\":1,\"71\":1,\"76\":1}}],[\"relative\",{\"1\":{\"33\":1}}],[\"related\",{\"1\":{\"0\":1}}],[\"regarded\",{\"1\":{\"30\":1,\"31\":1}}],[\"read\",{\"1\":{\"14\":1,\"15\":1,\"17\":1}}],[\"vegetable\",{\"2\":{\"55\":1}}],[\"vue\",{\"1\":{\"34\":2}}],[\"vuepress\",{\"0\":{\"17\":1},\"1\":{\"13\":2,\"15\":2,\"16\":1,\"17\":2,\"18\":1,\"33\":1}}],[\"view\",{\"1\":{\"19\":1,\"20\":1,\"21\":1,\"22\":1,\"23\":1,\"24\":1,\"25\":1,\"26\":1}}],[\"via\",{\"1\":{\"16\":1}}],[\"with\",{\"1\":{\"33\":1,\"82\":1}}],[\"will\",{\"1\":{\"16\":1,\"31\":1}}],[\"writing\",{\"1\":{\"17\":1,\"18\":1,\"32\":1}}],[\"write\",{\"1\":{\"13\":1,\"14\":1,\"33\":1}}],[\"which\",{\"1\":{\"16\":1,\"34\":1}}],[\"know\",{\"1\":{\"14\":1,\"15\":1}}],[\"generate\",{\"1\":{\"13\":2}}],[\"guide\",{\"1\":{\"32\":2},\"2\":{\"3\":1,\"5\":1,\"8\":1,\"11\":1,\"28\":1,\"35\":1,\"36\":1}}],[\"heading\",{\"0\":{\"38\":1,\"39\":1,\"43\":1,\"44\":1,\"48\":1,\"49\":1,\"53\":1,\"54\":1,\"58\":1,\"59\":1,\"63\":1,\"64\":1,\"68\":1,\"69\":1,\"73\":1,\"74\":1,\"78\":1,\"79\":1,\"83\":1,\"84\":1,\"88\":1,\"89\":1,\"93\":1,\"94\":1}}],[\"here\",{\"1\":{\"33\":1,\"38\":1,\"39\":1,\"43\":1,\"44\":1,\"48\":1,\"49\":1,\"53\":1,\"54\":1,\"58\":1,\"59\":1,\"63\":1,\"64\":1,\"68\":1,\"69\":1,\"73\":1,\"74\":1,\"78\":1,\"79\":1,\"83\":1,\"84\":1,\"88\":1,\"89\":1,\"93\":1,\"94\":1}}],[\"h1\",{\"1\":{\"31\":1}}],[\"h2o\",{\"1\":{\"26\":1}}],[\"hope\",{\"1\":{\"32\":1}}],[\"how\",{\"1\":{\"14\":1}}],[\"homepage\",{\"1\":{\"0\":1}}],[\"home\",{\"0\":{\"0\":1},\"1\":{\"0\":2}}],[\"has\",{\"1\":{\"10\":1,\"17\":1,\"21\":1}}],[\"means\",{\"1\":{\"34\":1}}],[\"meta\",{\"1\":{\"10\":1}}],[\"ms\",{\"1\":{\"32\":1}}],[\"more\",{\"1\":{\"18\":1,\"30\":1}}],[\"md\",{\"1\":{\"18\":1}}],[\"markdown\",{\"0\":{\"13\":1,\"14\":1,\"15\":1,\"16\":1},\"1\":{\"13\":2,\"14\":3,\"15\":1,\"16\":3,\"17\":2,\"18\":1,\"31\":2,\"32\":1,\"33\":2,\"34\":2},\"2\":{\"29\":1}}],[\"matter\",{\"1\":{\"0\":1}}],[\"2020\",{\"1\":{\"32\":1}}],[\"2\",{\"0\":{\"38\":1,\"43\":1,\"48\":1,\"53\":1,\"58\":1,\"62\":1,\"63\":1,\"68\":1,\"73\":1,\"78\":1,\"82\":1,\"83\":1,\"88\":1,\"93\":1},\"1\":{\"7\":14}}],[\"10\",{\"1\":{\"82\":1}}],[\"19th\",{\"1\":{\"26\":1}}],[\"1\",{\"0\":{\"57\":1,\"77\":1},\"1\":{\"7\":12,\"23\":1,\"32\":1,\"34\":2}}],[\"e\",{\"1\":{\"33\":1}}],[\"excerpt\",{\"1\":{\"30\":1}}],[\"extends\",{\"1\":{\"18\":1}}],[\"extended\",{\"1\":{\"17\":1}}],[\"extensions\",{\"1\":{\"16\":1,\"17\":2}}],[\"extension\",{\"0\":{\"16\":1}}],[\"easily\",{\"1\":{\"13\":1}}],[\"each\",{\"1\":{\"10\":1,\"15\":1,\"34\":1}}],[\"enrich\",{\"1\":{\"17\":1}}],[\"enhancement\",{\"0\":{\"17\":1,\"18\":1,\"25\":1}}],[\"enhance\",{\"0\":{\"13\":1},\"1\":{\"18\":1}}],[\"encryption\",{\"0\":{\"7\":1},\"2\":{\"9\":1}}],[\"elements\",{\"1\":{\"10\":1}}],[\"edit\",{\"1\":{\"4\":1}}],[\"using\",{\"1\":{\"15\":1,\"18\":1}}],[\"use\",{\"1\":{\"0\":1,\"13\":1,\"33\":2,\"34\":1}}],[\"update\",{\"1\":{\"4\":1,\"10\":1}}],[\"long\",{\"2\":{\"81\":1,\"86\":1,\"91\":1,\"96\":1}}],[\"log\",{\"1\":{\"23\":2}}],[\"left\",{\"1\":{\"23\":3}}],[\"learner\",{\"1\":{\"14\":1}}],[\"links\",{\"1\":{\"33\":2}}],[\"link\",{\"1\":{\"4\":2}}],[\"layout\",{\"0\":{\"4\":1,\"10\":1},\"1\":{\"0\":2,\"4\":1,\"10\":1},\"2\":{\"12\":1}}],[\"number\",{\"1\":{\"82\":1}}],[\"nd\",{\"1\":{\"33\":1}}],[\"need\",{\"1\":{\"15\":1}}],[\"new\",{\"1\":{\"14\":1}}],[\"next\",{\"1\":{\"4\":1}}],[\"navbar\",{\"1\":{\"4\":1,\"10\":1}}],[\"nothins\",{\"1\":{\"1\":1}}],[\"own\",{\"1\":{\"34\":1}}],[\"omega^i\",{\"1\":{\"23\":1}}],[\"omega^r\",{\"1\":{\"23\":1}}],[\"omega\",{\"1\":{\"23\":4}}],[\"or\",{\"1\":{\"13\":1}}],[\"options\",{\"1\":{\"10\":1}}],[\"of\",{\"1\":{\"4\":1,\"10\":1}}],[\"on\",{\"1\":{\"4\":1}}],[\"curly\",{\"2\":{\"81\":1,\"86\":1,\"91\":1,\"96\":1}}],[\"customize\",{\"1\":{\"10\":1}}],[\"cherry\",{\"0\":{\"37\":1},\"2\":{\"40\":1}}],[\"category\",{\"1\":{\"32\":1}}],[\"can\",{\"1\":{\"4\":1,\"10\":2,\"13\":2,\"31\":1,\"32\":1,\"33\":1,\"34\":2}}],[\"cdots\",{\"1\":{\"23\":1}}],[\"create\",{\"1\":{\"13\":1,\"34\":1}}],[\"components\",{\"0\":{\"34\":1},\"1\":{\"34\":1}}],[\"component\",{\"0\":{\"27\":1},\"1\":{\"34\":1}}],[\"comments\",{\"1\":{\"10\":1}}],[\"comment\",{\"1\":{\"4\":1,\"30\":1}}],[\"color\",{\"1\":{\"25\":1}}],[\"code\",{\"0\":{\"19\":1}}],[\"concept\",{\"1\":{\"15\":1}}],[\"config\",{\"0\":{\"15\":1,\"30\":1},\"1\":{\"32\":1},\"2\":{\"36\":1}}],[\"configuration\",{\"1\":{\"0\":1,\"15\":1}}],[\"converted\",{\"1\":{\"34\":1}}],[\"convert\",{\"1\":{\"13\":1}}],[\"contain\",{\"1\":{\"10\":1}}],[\"contains\",{\"1\":{\"10\":1}}],[\"contents\",{\"1\":{\"10\":1}}],[\"content\",{\"0\":{\"33\":1},\"1\":{\"7\":1,\"16\":1,\"21\":1,\"30\":1,\"38\":1,\"39\":1,\"43\":1,\"44\":1,\"48\":1,\"49\":1,\"53\":1,\"54\":1,\"58\":1,\"59\":1,\"63\":1,\"64\":1,\"68\":1,\"69\":1,\"73\":1,\"74\":1,\"78\":1,\"79\":1,\"83\":1,\"84\":1,\"88\":1,\"89\":1,\"93\":1,\"94\":1}}],[\"contributors\",{\"1\":{\"4\":1,\"10\":1}}],[\"public\",{\"1\":{\"33\":1}}],[\"place\",{\"1\":{\"33\":1}}],[\"plan\",{\"1\":{\"24\":2}}],[\"plugin\",{\"1\":{\"18\":1}}],[\"plugins\",{\"1\":{\"16\":1}}],[\"please\",{\"1\":{\"0\":1,\"14\":1,\"17\":1,\"33\":1}}],[\"provides\",{\"1\":{\"18\":1}}],[\"print\",{\"1\":{\"10\":1}}],[\"prev\",{\"1\":{\"4\":1}}],[\"partial\",{\"1\":{\"23\":1}}],[\"partial^r\",{\"1\":{\"23\":1}}],[\"parsed\",{\"1\":{\"16\":1}}],[\"paragraph\",{\"1\":{\"7\":26}}],[\"pages\",{\"1\":{\"13\":2}}],[\"page\",{\"0\":{\"1\":1,\"30\":1,\"31\":1,\"32\":1,\"33\":1},\"1\":{\"0\":2,\"4\":4,\"10\":2,\"15\":1,\"30\":1,\"31\":2,\"32\":2,\"34\":1},\"2\":{\"36\":1}}],[\"dragon\",{\"0\":{\"42\":1},\"2\":{\"45\":1}}],[\"date\",{\"1\":{\"32\":1}}],[\"darkmode\",{\"1\":{\"10\":1}}],[\"detail\",{\"1\":{\"19\":1,\"20\":1,\"21\":1,\"22\":1,\"23\":1,\"24\":1,\"25\":1,\"26\":1}}],[\"demo\",{\"0\":{\"2\":1},\"1\":{\"0\":1,\"4\":1,\"14\":1}}],[\"don\",{\"1\":{\"14\":1,\"15\":1}}],[\"document\",{\"1\":{\"17\":1}}],[\"documentation\",{\"1\":{\"13\":1}}],[\"docs\",{\"1\":{\"0\":1}}],[\"directory\",{\"1\":{\"33\":1}}],[\"different\",{\"1\":{\"13\":1}}],[\"disables\",{\"1\":{\"4\":1}}],[\"disable\",{\"1\":{\"4\":1},\"2\":{\"6\":1}}],[\"disabling\",{\"0\":{\"4\":1}}],[\"first\",{\"1\":{\"31\":1}}],[\"file\",{\"1\":{\"13\":1}}],[\"files\",{\"0\":{\"22\":1},\"1\":{\"13\":2,\"33\":1}}],[\"fruit\",{\"0\":{\"42\":1},\"2\":{\"45\":2,\"50\":1,\"70\":1,\"75\":1,\"80\":1,\"85\":1}}],[\"free\",{\"1\":{\"33\":1}}],[\"frac\",{\"1\":{\"23\":4}}],[\"from\",{\"1\":{\"13\":1}}],[\"frontmatter\",{\"1\":{\"4\":1,\"10\":1,\"15\":4,\"31\":1,\"32\":1}}],[\"front\",{\"1\":{\"0\":1}}],[\"footnote\",{\"0\":{\"21\":1},\"1\":{\"21\":2}}],[\"footer\",{\"1\":{\"4\":1,\"10\":1}}],[\"following\",{\"1\":{\"4\":1,\"10\":1}}],[\"for\",{\"1\":{\"0\":1,\"15\":1,\"17\":1,\"33\":1}}],[\"functions\",{\"1\":{\"18\":1}}],[\"function\",{\"1\":{\"4\":1}}],[\"features\",{\"0\":{\"2\":1,\"4\":1},\"1\":{\"4\":1}}],[\"import\",{\"1\":{\"34\":1}}],[\"important\",{\"1\":{\"15\":1}}],[\"images\",{\"1\":{\"33\":2}}],[\"image\",{\"0\":{\"25\":1}}],[\"i\",{\"1\":{\"23\":1,\"33\":1,\"34\":1}}],[\"i+1\",{\"1\":{\"23\":1}}],[\"i=1\",{\"1\":{\"23\":1}}],[\"if\",{\"1\":{\"14\":1,\"15\":1}}],[\"it\",{\"1\":{\"13\":1,\"15\":1,\"16\":2}}],[\"into\",{\"1\":{\"34\":1}}],[\"introduce\",{\"1\":{\"15\":1}}],[\"introduction\",{\"0\":{\"14\":1},\"1\":{\"15\":1}}],[\"intro\",{\"0\":{\"1\":1},\"1\":{\"14\":1}}],[\"include\",{\"0\":{\"22\":1}}],[\"including\",{\"1\":{\"10\":1}}],[\"information\",{\"0\":{\"32\":1},\"1\":{\"4\":1,\"10\":2,\"32\":1}}],[\"in\",{\"1\":{\"0\":1,\"10\":1,\"15\":1,\"16\":1,\"17\":1,\"31\":2,\"32\":1,\"33\":1,\"34\":1}}],[\"is\",{\"1\":{\"0\":1,\"4\":1,\"15\":1,\"21\":1,\"30\":1,\"32\":3,\"34\":1,\"38\":1,\"39\":1,\"43\":1,\"44\":1,\"48\":1,\"49\":1,\"53\":1,\"54\":1,\"58\":1,\"59\":1,\"63\":1,\"64\":1,\"68\":1,\"69\":1,\"73\":1,\"74\":1,\"78\":1,\"79\":1,\"83\":1,\"84\":1,\"88\":1,\"89\":1,\"93\":1,\"94\":1}}],[\"big\",{\"2\":{\"46\":1,\"61\":1,\"66\":1,\"71\":1,\"76\":1}}],[\"b\",{\"1\":{\"24\":1}}],[\"being\",{\"1\":{\"62\":1,\"82\":1}}],[\"besides\",{\"1\":{\"33\":1}}],[\"before\",{\"1\":{\"30\":1}}],[\"be\",{\"1\":{\"16\":1,\"31\":1}}],[\"banana\",{\"0\":{\"77\":1,\"82\":1,\"87\":1,\"92\":1},\"1\":{\"82\":1},\"2\":{\"80\":1,\"85\":1,\"90\":1,\"95\":1}}],[\"basically\",{\"1\":{\"13\":1}}],[\"back\",{\"1\":{\"4\":1,\"10\":1}}],[\"button\",{\"1\":{\"4\":1,\"10\":3}}],[\"breadcrumb\",{\"1\":{\"4\":1,\"10\":1}}],[\"by\",{\"1\":{\"4\":1,\"16\":1,\"18\":1}}],[\"both\",{\"1\":{\"0\":1}}],[\"bloghome\",{\"1\":{\"0\":1}}],[\"blog\",{\"0\":{\"0\":1},\"1\":{\"0\":2,\"13\":1}}],[\"small\",{\"2\":{\"41\":1,\"51\":1}}],[\"stared\",{\"1\":{\"62\":1,\"82\":1}}],[\"starting\",{\"1\":{\"33\":1}}],[\"strawberry\",{\"0\":{\"47\":1},\"2\":{\"50\":1}}],[\"structure\",{\"1\":{\"13\":1}}],[\"s\",{\"1\":{\"31\":1,\"32\":1}}],[\"scheme\",{\"1\":{\"25\":1}}],[\"subscript\",{\"0\":{\"26\":1}}],[\"superscript\",{\"0\":{\"26\":1}}],[\"support\",{\"1\":{\"25\":1}}],[\"supports\",{\"1\":{\"16\":1}}],[\"sum\",{\"1\":{\"23\":1}}],[\"syntax\",{\"1\":{\"16\":1,\"17\":1,\"18\":1,\"34\":1}}],[\"size\",{\"1\":{\"25\":1}}],[\"sites\",{\"1\":{\"13\":1}}],[\"sidebar\",{\"1\":{\"4\":1,\"10\":1}}],[\"so\",{\"1\":{\"13\":2}}],[\"some\",{\"1\":{\"4\":1}}],[\"say\",{\"1\":{\"1\":1}}],[\"see\",{\"1\":{\"0\":1}}],[\"setting\",{\"1\":{\"4\":1,\"25\":1}}],[\"set\",{\"1\":{\"0\":1,\"31\":1,\"32\":1}}],[\"should\",{\"1\":{\"0\":1,\"13\":1}}],[\"tags\",{\"1\":{\"32\":1}}],[\"tasklist\",{\"0\":{\"24\":1}}],[\"tabs\",{\"0\":{\"19\":1,\"20\":1}}],[\"table\",{\"1\":{\"10\":1}}],[\"tex\",{\"0\":{\"23\":1}}],[\"text\",{\"1\":{\"7\":26,\"21\":1}}],[\"t\",{\"1\":{\"14\":1,\"15\":1}}],[\"title\",{\"0\":{\"31\":1},\"1\":{\"10\":1,\"31\":5}}],[\"time\",{\"1\":{\"4\":1,\"10\":1}}],[\"that\",{\"1\":{\"4\":1,\"13\":1}}],[\"these\",{\"1\":{\"17\":1}}],[\"them\",{\"1\":{\"10\":1,\"13\":1}}],[\"theme\",{\"0\":{\"18\":1},\"1\":{\"10\":2,\"18\":1}}],[\"the\",{\"1\":{\"0\":1,\"4\":4,\"7\":1,\"10\":3,\"16\":1,\"18\":1,\"31\":1,\"32\":2,\"38\":1,\"39\":1,\"43\":1,\"44\":1,\"48\":1,\"49\":1,\"53\":1,\"54\":1,\"58\":1,\"59\":1,\"63\":1,\"64\":1,\"68\":1,\"69\":1,\"73\":1,\"74\":1,\"78\":1,\"79\":1,\"83\":1,\"84\":1,\"88\":1,\"89\":1,\"93\":1,\"94\":1}}],[\"this\",{\"1\":{\"0\":2,\"4\":1,\"21\":2}}],[\"true\",{\"1\":{\"0\":1}}],[\"tomato\",{\"0\":{\"52\":1}}],[\"toc\",{\"1\":{\"10\":1}}],[\"top\",{\"1\":{\"4\":1,\"10\":1}}],[\"to\",{\"1\":{\"0\":1,\"1\":1,\"4\":1,\"10\":1,\"13\":3,\"14\":1,\"15\":1,\"17\":1,\"33\":1}}],[\"apple\",{\"0\":{\"57\":1,\"62\":1,\"67\":1,\"72\":1},\"1\":{\"62\":1},\"2\":{\"60\":1,\"65\":1,\"70\":1,\"75\":1}}],[\"absolute\",{\"1\":{\"33\":1}}],[\"author\",{\"1\":{\"32\":1}}],[\"assets\",{\"1\":{\"33\":1}}],[\"as\",{\"1\":{\"30\":1,\"31\":1}}],[\"are\",{\"1\":{\"14\":1,\"32\":1,\"33\":1}}],[\"article\",{\"0\":{\"7\":1},\"1\":{\"7\":1,\"62\":1,\"82\":1}}],[\"according\",{\"1\":{\"13\":1}}],[\"actual\",{\"1\":{\"7\":1}}],[\"also\",{\"1\":{\"10\":2,\"31\":1,\"34\":1}}],[\"an\",{\"1\":{\"4\":1,\"15\":1}}],[\"and\",{\"0\":{\"4\":1,\"26\":1},\"1\":{\"0\":1,\"4\":1,\"10\":3,\"13\":1,\"14\":2,\"18\":1,\"25\":1,\"32\":1,\"34\":1}}],[\"a\",{\"1\":{\"0\":1,\"14\":1,\"24\":1,\"34\":1,\"62\":1,\"82\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n,id:o}})=>{const u=bt[s];e==="suggest"?self.postMessage([e,o,tt(t,u,n)]):e==="search"?self.postMessage([e,o,Z(t,u,n)]):self.postMessage({suggestions:[e,o,tt(t,u,n)],results:[e,o,Z(t,u,n)]})};
//# sourceMappingURL=index.js.map
